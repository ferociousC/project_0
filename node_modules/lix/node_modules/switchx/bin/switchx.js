#!/usr/bin/env node

// Generated by Haxe 3.4.2 (git build development @ e033003)
if (typeof process !== "undefined") if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");

(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var DateTools = function() { };
DateTools.__name__ = true;
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new js__$Boot_HaxeError("Date.format %" + e + "- not implemented yet.");
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len1 = f.length - p;
	r_b += len1 == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len1);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedLeft: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			var tmp = this.r;
			var tmp1 = len < 0 ? s : HxOverrides.substr(s,0,pos + len);
			this.r.m = tmp.exec(tmp1);
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = true;
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Sys = function() { };
Sys.__name__ = true;
Sys.systemName = function() {
	var _g = process.platform;
	switch(_g) {
	case "darwin":
		return "Mac";
	case "freebsd":
		return "BSD";
	case "linux":
		return "Linux";
	case "win32":
		return "Windows";
	default:
		var other = _g;
		return other;
	}
};
var haxe_io_Output = function() { };
haxe_io_Output.__name__ = true;
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeString: function(s) {
		var b = haxe_io_Bytes.ofString(s);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
};
var _$Sys_FileOutput = function(fd) {
	this.fd = fd;
};
_$Sys_FileOutput.__name__ = true;
_$Sys_FileOutput.__super__ = haxe_io_Output;
_$Sys_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		js_node_Fs.writeSync(this.fd,String.fromCharCode(c));
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		return js_node_Fs.writeSync(this.fd,new js_node_buffer_Buffer(data.buffer,data.byteOffset,data.byteLength),pos,len);
	}
	,writeString: function(s) {
		js_node_Fs.writeSync(this.fd,s);
	}
	,flush: function() {
		js_node_Fs.fsyncSync(this.fd);
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileOutput
});
var haxe_io_Input = function() { };
haxe_io_Input.__name__ = true;
var _$Sys_FileInput = function(fd) {
	this.fd = fd;
};
_$Sys_FileInput.__name__ = true;
_$Sys_FileInput.__super__ = haxe_io_Input;
_$Sys_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		var buf = new js_node_buffer_Buffer(1);
		try {
			js_node_Fs.readSync(this.fd,buf,0,1,null);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(e.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e));
			}
		}
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = new js_node_buffer_Buffer(data.buffer,data.byteOffset,data.byteLength);
		try {
			return js_node_Fs.readSync(this.fd,buf,pos,len,null);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(e.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e));
			}
		}
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileInput
});
var haxe_StackItem = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = true;
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		b.b += cname == null ? "null" : "" + cname;
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_Either = { __ename__ : true, __constructs__ : ["Left","Right"] };
haxe_ds_Either.Left = function(v) { var $x = ["Left",0,v]; $x.__enum__ = haxe_ds_Either; $x.toString = $estr; return $x; };
haxe_ds_Either.Right = function(v) { var $x = ["Right",1,v]; $x.__enum__ = haxe_ds_Either; $x.toString = $estr; return $x; };
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = { __ename__ : true, __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; $x.toString = $estr; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.toString = $estr;
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Eof = function() {
};
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
haxe_io_Path.__name__ = true;
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) {
		return "";
	}
	return s.dir;
};
haxe_io_Path.join = function(paths) {
	var paths1 = paths.filter(function(s) {
		if(s != null) {
			return s != "";
		} else {
			return false;
		}
	});
	if(paths1.length == 0) {
		return "";
	}
	var path = paths1[0];
	var _g1 = 1;
	var _g = paths1.length;
	while(_g1 < _g) {
		var i = _g1++;
		path = haxe_io_Path.addTrailingSlash(path);
		path += paths1[i];
	}
	return haxe_io_Path.normalize(path);
};
haxe_io_Path.normalize = function(path) {
	var slash = "/";
	path = path.split("\\").join(slash);
	if(path == slash) {
		return slash;
	}
	var target = [];
	var _g = 0;
	var _g1 = path.split(slash);
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") {
			target.pop();
		} else if(token != ".") {
			target.push(token);
		}
	}
	var tmp = target.join(slash);
	var regex_r = new RegExp("([^:])/+","g".split("u").join(""));
	var result = tmp.replace(regex_r,"$1" + slash);
	var acc_b = "";
	var colon = false;
	var slashes = false;
	var _g11 = 0;
	var _g2 = tmp.length;
	while(_g11 < _g2) {
		var i = _g11++;
		var _g21 = tmp.charCodeAt(i);
		switch(_g21) {
		case 47:
			if(!colon) {
				slashes = true;
			} else {
				var i1 = _g21;
				colon = false;
				if(slashes) {
					acc_b += "/";
					slashes = false;
				}
				acc_b += String.fromCharCode(i1);
			}
			break;
		case 58:
			acc_b += ":";
			colon = true;
			break;
		default:
			var i2 = _g21;
			colon = false;
			if(slashes) {
				acc_b += "/";
				slashes = false;
			}
			acc_b += String.fromCharCode(i2);
		}
	}
	return acc_b;
};
haxe_io_Path.addTrailingSlash = function(path) {
	if(path.length == 0) {
		return "/";
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		if(c2 != path.length - 1) {
			return path + "\\";
		} else {
			return path;
		}
	} else if(c1 != path.length - 1) {
		return path + "/";
	} else {
		return path;
	}
};
haxe_io_Path.removeTrailingSlashes = function(path) {
	try {
		while(true) {
			var _g = HxOverrides.cca(path,path.length - 1);
			if(_g == null) {
				throw "__break__";
			} else {
				switch(_g) {
				case 47:case 92:
					path = HxOverrides.substr(path,0,-1);
					break;
				default:
					throw "__break__";
				}
			}
		}
	} catch( e ) { if( e != "__break__" ) throw e; }
	return path;
};
haxe_io_Path.isAbsolute = function(path) {
	if(StringTools.startsWith(path,"/")) {
		return true;
	}
	if(path.charAt(1) == ":") {
		return true;
	}
	if(StringTools.startsWith(path,"\\\\")) {
		return true;
	}
	return false;
};
haxe_io_Path.prototype = {
	__class__: haxe_io_Path
};
var haxeshim__$Env_Env_$Impl_$ = {};
haxeshim__$Env_Env_$Impl_$.__name__ = true;
haxeshim__$Env_Env_$Impl_$.ofVars = function(vars) {
	var this1 = { };
	var ret = this1;
	var _g = 0;
	var _g1 = Reflect.fields(vars);
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		ret[haxeshim_Os.IS_WINDOWS ? k.toUpperCase() : k] = vars[k];
	}
	var this2 = ret;
	return this2;
};
haxeshim__$Env_Env_$Impl_$.keys = function(this1) {
	if(this1 == null) {
		return [];
	} else {
		return Reflect.fields(this1);
	}
};
haxeshim__$Env_Env_$Impl_$.ofMap = function(map) {
	var this1 = { };
	var ret = this1;
	var k = map.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		ret[haxeshim_Os.IS_WINDOWS ? k1.toUpperCase() : k1] = __map_reserved[k1] != null ? map.getReserved(k1) : map.h[k1];
	}
	var this2 = ret;
	return this2;
};
haxeshim__$Env_Env_$Impl_$.vars = function(this1) {
	return this1;
};
haxeshim__$Env_Env_$Impl_$.toVars = function(this1) {
	return Reflect.copy(this1);
};
haxeshim__$Env_Env_$Impl_$._new = function(vars) {
	var this1 = vars;
	return this1;
};
haxeshim__$Env_Env_$Impl_$.get = function(this1,s) {
	return this1[haxeshim_Os.IS_WINDOWS ? s.toUpperCase() : s];
};
haxeshim__$Env_Env_$Impl_$.normalize = function(s) {
	if(haxeshim_Os.IS_WINDOWS) {
		return s.toUpperCase();
	} else {
		return s;
	}
};
haxeshim__$Env_Env_$Impl_$.mergeInto = function(this1,that) {
	var _g = haxeshim__$Env_Env_$Impl_$.vars(that);
	if(this1 == null) {
		var v = _g;
		var this2 = v;
		return this2;
	} else if(_g == null) {
		var v1 = this1;
		var this3 = v1;
		return this3;
	} else {
		var a = this1;
		var b = _g;
		var this4 = { };
		var ret = this4;
		var _g1 = 0;
		var _g11 = [b,a];
		while(_g1 < _g11.length) {
			var vars = _g11[_g1];
			++_g1;
			var _g2 = 0;
			var _g3 = Reflect.fields(vars);
			while(_g2 < _g3.length) {
				var k = _g3[_g2];
				++_g2;
				ret[k] = vars[k];
			}
		}
		var this5 = ret;
		return this5;
	}
};
var haxeshim_Exec = function() { };
haxeshim_Exec.__name__ = true;
haxeshim_Exec.mergeEnv = function(env) {
	return haxeshim__$Env_Env_$Impl_$.mergeInto(env,haxeshim__$Env_Env_$Impl_$.ofVars(process.env));
};
haxeshim_Exec.async = function(cmd,cwd,args,env) {
	return js_node_ChildProcess.spawn(cmd,args,{ cwd : cwd, stdio : "inherit", env : haxeshim__$Env_Env_$Impl_$.toVars(haxeshim_Exec.mergeEnv(env))});
};
haxeshim_Exec.shell = function(cmd,cwd,env) {
	try {
		return tink_core_Outcome.Success(js_node_ChildProcess.execSync(cmd,{ cwd : cwd, stdio : "inherit", env : haxeshim__$Env_Env_$Impl_$.toVars(haxeshim_Exec.mergeEnv(env))}));
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return tink_core_Outcome.Failure(new tink_core_TypedError(e.status,"Failed to invoke `" + cmd + "` because " + Std.string(e),{ fileName : "Exec.hx", lineNumber : 20, className : "haxeshim.Exec", methodName : "shell"}));
	}
};
haxeshim_Exec.sync = function(cmd,cwd,args,env) {
	var _g = js_node_ChildProcess.spawnSync(cmd,args,{ cwd : cwd, stdio : "inherit", env : haxeshim__$Env_Env_$Impl_$.toVars(haxeshim_Exec.mergeEnv(env))});
	var x = _g;
	if(x.error == null) {
		return tink_core_Outcome.Success(x.status);
	} else {
		var e = _g.error;
		return tink_core_Outcome.Failure(new tink_core_TypedError(null,"Failed to call " + cmd + " because " + Std.string(e),{ fileName : "Exec.hx", lineNumber : 27, className : "haxeshim.Exec", methodName : "sync"}));
	}
};
haxeshim_Exec["eval"] = function(cmd,cwd,args,env) {
	var _g = js_node_ChildProcess.spawnSync(cmd,args,{ cwd : cwd, env : haxeshim__$Env_Env_$Impl_$.toVars(haxeshim_Exec.mergeEnv(env))});
	var x = _g;
	if(x.error == null) {
		return tink_core_Outcome.Success({ status : x.status, stdout : x.stdout.toString(), stderr : x.stderr.toString()});
	} else {
		var e = _g.error;
		return tink_core_Outcome.Failure(new tink_core_TypedError(null,"Failed to call " + cmd + " because " + Std.string(e),{ fileName : "Exec.hx", lineNumber : 39, className : "haxeshim.Exec", methodName : "eval"}));
	}
};
var haxeshim_Os = function() { };
haxeshim_Os.__name__ = true;
haxeshim_Os.slashes = function(path) {
	if(haxeshim_Os.IS_WINDOWS) {
		return StringTools.replace(path,"/","\\");
	} else {
		return path;
	}
};
var haxeshim_HaxeInstallation = function(path,version,haxelibRepo) {
	this.path = path;
	this.version = version;
	this.compiler = "" + path + "/haxe" + haxeshim_HaxeInstallation.EXT;
	this.haxelib = "" + path + "/haxelib" + haxeshim_HaxeInstallation.EXT;
	this.stdLib = "" + path + "/std";
	this.haxelibRepo = haxelibRepo;
};
haxeshim_HaxeInstallation.__name__ = true;
haxeshim_HaxeInstallation.prototype = {
	env: function() {
		var ret = haxeshim__$Env_Env_$Impl_$.ofVars({ HAXE_STD_PATH : this.stdLib, HAXEPATH : this.path, HAXELIB_PATH : this.haxelibRepo, HAXE_VERSION : this.version});
		return haxeshim__$Env_Env_$Impl_$.mergeInto(ret,haxeshim_Neko.ENV);
	}
	,__class__: haxeshim_HaxeInstallation
};
var haxeshim__$LibResolution_LibResolution_$Impl_$ = {};
haxeshim__$LibResolution_LibResolution_$Impl_$.__name__ = true;
haxeshim__$LibResolution_LibResolution_$Impl_$.parse = function(s) {
	switch(s) {
	case "haxelib":
		return tink_core_Outcome.Success("haxelib");
	case "mixed":
		return tink_core_Outcome.Success("mixed");
	case "scoped":
		return tink_core_Outcome.Success("scoped");
	default:
		return tink_core_Outcome.Failure(new tink_core_TypedError(422,"Invalid lib resolution strategy `" + s + "`",{ fileName : "LibResolution.hx", lineNumber : 15, className : "haxeshim._LibResolution.LibResolution_Impl_", methodName : "parse"}));
	}
};
var haxeshim_Scope = function(haxeshimRoot,isGlobal,scopeDir,cwd) {
	this.haxeshimRoot = haxeshimRoot;
	this.isGlobal = isGlobal;
	this.scopeDir = scopeDir;
	this.scopeLibDir = "" + scopeDir + "/haxe_libraries";
	this.cwd = cwd;
	this.configFile = "" + scopeDir + "/" + haxeshim_Scope.CONFIG_FILE;
	this.versionDir = "" + haxeshimRoot + "/versions";
	this.haxelibRepo = "" + haxeshimRoot + "/haxelib";
	this.libCache = "" + haxeshimRoot + "/haxe_libraries";
	this.reload();
};
haxeshim_Scope.__name__ = true;
haxeshim_Scope.create = function(at,config) {
	js_node_Fs.writeFileSync("" + at + "/" + haxeshim_Scope.CONFIG_FILE,JSON.stringify(config));
};
haxeshim_Scope.exists = function(at) {
	return sys_FileSystem.exists("" + at + "/" + haxeshim_Scope.CONFIG_FILE);
};
haxeshim_Scope.seek = function(options) {
	if(options == null) {
		options = { };
	}
	var cwd;
	var _g = options.cwd;
	if(_g == null) {
		cwd = process.cwd();
	} else {
		var v = _g;
		cwd = v;
	}
	var startLookingIn;
	var _g1 = options.startLookingIn;
	if(_g1 == null) {
		startLookingIn = cwd;
	} else {
		var v1 = _g1;
		startLookingIn = v1;
	}
	var haxeshimRoot;
	var _g2 = options.haxeshimRoot;
	if(_g2 == null) {
		haxeshimRoot = haxeshim_Scope.DEFAULT_ROOT;
	} else {
		var v2 = _g2;
		haxeshimRoot = v2;
	}
	var f = function(haxeshimRoot1,isGlobal,scopeDir,cwd1) {
		return new haxeshim_Scope(haxeshimRoot1,isGlobal,scopeDir,cwd1);
	};
	var a1 = haxeshimRoot;
	var a4 = cwd;
	var make = function(a2,a3) {
		return f(a1,a2,a3,a4);
	};
	var $global = function() {
		return make(true,haxeshimRoot);
	};
	var dig = null;
	dig = function(cur) {
		var _hx_tmp;
		var _hx_tmp1;
		_hx_tmp = sys_FileSystem.exists("" + cur + "/" + haxeshim_Scope.CONFIG_FILE);
		if(_hx_tmp == true) {
			return make(false,cur);
		} else {
			switch(cur) {
			case "":case "/":
				return $global();
			default:
				_hx_tmp1 = cur.split(":");
				if(_hx_tmp1.length == 2) {
					if(_hx_tmp1[1] == "") {
						var drive = _hx_tmp1[0];
						if(haxeshim_Os.IS_WINDOWS && drive.length == 1) {
							return $global();
						} else {
							var dig1 = haxe_io_Path.removeTrailingSlashes(haxe_io_Path.directory(cur));
							return dig(dig1);
						}
					} else {
						var dig2 = haxe_io_Path.removeTrailingSlashes(haxe_io_Path.directory(cur));
						return dig(dig2);
					}
				} else {
					var dig3 = haxe_io_Path.removeTrailingSlashes(haxe_io_Path.directory(cur));
					return dig(dig3);
				}
			}
		}
	};
	var dig4 = dig;
	return dig4(haxe_io_Path.removeTrailingSlashes(js_node_Path.resolve(startLookingIn)));
};
haxeshim_Scope.prototype = {
	reload: function() {
		var src;
		try {
			src = js_node_Fs.readFileSync(this.configFile,{ encoding : "utf8"});
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(this.isGlobal) {
				throw new js__$Boot_HaxeError("Global config file " + this.configFile + " does not exist or cannot be opened");
			} else {
				throw new js__$Boot_HaxeError("Unable to open file " + this.configFile + " because " + Std.string(e));
			}
		}
		var tmp;
		try {
			tmp = JSON.parse(src);
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			new _$Sys_FileOutput(2).writeString("Invalid JSON in file " + this.configFile + ":\n\n" + src + "\n\n");
			throw js__$Boot_HaxeError.wrap(e1);
		}
		this.config = tmp;
		if(this.config.version == null) {
			throw new js__$Boot_HaxeError("No version set in " + this.configFile);
		}
		if(this.config.resolveLibs == null) {
			this.config.resolveLibs = this.isGlobal ? "mixed" : "scoped";
		}
		var _g = this.config.resolveLibs;
		switch(_g) {
		case "haxelib":case "mixed":case "scoped":
			break;
		default:
			var v = _g;
			throw new js__$Boot_HaxeError("invalid value " + v + " for `resolveLibs` in " + this.configFile);
		}
		this.haxeInstallation = this.getInstallation(this.config.version);
		this.resolver = new haxeshim_Resolver(this.cwd,this.scopeLibDir,this.config.resolveLibs,$bind(this,this.getDefault));
	}
	,getDefault: function(variable) {
		if(variable == "HAXESHIM_LIBCACHE") {
			return this.libCache;
		} else {
			return null;
		}
	}
	,'delete': function() {
		js_node_Fs.unlinkSync(this.configFile);
	}
	,reconfigure: function(changed) {
		var _g = 0;
		var _g1 = Reflect.fields(changed);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.config[f] = Reflect.field(changed,f);
		}
		js_node_Fs.writeFileSync(this.configFile,JSON.stringify(this.config,null,"  "));
	}
	,path: function(v) {
		if(haxe_io_Path.isAbsolute(v)) {
			return haxe_ds_Option.Some(v);
		} else if(StringTools.startsWith(v,"./") || StringTools.startsWith(v,"../")) {
			return haxe_ds_Option.Some("" + this.cwd + "/" + v);
		} else {
			return haxe_ds_Option.None;
		}
	}
	,getInstallation: function(version) {
		var _g = this.path(version);
		switch(_g[1]) {
		case 0:
			var path = _g[2];
			return new haxeshim_HaxeInstallation(path,version,this.haxelibRepo);
		case 1:
			return new haxeshim_HaxeInstallation("" + this.versionDir + "/" + version,version,this.haxelibRepo);
		}
	}
	,resolveThroughHaxelib: function(libs) {
		var _g = haxeshim_Exec["eval"](this.haxeInstallation.haxelib,this.cwd,["path"].concat(libs),this.haxeInstallation.env());
		switch(_g[1]) {
		case 0:
			if(_g[2].status == 0) {
				var stdout = _g[2].stdout;
				return haxeshim_Resolver.parseLines(stdout,function(cp) {
					return ["-cp",cp];
				});
			} else {
				var stdout1 = _g[2].stdout;
				var stderr = _g[2].stderr;
				var v = _g[2].status;
				new _$Sys_FileOutput(2).writeString(stdout1 + stderr);
				process.exit(v);
				return null;
			}
			break;
		case 1:
			var e = _g[2];
			return e.throwSelf();
		}
	}
	,getInstallationInstructions: function() {
		var missing = [];
		var instructions = [];
		var _g = 0;
		var _g1 = js_node_Fs.readdirSync(this.scopeLibDir);
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var path = "" + this.scopeLibDir + "/" + child;
			if(!js_node_Fs.statSync(path).isDirectory() && StringTools.endsWith(path,".hxml")) {
				var hxml = js_node_Fs.readFileSync(path,{ encoding : "utf8"});
				var args = haxeshim_Resolver.parseLines(hxml);
				var pos = 0;
				var max = args.length;
				while(pos < max) {
					var _g2 = args[pos++];
					if(_g2 == "-cp") {
						var cp = haxeshim_Resolver.interpolate(args[pos++],$bind(this,this.getDefault));
						if(!sys_FileSystem.exists(cp)) {
							var _g21 = hxml.split("@install:");
							var _hx_tmp;
							if(_g21.length == 1) {
								var v = _g21[0];
								missing.push({ lib : child, cp : cp});
							} else {
								_hx_tmp = _g21.slice(1);
								var a = _hx_tmp;
								var _g22 = 0;
								while(_g22 < a.length) {
									var i = a[_g22];
									++_g22;
									instructions.push(StringTools.trim(i.split("\n")[0]));
								}
							}
						}
					}
				}
			}
		}
		return { missing : missing, instructions : instructions};
	}
	,resolve: function(args) {
		return this.resolver.resolve(args,$bind(this,this.resolveThroughHaxelib));
	}
	,__class__: haxeshim_Scope
};
var haxeshim_Neko = function() { };
haxeshim_Neko.__name__ = true;
haxeshim_Neko.setEnv = function() {
	if(haxeshim_Os.IS_WINDOWS) {
		var _g = 0;
		var this1 = haxeshim_Neko.ENV;
		var _g1 = this1 == null ? [] : Reflect.fields(this1);
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			var v = haxeshim__$Env_Env_$Impl_$.get(haxeshim_Neko.ENV,k);
			process.env[k] = v;
		}
	}
};
var haxeshim_Resolver = function(cwd,libDir,mode,defaults) {
	this.cwd = cwd;
	this.libDir = libDir;
	this.mode = mode;
	this.defaults = defaults;
};
haxeshim_Resolver.__name__ = true;
haxeshim_Resolver.interpolate = function(s,defaults) {
	if(s.indexOf("${") == -1) {
		return s;
	}
	var ret_b = "";
	var pos = 0;
	while(pos < s.length) {
		var _g = s.indexOf("${",pos);
		if(_g == -1) {
			ret_b += HxOverrides.substr(s,pos,null);
			break;
		} else {
			var v = _g;
			var len = v - pos;
			ret_b += len == null ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len);
			var start = v + 2;
			var end;
			var _g1 = s.indexOf("}",start);
			if(_g1 == -1) {
				throw new js__$Boot_HaxeError("unclosed interpolation in " + s);
			} else {
				var v1 = _g1;
				end = v1;
			}
			var name = HxOverrides.substr(s,start,end - start);
			var x;
			var _g11 = process.env[name];
			if(_g11 == null) {
				var _g12 = defaults(name);
				if(_g12 == null) {
					throw new js__$Boot_HaxeError("unknown variable " + name);
				} else {
					var v2 = _g12;
					x = v2;
				}
			} else if(_g11 == "") {
				var _g13 = defaults(name);
				if(_g13 == null) {
					throw new js__$Boot_HaxeError("unknown variable " + name);
				} else {
					var v3 = _g13;
					x = v3;
				}
			} else {
				var v4 = _g11;
				x = v4;
			}
			ret_b += Std.string(x);
			pos = end + 1;
		}
	}
	return ret_b;
};
haxeshim_Resolver.libHxml = function(libDir,libName) {
	return "" + libDir + "/" + libName + ".hxml";
};
haxeshim_Resolver.parseLines = function(source,normalize) {
	if(normalize == null) {
		normalize = function(x) {
			return [x];
		};
	}
	var ret = [];
	var _g = 0;
	var _g1 = source.split("\n").map(StringTools.trim);
	while(_g < _g1.length) {
		var line = _g1[_g];
		++_g;
		var _g2 = line.charAt(0);
		if(_g2 != null) {
			switch(_g2) {
			case "#":
				break;
			case "-":
				var _g21 = line.indexOf(" ");
				if(_g21 == -1) {
					ret.push(line);
				} else {
					var v = _g21;
					ret.push(HxOverrides.substr(line,0,v));
					ret.push(StringTools.trim(HxOverrides.substr(line,v,null)));
				}
				break;
			default:
				var _g22 = StringTools.trim(line);
				if(_g22 != "") {
					var v1 = _g22;
					var _g23 = 0;
					var _g3 = normalize(v1);
					while(_g23 < _g3.length) {
						var a = _g3[_g23];
						++_g23;
						ret.push(a);
					}
				}
			}
		}
	}
	return ret;
};
haxeshim_Resolver.removeComments = function(line) {
	var _g = line.indexOf("#");
	if(_g == -1) {
		return line;
	} else {
		var v = _g;
		return HxOverrides.substr(line,0,v);
	}
};
haxeshim_Resolver.prototype = {
	resolve: function(args,haxelib) {
		var _gthis = this;
		this.ret = [];
		this.errors = [];
		this.resolved = new haxe_ds_StringMap();
		this.process(args);
		var _g = this.errors;
		if(_g.length != 0) {
			var v = _g;
			throw new js__$Boot_HaxeError(v.map(function(e) {
				return e.message;
			}).join("\n"));
		}
		var start = 0;
		var pos = 0;
		var $final = [];
		var libs = function(args1) {
			var ret = [];
			var libs1 = [];
			var i = 0;
			var max;
			var _g1 = args1.indexOf("--run");
			if(_g1 == -1) {
				max = args1.length;
			} else {
				var v1 = _g1;
				max = v1;
			}
			while(i < max) {
				var _g2 = args1[i++];
				if(_g2 == "-lib") {
					libs1.push(args1[i++]);
				} else {
					var v2 = _g2;
					ret.push(v2);
				}
			}
			ret = ret.concat(args1.slice(max));
			if(libs1.length == 0) {
				return ret;
			} else {
				return haxelib(libs1).concat(ret);
			}
		};
		var flush = function() {
			var final1 = _gthis.ret.slice(start,pos);
			var final2 = libs(final1);
			$final = $final.concat(final2);
			start = pos;
		};
		while(pos < this.ret.length) {
			pos += 1;
			var _g11 = this.ret[pos - 1];
			switch(_g11) {
			case "--each":case "--next":
				flush();
				break;
			default:
			}
		}
		flush();
		return $final;
	}
	,resolveInScope: function(lib) {
		var _this = this.resolved;
		if(__map_reserved[lib] != null ? _this.getReserved(lib) : _this.h[lib]) {
			return tink_core_Outcome.Success(tink_core_Noise.Noise);
		} else {
			var _g = haxeshim_Resolver.libHxml(this.libDir,lib);
			var notFound = _g;
			if(!sys_FileSystem.exists(notFound)) {
				return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Cannot resolve `-lib " + lib + "` because file " + notFound + " is missing",{ fileName : "Resolver.hx", lineNumber : 135, className : "haxeshim.Resolver", methodName : "resolveInScope"}));
			} else {
				var f = _g;
				this.resolved.set(lib,true);
				this.processHxml(f);
				return tink_core_Outcome.Success(tink_core_Noise.Noise);
			}
		}
	}
	,processHxml: function(file) {
		this.process(haxeshim_Resolver.parseLines(js_node_Fs.readFileSync(file,{ encoding : "utf8"})));
	}
	,process: function(args) {
		var _gthis = this;
		var i = 0;
		var max = args.length;
		var a1 = this.defaults;
		var interpolate = function(s) {
			return haxeshim_Resolver.interpolate(s,a1);
		};
		while(i < max) {
			var _g = StringTools.trim(args[i++]);
			switch(_g) {
			case "":
				break;
			case "-cp":
				this.ret.push("-cp");
				this.ret.push(this.absolute(interpolate(args[i++])));
				break;
			case "-lib":
				var lib = [args[i++]];
				var add = (function(lib1) {
					return function() {
						_gthis.ret.push("-lib");
						_gthis.ret.push(lib1[0]);
					};
				})(lib);
				var _g1 = this.mode;
				switch(_g1) {
				case "haxelib":
					add();
					break;
				case "mixed":
					if(lib[0].indexOf(":") != -1 || !tink_core_OutcomeTools.isSuccess(this.resolveInScope(lib[0]))) {
						add();
					}
					break;
				case "scoped":
					if(lib[0].indexOf(":") == -1) {
						var _g2 = this.resolveInScope(lib[0]);
						if(_g2[1] == 1) {
							var e = _g2[2];
							this.errors.push(e);
						}
					} else {
						throw new js__$Boot_HaxeError("Invalid `-lib " + lib[0] + "`. Version specification not supported in scoped mode");
					}
					break;
				}
				break;
			case "-resource":
				this.ret.push("-resource");
				var res = args[i++];
				var tmp = this.ret;
				var _g3 = res.lastIndexOf("@");
				var tmp1;
				if(_g3 == -1) {
					tmp1 = res;
				} else {
					var v = _g3;
					tmp1 = HxOverrides.substr(res,0,v) + "@" + HxOverrides.substr(res,v + 1,null);
				}
				tmp.push(tmp1);
				break;
			case "-scoped-hxml":
				var target = this.absolute(interpolate(args[i++]));
				var parts = haxeshim_Scope.seek({ cwd : haxe_io_Path.directory(target)}).resolve([target]);
				var _g4 = 0;
				while(_g4 < parts.length) {
					var arg = parts[_g4];
					++_g4;
					this.ret.push(arg);
				}
				break;
			default:
				var hxml = _g;
				if(StringTools.endsWith(hxml,".hxml")) {
					this.processHxml(this.absolute(hxml));
				} else {
					var v1 = _g;
					this.ret.push(v1);
				}
			}
		}
	}
	,absolute: function(path) {
		if(haxe_io_Path.isAbsolute(path)) {
			return path;
		} else {
			return haxe_io_Path.join([this.cwd,path]);
		}
	}
	,__class__: haxeshim_Resolver
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_node_ChildProcess = require("child_process");
var js_node_Fs = require("fs");
var js_node_Http = require("http");
var js_node_Https = require("https");
var js_node_Path = require("path");
var js_node_Url = require("url");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_node_buffer__$Buffer_Helper = function() { };
js_node_buffer__$Buffer_Helper.__name__ = true;
js_node_buffer__$Buffer_Helper.bytesOfBuffer = function(b) {
	var o = Object.create(haxe_io_Bytes.prototype);
	o.length = b.byteLength;
	o.b = b;
	b.bufferValue = b;
	b.hxBytes = o;
	b.bytes = b;
	return o;
};
var js_node_stream_PassThrough = require("stream").PassThrough;
var tink_core_NamedWith = function(name,value) {
	this.name = name;
	this.value = value;
};
tink_core_NamedWith.__name__ = true;
tink_core_NamedWith.prototype = {
	__class__: tink_core_NamedWith
};
var switchx_Cli = function() { };
switchx_Cli.__name__ = true;
switchx_Cli.ensureGlobal = function() {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var done = function() {
			var done1 = haxeshim_Scope.seek();
			cb(done1);
		};
		if(haxeshim_Scope.exists(haxeshim_Scope.DEFAULT_ROOT)) {
			done();
		} else {
			process.stdout.write("It seems you're running switchx for the first time.\nPlease wait for basic setup to finish ...");
			process.stdout.write("\n");
			switchx_Fs.ensureDir(haxeshim_Scope.DEFAULT_ROOT + "/");
			haxeshim_Scope.create(haxeshim_Scope.DEFAULT_ROOT,{ version : "stable", resolveLibs : "mixed"});
			switchx_Cli.dispatch(["install","--global"],function() {
				process.stdout.write("... done setting up global Haxe version");
				process.stdout.write("\n");
				done();
			});
		}
	});
};
switchx_Cli.ensureNeko = function(global) {
	var neko = haxeshim_Neko.PATH;
	if(sys_FileSystem.exists(neko)) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(neko));
	} else {
		process.stdout.write("Neko seems to be missing. Attempting download ...");
		process.stdout.write("\n");
		var _g = Sys.systemName();
		var this1;
		switch(_g) {
		case "Mac":
			this1 = function(a2,a3) {
				return switchx_Download.tar("https://github.com/HaxeFoundation/neko/releases/download/v2-2-0/neko-2.2.0-osx64.tar.gz",a2,a3);
			};
			break;
		case "Windows":
			this1 = function(a21,a31) {
				return switchx_Download.zip("https://github.com/HaxeFoundation/neko/releases/download/v2-2-0/neko-2.2.0-win.zip",a21,a31);
			};
			break;
		default:
			this1 = function(a22,a32) {
				return switchx_Download.tar("https://github.com/HaxeFoundation/neko/releases/download/v2-2-0/neko-2.2.0-linux64.tar.gz",a22,a32);
			};
		}
		var this2 = this1(1,neko);
		var f = tink_core__$Promise_Recover_$Impl_$.ofSync(switchx_Command.reportError);
		var ret = this2.flatMap(function(o) {
			switch(o[1]) {
			case 0:
				var d = o[2];
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(d));
			case 1:
				var e = o[2];
				return f(e);
			}
		});
		var ret1 = ret.gather().map(function(x) {
			process.stdout.write("done");
			process.stdout.write("\n");
			return x;
		});
		return ret1.gather();
	}
};
switchx_Cli.main = function() {
	var ret = switchx_Cli.ensureGlobal().flatMap(switchx_Cli.ensureNeko);
	var tmp = ret.gather();
	var a1 = process.argv.slice(2);
	tmp.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		switchx_Cli.dispatch(a1);
	}));
};
switchx_Cli.makeCommands = function(api,force) {
	var log = api.silent ? function(msg) {
	} : function(msg1) {
		process.stdout.write(msg1 == null ? "null" : "" + msg1);
		process.stdout.write("\n");
	};
	var scope = api.scope;
	var download = function(version) {
		var this1;
		var _g = switchx__$Version_UserVersion_$Impl_$.ofString(version);
		switch(_g[1]) {
		case 3:case 4:
			this1 = api.resolveInstalled(switchx__$Version_UserVersion_$Impl_$.ofString(version));
			break;
		default:
			this1 = tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"" + version + " needs to be resolved online",{ fileName : "Cli.hx", lineNumber : 80, className : "switchx.Cli", methodName : "makeCommands"})));
		}
		var f = function(_) {
			log("Looking up Haxe version \"" + version + "\" online");
			return tink_core__$Promise_Promise_$Impl_$.next(api.resolveOnline(switchx__$Version_UserVersion_$Impl_$.ofString(version)),function(r) {
				var f1 = "  Resolved to " + switchx__$Version_ResolvedVersion_$Impl_$.toString(r) + ".";
				log(f1);
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(r));
			});
		};
		var ret = this1.flatMap(function(o) {
			switch(o[1]) {
			case 0:
				var d = o[2];
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
			case 1:
				var e = o[2];
				return f(e);
			}
		});
		return tink_core__$Promise_Promise_$Impl_$.next(ret.gather(),function(r1) {
			return tink_core__$Promise_Promise_$Impl_$.next(api.download(r1,{ force : force}),function(wasDownloaded) {
				log(!wasDownloaded ? "  ... already downloaded!" : "");
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(r1));
			});
		});
	};
	var switchTo = function(version1) {
		return tink_core__$Promise_Promise_$Impl_$.next(api.switchTo(version1),function(v) {
			var switchTo1 = "Now using " + switchx__$Version_ResolvedVersion_$Impl_$.toString(version1);
			log(switchTo1);
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(v));
		});
	};
	return [new switchx_Command(switchx__$Command_CommandName_$Impl_$.ofString("install"),"[<version>]","installs the version if specified, otherwise\ninstalls the currently configured version",function(args) {
		switch(args.length) {
		case 0:
			return tink_core__$Promise_Promise_$Impl_$.next(download(scope.config.version),switchTo);
		case 1:
			var v1 = args[0];
			return tink_core__$Promise_Promise_$Impl_$.next(download(v1),switchTo);
		default:
			var v2 = args;
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"command `install` accepts one argument at most (i.e. the version)",{ fileName : "Cli.hx", lineNumber : 116, className : "switchx.Cli", methodName : "makeCommands"})));
		}
	}),new switchx_Command(switchx__$Command_CommandName_$Impl_$.ofString("download"),"<version>","downloads the specified version",function(args1) {
		switch(args1.length) {
		case 0:
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"not enough arguments",{ fileName : "Cli.hx", lineNumber : 122, className : "switchx.Cli", methodName : "makeCommands"})));
		case 1:
			var v3 = args1[0];
			return tink_core__$Promise_Promise_$Impl_$.noise(download(v3));
		default:
			var v4 = args1;
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"too many arguments",{ fileName : "Cli.hx", lineNumber : 123, className : "switchx.Cli", methodName : "makeCommands"})));
		}
	}),new switchx_Command(switchx__$Command_CommandName_$Impl_$.ofString("use"),"<version>","switches to the specified version",function(args2) {
		switch(args2.length) {
		case 0:
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"not enough arguments",{ fileName : "Cli.hx", lineNumber : 129, className : "switchx.Cli", methodName : "makeCommands"})));
		case 1:
			var v5 = args2[0];
			return tink_core__$Promise_Promise_$Impl_$.next(api.resolveInstalled(switchx__$Version_UserVersion_$Impl_$.ofString(v5)),switchTo);
		default:
			var v6 = args2;
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"too many arguments",{ fileName : "Cli.hx", lineNumber : 130, className : "switchx.Cli", methodName : "makeCommands"})));
		}
	}),new switchx_Command(switchx__$Command_CommandName_$Impl_$.ofString("scope"),"[create|delete|set]\n[scoped|mixed|haxelib]","creates, deletes or configures\nthe current scope or inspects it\nif no argument is supplied",function(args3) {
		var _g1 = args3[0];
		if(_g1 == null) {
			process.stdout.write(Std.string((scope.isGlobal ? "[global]" : "[local]") + (" " + scope.scopeDir)));
			process.stdout.write("\n");
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
		} else {
			switch(_g1) {
			case "create":
				var p;
				var _g2 = args3.slice(1);
				switch(_g2.length) {
				case 0:
					if(scope.isGlobal) {
						p = tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success("scoped"));
					} else {
						p = tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(scope.config.resolveLibs));
					}
					break;
				case 1:
					var v7 = _g2[0];
					p = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(haxeshim__$LibResolution_LibResolution_$Impl_$.parse(v7)));
					break;
				default:
					p = tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"too many arguments",{ fileName : "Cli.hx", lineNumber : 154, className : "switchx.Cli", methodName : "makeCommands"})));
				}
				return tink_core__$Promise_Promise_$Impl_$.next(p,function(resolution) {
					haxeshim_Scope.create(scope.cwd,{ version : scope.config.version, resolveLibs : scope.isGlobal ? "scoped" : scope.config.resolveLibs});
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
				});
			case "delete":
				if(scope.isGlobal) {
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"Cannot delete global scope",{ fileName : "Cli.hx", lineNumber : 164, className : "switchx.Cli", methodName : "makeCommands"})));
				} else {
					scope["delete"]();
					log("deleted scope in " + scope.scopeDir);
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
				}
				break;
			case "set":
				var _g3 = args3.slice(1);
				switch(_g3.length) {
				case 0:
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"not enough arguments",{ fileName : "Cli.hx", lineNumber : 137, className : "switchx.Cli", methodName : "makeCommands"})));
				case 1:
					var v8 = _g3[0];
					return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_OutcomeTools.map(haxeshim__$LibResolution_LibResolution_$Impl_$.parse(v8),function(v9) {
						scope.reconfigure({ version : scope.config.version, resolveLibs : v9});
						return tink_core_Noise.Noise;
					})));
				default:
					var v10 = _g3;
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"too many arguments",{ fileName : "Cli.hx", lineNumber : 148, className : "switchx.Cli", methodName : "makeCommands"})));
				}
				break;
			default:
				var v11 = _g1;
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"Invalid arguments",{ fileName : "Cli.hx", lineNumber : 177, className : "switchx.Cli", methodName : "makeCommands"})));
			}
		}
	}),new switchx_Command(switchx__$Command_CommandName_$Impl_$.ofString("list"),"","lists currently downloaded versions",function(args4) {
		if(args4.length == 0) {
			return tink_core__$Promise_Promise_$Impl_$.next(api.officialInstalled(switchx_PickOfficial.IncludePrereleases),function(o1) {
				return tink_core__$Promise_Promise_$Impl_$.next(api.nightliesInstalled(),function(n) {
					var highlight = function(s) {
						if(s == scope.config.version) {
							return " -> " + s;
						} else {
							return "    " + s;
						}
					};
					process.stdout.write("");
					process.stdout.write("\n");
					var v12 = "Using " + switchx__$Version_UserVersion_$Impl_$.toString(switchx__$Version_UserVersion_$Impl_$.ofString(scope.config.version));
					process.stdout.write(Std.string(v12));
					process.stdout.write("\n");
					process.stdout.write("");
					process.stdout.write("\n");
					process.stdout.write("Official releases:");
					process.stdout.write("\n");
					process.stdout.write("");
					process.stdout.write("\n");
					var v13 = $iterator(o1)();
					while(v13.hasNext()) {
						var v14 = v13.next();
						var v15 = highlight(v14);
						process.stdout.write(Std.string(v15));
						process.stdout.write("\n");
					}
					if($iterator(n)().hasNext()) {
						process.stdout.write("");
						process.stdout.write("\n");
						process.stdout.write("Nightly builds:");
						process.stdout.write("\n");
						process.stdout.write("");
						process.stdout.write("\n");
						var v16 = $iterator(n)();
						while(v16.hasNext()) {
							var v17 = v16.next();
							var v18 = highlight(v17.hash) + DateTools.format(v17.published,"  (%Y-%m-%d %H:%M)");
							process.stdout.write(Std.string(v18));
							process.stdout.write("\n");
						}
					}
					process.stdout.write("");
					process.stdout.write("\n");
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
				});
			});
		} else {
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"command `list` does expect arguments",{ fileName : "Cli.hx", lineNumber : 216, className : "switchx.Cli", methodName : "makeCommands"})));
		}
	})];
};
switchx_Cli.dispatch = function(args,cb) {
	var scope = haxeshim_Scope.seek({ cwd : HxOverrides.remove(args,"--global") ? haxeshim_Scope.DEFAULT_ROOT : null});
	var api = new switchx_Switchx(scope,HxOverrides.remove(args,"--silent"));
	switchx_Command.dispatch(args,"switchx - haxe version switcher",switchx_Cli.makeCommands(api,HxOverrides.remove(args,"--force")),[new tink_core_NamedWith("Supported switches",[new tink_core_NamedWith("--silent","disables logging"),new tink_core_NamedWith("--global","performs operation on global scope"),new tink_core_NamedWith("--force","forces re-download")]),switchx_Cli.ALIASES]).handle(function(o) {
		switchx_Command.reportOutcome(o);
		if(cb != null) {
			cb();
		}
	});
};
var switchx__$Command_CommandExpander_$Impl_$ = {};
switchx__$Command_CommandExpander_$Impl_$.__name__ = true;
switchx__$Command_CommandExpander_$Impl_$.expand = function(this1,args) {
	return this1(args);
};
switchx__$Command_CommandExpander_$Impl_$.ofString = function(s) {
	var _g = s.indexOf(" ");
	if(_g == -1) {
		throw new js__$Boot_HaxeError("invalid expander syntax in \"" + s + "\"");
	} else {
		var v = _g;
		return switchx__$Command_CommandExpander_$Impl_$.make(HxOverrides.substr(s,0,v),HxOverrides.substr(s,v + 1,null));
	}
};
switchx__$Command_CommandExpander_$Impl_$.make = function(prefix,rule) {
	var replacer = new EReg("\\$\\{([0-9]+)\\}","g");
	var parts = [];
	var highest = -1;
	replacer.map(rule,function(e) {
		parts.pop();
		var left = e.matchedLeft();
		var right = e.matchedRight();
		parts.push(function(_) {
			return left;
		});
		var pos = Std.parseInt(e.matched(1));
		if(pos > highest) {
			highest = pos;
		}
		parts.push(function(args) {
			return args[pos];
		});
		parts.push(function(_1) {
			return right;
		});
		return "";
	});
	var apply = function(args1) {
		var _g = [];
		var _g2 = 0;
		var _g1 = [];
		var _g21 = 0;
		while(_g21 < parts.length) {
			var p = parts[_g21];
			++_g21;
			_g1.push(p(args1));
		}
		var _g3 = _g1.join("").split(" ");
		while(_g2 < _g3.length) {
			var res = _g3[_g2];
			++_g2;
			var _g4 = StringTools.trim(res);
			var apply1;
			if(_g4 == "") {
				continue;
			} else {
				var v = _g4;
				apply1 = v;
			}
			_g.push(apply1);
		}
		return _g;
	};
	return function(args2) {
		var _g11 = 0;
		var _g5 = args2.length;
		while(_g11 < _g5) {
			var i = _g11++;
			if(args2[i] == prefix) {
				var tmp = args2.slice(0,i);
				var tmp1 = args2.slice(i + 1,i + highest + 2);
				return haxe_ds_Option.Some(tmp.concat(apply(tmp1)).concat(args2.slice(i + highest + 2)));
			}
		}
		return haxe_ds_Option.None;
	};
};
var switchx__$Command_CommandName_$Impl_$ = {};
switchx__$Command_CommandName_$Impl_$.__name__ = true;
switchx__$Command_CommandName_$Impl_$.ofString = function(s) {
	return [s];
};
switchx__$Command_CommandName_$Impl_$.toString = function(this1) {
	if(this1.length == 1) {
		var v = this1[0];
		return v;
	} else {
		var a = this1;
		return a.join(" / ");
	}
};
switchx__$Command_CommandName_$Impl_$.eq = function(a,b) {
	return a.indexOf(b) != -1;
};
var switchx_Command = function(name,args,doc,exec) {
	this.name = name;
	this.args = args;
	this.doc = doc;
	this.exec = exec;
};
switchx_Command.__name__ = true;
switchx_Command.reportError = function(e) {
	new _$Sys_FileOutput(2).writeString(e.message + "\n\n");
	process.exit(e.code);
	return null;
};
switchx_Command.reportOutcome = function(o) {
	if(o[1] == 1) {
		var e = o[2];
		switchx_Command.reportError(e);
	}
};
switchx_Command.expand = function(args,expanders) {
	var changed = true;
	while(changed) {
		changed = false;
		var _g = 0;
		while(_g < expanders.length) {
			var e = expanders[_g];
			++_g;
			var _g1 = e(args);
			if(_g1[1] == 0) {
				var nu = _g1[2];
				args = nu;
				changed = true;
			}
		}
	}
	return args;
};
switchx_Command.dispatch = function(args,title,commands,extras) {
	var _g = args.shift();
	if(_g == null) {
		process.stdout.write(title == null ? "null" : "" + title);
		process.stdout.write("\n");
		process.stdout.write("");
		process.stdout.write("\n");
		var prefix = 0;
		var _g1 = 0;
		while(_g1 < commands.length) {
			var c = commands[_g1];
			++_g1;
			var v = 0;
			var _g11 = 0;
			var _g2 = c.args.split("\n");
			while(_g11 < _g2.length) {
				var line = _g2[_g11];
				++_g11;
				if(line.length > v) {
					v = line.length;
				}
			}
			var longest = v;
			var cur = switchx__$Command_CommandName_$Impl_$.toString(c.name).length + longest;
			if(cur > prefix) {
				prefix = cur;
			}
		}
		prefix += 7;
		var pad = function(s) {
			return StringTools.lpad(s," ",prefix);
		};
		process.stdout.write("  Supported commands:");
		process.stdout.write("\n");
		process.stdout.write("");
		process.stdout.write("\n");
		var _g3 = 0;
		while(_g3 < commands.length) {
			var c1 = commands[_g3];
			++_g3;
			var leftCol = c1.args.split("\n");
			var tmp = "  " + switchx__$Command_CommandName_$Impl_$.toString(c1.name);
			var _g12 = leftCol[0];
			var tmp1;
			if(_g12 == null) {
				tmp1 = "";
			} else if(_g12 == "") {
				tmp1 = "";
			} else {
				var v1 = _g12;
				tmp1 = " " + v1;
			}
			leftCol[0] = tmp + tmp1 + " : ";
			var _g31 = 1;
			var _g21 = leftCol.length;
			while(_g31 < _g21) {
				var i = _g31++;
				leftCol[i] += "   ";
			}
			var rightCol = c1.doc.split("\n");
			while(leftCol.length < rightCol.length) leftCol.push("");
			while(leftCol.length > rightCol.length) rightCol.push("");
			var _g32 = 0;
			var _g22 = leftCol.length;
			while(_g32 < _g22) {
				var i1 = _g32++;
				var v2 = pad(leftCol[i1]);
				process.stdout.write(Std.string(v2 + rightCol[i1]));
				process.stdout.write("\n");
			}
		}
		var _g4 = 0;
		while(_g4 < extras.length) {
			var e = extras[_g4];
			++_g4;
			process.stdout.write("");
			process.stdout.write("\n");
			process.stdout.write(Std.string("  " + e.name));
			process.stdout.write("\n");
			process.stdout.write("");
			process.stdout.write("\n");
			var _g13 = 0;
			var _g23 = e.value;
			while(_g13 < _g23.length) {
				var e1 = _g23[_g13];
				++_g13;
				var v3 = pad("" + e1.name + " : ") + e1.value;
				process.stdout.write(Std.string(v3));
				process.stdout.write("\n");
			}
		}
		process.stdout.write("");
		process.stdout.write("\n");
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
	} else if(_g == "--help") {
		process.stdout.write(title == null ? "null" : "" + title);
		process.stdout.write("\n");
		process.stdout.write("");
		process.stdout.write("\n");
		var prefix1 = 0;
		var _g5 = 0;
		while(_g5 < commands.length) {
			var c2 = commands[_g5];
			++_g5;
			var v4 = 0;
			var _g14 = 0;
			var _g24 = c2.args.split("\n");
			while(_g14 < _g24.length) {
				var line1 = _g24[_g14];
				++_g14;
				if(line1.length > v4) {
					v4 = line1.length;
				}
			}
			var longest1 = v4;
			var cur1 = switchx__$Command_CommandName_$Impl_$.toString(c2.name).length + longest1;
			if(cur1 > prefix1) {
				prefix1 = cur1;
			}
		}
		prefix1 += 7;
		var pad1 = function(s1) {
			return StringTools.lpad(s1," ",prefix1);
		};
		process.stdout.write("  Supported commands:");
		process.stdout.write("\n");
		process.stdout.write("");
		process.stdout.write("\n");
		var _g6 = 0;
		while(_g6 < commands.length) {
			var c3 = commands[_g6];
			++_g6;
			var leftCol1 = c3.args.split("\n");
			var tmp2 = "  " + switchx__$Command_CommandName_$Impl_$.toString(c3.name);
			var _g15 = leftCol1[0];
			var tmp3;
			if(_g15 == null) {
				tmp3 = "";
			} else if(_g15 == "") {
				tmp3 = "";
			} else {
				var v5 = _g15;
				tmp3 = " " + v5;
			}
			leftCol1[0] = tmp2 + tmp3 + " : ";
			var _g33 = 1;
			var _g25 = leftCol1.length;
			while(_g33 < _g25) {
				var i2 = _g33++;
				leftCol1[i2] += "   ";
			}
			var rightCol1 = c3.doc.split("\n");
			while(leftCol1.length < rightCol1.length) leftCol1.push("");
			while(leftCol1.length > rightCol1.length) rightCol1.push("");
			var _g34 = 0;
			var _g26 = leftCol1.length;
			while(_g34 < _g26) {
				var i3 = _g34++;
				var v6 = pad1(leftCol1[i3]);
				process.stdout.write(Std.string(v6 + rightCol1[i3]));
				process.stdout.write("\n");
			}
		}
		var _g7 = 0;
		while(_g7 < extras.length) {
			var e2 = extras[_g7];
			++_g7;
			process.stdout.write("");
			process.stdout.write("\n");
			process.stdout.write(Std.string("  " + e2.name));
			process.stdout.write("\n");
			process.stdout.write("");
			process.stdout.write("\n");
			var _g16 = 0;
			var _g27 = e2.value;
			while(_g16 < _g27.length) {
				var e3 = _g27[_g16];
				++_g16;
				var v7 = pad1("" + e3.name + " : ") + e3.value;
				process.stdout.write(Std.string(v7));
				process.stdout.write("\n");
			}
		}
		process.stdout.write("");
		process.stdout.write("\n");
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
	} else {
		var command = _g;
		var _g8 = 0;
		while(_g8 < commands.length) {
			var canditate = commands[_g8];
			++_g8;
			if(switchx__$Command_CommandName_$Impl_$.eq(canditate.name,command)) {
				return canditate.exec(args);
			}
		}
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(404,"unknown command " + command,{ fileName : "Command.hx", lineNumber : 190, className : "switchx.Command", methodName : "dispatch"})));
	}
};
switchx_Command.prototype = {
	__class__: switchx_Command
};
var switchx_Download = function() { };
switchx_Download.__name__ = true;
switchx_Download.text = function(url) {
	return tink_core__$Promise_Promise_$Impl_$.next(switchx_Download.bytes(url),function(b) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(b.toString()));
	});
};
switchx_Download.bytes = function(url) {
	return switchx_Download.download(url,function(_,r,cb) {
		switchx_Download.buffered(r).handle(cb);
	});
};
switchx_Download.buffered = function(r) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var ret = [];
		r.on("data",$bind(ret,$arrayPush));
		r.on("end",function() {
			var tmp = tink_core_Outcome.Success(js_node_buffer__$Buffer_Helper.bytesOfBuffer(js_node_buffer_Buffer.concat(ret)));
			cb(tmp);
		});
	});
};
switchx_Download.archive = function(url,peel,into,progress) {
	var tmp = switchx_Download.withProgress(progress,function(finalUrl,res,events) {
		if(res.headers["content-type"] == "application/zip" || StringTools.endsWith(url,".zip") || StringTools.endsWith(finalUrl,".zip")) {
			switchx_Download.unzip(url,into,peel,res,events);
		} else {
			switchx_Download.untar(url,into,peel,res,events);
		}
	});
	return switchx_Download.download(url,tmp);
};
switchx_Download.unzip = function(src,into,peel,res,events) {
	tink_core__$Promise_Promise_$Impl_$.next(switchx_Download.buffered(res),function(bytes) {
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			var data = bytes.b;
			switchx_Yauzl.fromBuffer(new js_node_buffer_Buffer(data.buffer,data.byteOffset,data.byteLength),function(err,zip) {
				var saved = -1;
				var done = function() {
					saved += 1;
					events.onProgress(saved,zip.entryCount,false);
					if(saved == zip.entryCount) {
						var f = cb;
						var a1 = tink_core_Outcome.Success(into);
						haxe_Timer.delay(function() {
							f(a1);
						},100);
					}
				};
				if(err != null) {
					var this1 = tink_core_Outcome.Failure(new tink_core_TypedError(422,"Failed to unzip " + src,{ fileName : "Download.hx", lineNumber : 69, className : "switchx.Download", methodName : "unzip"}));
					cb(this1);
				}
				zip.on("entry",function(entry) {
					var _g = switchx_Fs.peel(entry.fileName,peel);
					switch(_g[1]) {
					case 0:
						var f1 = _g[2];
						var path = "" + into + "/" + f1;
						if(StringTools.endsWith(path,"/")) {
							done();
						} else {
							switchx_Fs.ensureDir(path);
							zip.openReadStream(entry,function(e,stream) {
								var out = js_node_Fs.createWriteStream(path);
								stream.pipe(out,{ end : true});
								out.on("close",done);
							});
						}
						break;
					case 1:
						break;
					}
				});
				zip.on("end",function() {
					zip.close();
					done();
				});
			});
		});
	}).handle($bind(events,events.done));
};
switchx_Download.untar = function(src,into,peel,res,events) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var total = 0;
		var written = 0;
		var symlinks = [];
		var update = function() {
			events.onProgress(written,total + 1,true);
		};
		var pending = 1;
		var done = function(progress) {
			if(progress == null) {
				progress = 0;
			}
			written += progress;
			update();
			haxe_Timer.delay(function() {
				if((pending -= 1) <= 0) {
					events.onProgress(total,total,true);
					var _g = [];
					var _g1 = 0;
					while(_g1 < symlinks.length) {
						var link = [symlinks[_g1]];
						++_g1;
						_g.push(tink_core__$Future_Future_$Impl_$.async((function(link1) {
							return function(cb1) {
								js_node_Fs.unlink(link1[0].to,(function(link2) {
									return function(_) {
										js_node_Fs.symlink(link2[0].from,link2[0].to,(function() {
											return function(e) {
												var this1 = e == null ? tink_core_Outcome.Success(tink_core_Noise.Noise) : tink_core_Outcome.Failure(new tink_core_TypedError(null,e.message,{ fileName : "Download.hx", lineNumber : 117, className : "switchx.Download", methodName : "untar"}));
												cb1(this1);
											};
										})());
									};
								})(link1));
							};
						})(link)));
					}
					tink_core__$Promise_Promise_$Impl_$.next(tink_core__$Promise_Promise_$Impl_$.inParallel(_g),function(_1) {
						return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(into));
					}).handle(cb);
				}
			},100);
		};
		var error = null;
		var fail = function(message) {
			error = new tink_core_TypedError(null,message,{ fileName : "Download.hx", lineNumber : 129, className : "switchx.Download", methodName : "untar"});
			cb(tink_core_Outcome.Failure(error));
		};
		switchx_Tar.parse(res,function(entry) {
			if(error != null) {
				return;
			}
			total += entry.size;
			update();
			var skip = function() {
				entry.on("data",function() {
				});
			};
			var _g2 = switchx_Fs.peel(entry.path,peel);
			switch(_g2[1]) {
			case 0:
				var f = _g2[2];
				var path = "" + into + "/" + f;
				if(StringTools.endsWith(path,"/")) {
					skip();
				} else {
					switchx_Fs.ensureDir(path);
					if(entry.type == "SymbolicLink") {
						skip();
						var this2 = haxe_io_Path.directory(path);
						symlinks.push({ from : haxe_io_Path.join([this2,entry.linkpath]), to : path});
					} else {
						pending += 1;
						var buffer = new js_node_stream_PassThrough();
						var out = js_node_Fs.createWriteStream(path,{ mode : entry.mode});
						entry.pipe(buffer,{ end : true});
						buffer.pipe(out,{ end : true});
						var f1 = done;
						var a1 = entry.size;
						out.on("close",function() {
							f1(a1);
						});
					}
				}
				break;
			case 1:
				skip();
				break;
			}
		}).handle(function(o) {
			if(o[1] == 1) {
				var e1 = o[2];
				cb(tink_core_Outcome.Failure(e1));
			} else {
				done();
			}
		});
	}).handle($bind(events,events.done));
};
switchx_Download.tar = function(url,peel,into,progress) {
	var a2 = into;
	var a3 = peel;
	return switchx_Download.download(url,switchx_Download.withProgress(progress,function(a1,a4,a5) {
		return switchx_Download.untar(a1,a2,a3,a4,a5);
	}));
};
switchx_Download.zip = function(url,peel,into,progress) {
	var a2 = into;
	var a3 = peel;
	return switchx_Download.download(url,switchx_Download.withProgress(progress,function(a1,a4,a5) {
		switchx_Download.unzip(a1,a2,a3,a4,a5);
	}));
};
switchx_Download.withProgress = function(progress,handler) {
	return function(url,msg,cb) {
		if(progress != true || !process.stdout.isTTY) {
			handler(url,msg,{ onProgress : function(_,_1,_2) {
			}, done : cb});
			return;
		}
		var size = Std.parseInt(msg.headers["content-length"]);
		var loaded = 0;
		var saved = 0;
		var total = 1;
		var last = null;
		var progress1 = function(s) {
			if(s == last) {
				return;
			}
			last = s;
			process.stdout.clearLine(0);
			process.stdout.cursorTo(0);
			process.stdout.write(s);
		};
		var pct = function(f) {
			var _g = Std.string(Math.round(1000 * f) / 10);
			var _hx_tmp;
			var pct1;
			_hx_tmp = _g.indexOf(".");
			if(_hx_tmp == -1) {
				var whole = _g;
				pct1 = "" + whole + ".0";
			} else {
				var v = _g;
				pct1 = v;
			}
			return StringTools.lpad(pct1," ",5) + "%";
		};
		var lastUpdate = new Date(0).getTime();
		var update = function() {
			if(saved == total) {
				progress1("Done!\n");
			} else {
				var now = new Date().getTime();
				if(now > lastUpdate + 137) {
					lastUpdate = now;
					var messages = [];
					if(loaded < size) {
						messages.push("Downloaded: " + pct(loaded / size));
					}
					if(saved > 0) {
						messages.push("Saved: " + pct(saved / total));
					}
					var update1 = messages.join("   ");
					progress1(update1);
				}
			}
		};
		msg.on("data",function(buf) {
			loaded += buf.length;
			update();
		});
		var last1 = .0;
		handler(url,msg,{ onProgress : function(_saved,_total,binary) {
			saved = _saved;
			total = _total;
			if(binary) {
				var downloaded = loaded / size;
				var decompressed = saved / total;
				var estimate = downloaded * decompressed;
				if(estimate < last1) {
					estimate = last1;
				}
				last1 = estimate;
				saved = Math.round(estimate * 1000);
				total = 1000;
			}
			update();
		}, done : cb});
	};
};
switchx_Download.download = function(url,handler) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var options = js_node_Url.parse(url);
		options.agent = false;
		if(options.headers == null) {
			options.headers = { };
		}
		options.headers["user-agent"] = switchx_Download.USER_AGENT;
		var fail = function(e) {
			var fail1 = tink_core_Outcome.Failure(tink_core_TypedError.withData(null,"Failed to download " + url + " because " + e.message,e,{ fileName : "Download.hx", lineNumber : 272, className : "switchx.Download", methodName : "download"}));
			cb(fail1);
		};
		var req = StringTools.startsWith(url,"https:") ? js_node_Https.get(options) : js_node_Http.get(options);
		req.setTimeout(30000);
		req.on("error",fail);
		req.on("response",function(res) {
			if(res.statusCode >= 400) {
				var tmp = tink_core_Outcome.Failure(tink_core_TypedError.withData(res.statusCode,res.statusMessage,res,{ fileName : "Download.hx", lineNumber : 283, className : "switchx.Download", methodName : "download"}));
				cb(tmp);
			} else {
				var _g = res.headers["location"];
				if(_g == null) {
					res.on("error",fail);
					handler(url,res,function(v) {
						switch(v[1]) {
						case 0:
							var x = v[2];
							cb(tink_core_Outcome.Success(x));
							break;
						case 1:
							var e1 = v[2];
							cb(tink_core_Outcome.Failure(e1));
							break;
						}
					});
				} else {
					var v1 = _g;
					var _g1 = js_node_Url.parse(v1);
					switchx_Download.download(_g1.protocol == null ? options.protocol + "//" + options.host + v1 : v1,handler).handle(cb);
				}
			}
		});
	});
};
var switchx_Fs = function() { };
switchx_Fs.__name__ = true;
switchx_Fs.ensureDir = function(dir) {
	var isDir = StringTools.endsWith(dir,"/") || StringTools.endsWith(dir,"\\");
	if(isDir) {
		dir = haxe_io_Path.removeTrailingSlashes(dir);
	}
	var parent = haxe_io_Path.directory(dir);
	if(haxe_io_Path.removeTrailingSlashes(parent) == dir) {
		return;
	}
	if(!sys_FileSystem.exists(parent)) {
		switchx_Fs.ensureDir(haxe_io_Path.addTrailingSlash(parent));
	}
	if(isDir && !sys_FileSystem.exists(dir)) {
		sys_FileSystem.createDirectory(dir);
	}
};
switchx_Fs.ifNewer = function(files) {
	return js_node_Fs.statSync(files.src).mtime.getTime() > js_node_Fs.statSync(files.dest).mtime.getTime();
};
switchx_Fs.copy = function(src,target,filter,overwrite) {
	var copy = null;
	copy = function(src1,target1,ensure) {
		if(filter == null || filter(src1)) {
			if(js_node_Fs.statSync(src1).isDirectory()) {
				switchx_Fs.ensureDir(haxe_io_Path.addTrailingSlash(target1));
				var _g = 0;
				var _g1 = js_node_Fs.readdirSync(src1);
				while(_g < _g1.length) {
					var entry = _g1[_g];
					++_g;
					copy("" + src1 + "/" + entry,"" + target1 + "/" + entry,false);
				}
			} else {
				if(ensure) {
					switchx_Fs.ensureDir(target1);
				}
				if(!sys_FileSystem.exists(target1) || overwrite == null || overwrite({ src : src1, dest : target1})) {
					sys_io_File.copy(src1,target1);
				}
			}
		}
	};
	var copy1 = copy;
	copy1(src,target,true);
};
switchx_Fs.ls = function(dir,filter) {
	var _g = [];
	var _g1 = 0;
	var _g2 = js_node_Fs.readdirSync(dir);
	while(_g1 < _g2.length) {
		var entry = _g2[_g1];
		++_g1;
		var _g3 = "" + dir + "/" + entry;
		var included = _g3;
		var tmp;
		if(filter == null || filter(included)) {
			tmp = included;
		} else {
			continue;
		}
		_g.push(tmp);
	}
	return _g;
};
switchx_Fs["delete"] = function(path) {
	if(js_node_Fs.statSync(path).isDirectory()) {
		var _g = 0;
		var _g1 = switchx_Fs.ls(path);
		while(_g < _g1.length) {
			var file = _g1[_g];
			++_g;
			switchx_Fs["delete"](file);
		}
		js_node_Fs.rmdirSync(path);
	} else {
		js_node_Fs.unlinkSync(path);
	}
};
switchx_Fs.peel = function(file,depth) {
	var start = 0;
	var _g1 = 0;
	var _g = depth;
	while(_g1 < _g) {
		var i = _g1++;
		var _g2 = file.indexOf("/",start);
		if(_g2 == -1) {
			return haxe_ds_Option.None;
		} else {
			var v = _g2;
			start = v + 1;
		}
	}
	return haxe_ds_Option.Some(HxOverrides.substr(file,start,null));
};
switchx_Fs.findNearest = function(name,dir) {
	while(true) if(sys_FileSystem.exists("" + dir + "/" + name)) {
		return haxe_ds_Option.Some("" + dir + "/" + name);
	} else {
		var _g = haxe_io_Path.directory(dir);
		var same = _g;
		if(dir == same) {
			return haxe_ds_Option.None;
		} else {
			var parent = _g;
			dir = parent;
		}
	}
};
var switchx_PickOfficial = { __ename__ : true, __constructs__ : ["StableOnly","IncludePrereleases"] };
switchx_PickOfficial.StableOnly = ["StableOnly",0];
switchx_PickOfficial.StableOnly.toString = $estr;
switchx_PickOfficial.StableOnly.__enum__ = switchx_PickOfficial;
switchx_PickOfficial.IncludePrereleases = ["IncludePrereleases",1];
switchx_PickOfficial.IncludePrereleases.toString = $estr;
switchx_PickOfficial.IncludePrereleases.__enum__ = switchx_PickOfficial;
var switchx_Switchx = function(scope,silent) {
	this.scope = scope;
	this.silent = silent;
	switchx_Fs.ensureDir(haxe_io_Path.addTrailingSlash(scope.versionDir));
	switchx_Fs.ensureDir(haxe_io_Path.addTrailingSlash(scope.haxelibRepo));
	switchx_Fs.ensureDir(this.downloads = scope.haxeshimRoot + "/downloads/");
};
switchx_Switchx.__name__ = true;
switchx_Switchx.linkToNightly = function(hash,date) {
	var extension = switchx_Switchx.PLATFORM == "windows" && date.getTime() > 1494460800000 ? "zip" : "tar.gz";
	return DateTools.format(date,"" + switchx_Switchx.NIGHTLIES + "/" + switchx_Switchx.PLATFORM + "/haxe_%Y-%m-%d_development_" + hash + "." + extension);
};
switchx_Switchx.sortedOfficial = function(kind,versions) {
	if(kind == switchx_PickOfficial.StableOnly) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < versions.length) {
			var v = versions[_g1];
			++_g1;
			if(!switchx__$Version_Official_$Impl_$.get_isPrerelease(v)) {
				_g.push(v);
			}
		}
		versions = _g;
	}
	versions.sort(switchx__$Version_Official_$Impl_$.compare);
	return versions;
};
switchx_Switchx.officialOnline = function(kind) {
	return tink_core__$Promise_Promise_$Impl_$.next(switchx_Download.text("https://raw.githubusercontent.com/HaxeFoundation/haxe.org/staging/downloads/versions.json"),function(s) {
		var d = JSON.parse(s).versions.map(function(v) {
			return v.version;
		});
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(switchx_Switchx.sortedOfficial(kind,d)));
	});
};
switchx_Switchx.sortedNightlies = function(raw) {
	raw.sort(function(a,b) {
		return Reflect.compare(b.published.getTime(),a.published.getTime());
	});
	return raw;
};
switchx_Switchx.nightliesOnline = function() {
	return tink_core__$Promise_Promise_$Impl_$.next(switchx_Download.text("" + switchx_Switchx.NIGHTLIES + "/" + switchx_Switchx.PLATFORM + "/"),tink_core__$Promise_Next_$Impl_$.ofSafeSync(function(s) {
		var lines = s.split("------------------\n").pop().split("\n");
		var ret = [];
		var _g = 0;
		while(_g < lines.length) {
			var l = lines[_g];
			++_g;
			var _g1 = StringTools.trim(l);
			if(_g1 != "") {
				var v = _g1;
				if(v.indexOf("_development_") != -1) {
					var _g11 = v.indexOf("   ");
					var _hx_tmp;
					if(_g11 != -1) {
						_hx_tmp = HxOverrides.substr(v,0,_g11).split(" ");
						if(_hx_tmp.length == 2) {
							var _hx_tmp1 = _hx_tmp[0].split("-").map(Std.parseInt);
							if(_hx_tmp1.length == 3) {
								if(_hx_tmp1[0] == null) {
									if(_hx_tmp1[1] == null) {
										if(_hx_tmp1[2] == null) {
											var _hx_tmp2 = _hx_tmp[1].split(":").map(Std.parseInt);
											if(_hx_tmp2.length == 3) {
												var ss = _hx_tmp2[2];
												var mm = _hx_tmp2[1];
												var hh = _hx_tmp2[0];
												var y = _hx_tmp1[0];
												var m = _hx_tmp1[1];
												var d = _hx_tmp1[2];
												ret.push({ hash : v.split("_development_").pop().split(".").shift(), published : new Date(y,m - 1,d,hh,mm,ss)});
											}
										} else {
											var _hx_tmp3 = _hx_tmp[1].split(":").map(Std.parseInt);
											if(_hx_tmp3.length == 3) {
												var ss1 = _hx_tmp3[2];
												var mm1 = _hx_tmp3[1];
												var hh1 = _hx_tmp3[0];
												var y1 = _hx_tmp1[0];
												var m1 = _hx_tmp1[1];
												var d1 = _hx_tmp1[2];
												ret.push({ hash : v.split("_development_").pop().split(".").shift(), published : new Date(y1,m1 - 1,d1,hh1,mm1,ss1)});
											}
										}
									} else if(_hx_tmp1[2] == null) {
										var _hx_tmp4 = _hx_tmp[1].split(":").map(Std.parseInt);
										if(_hx_tmp4.length == 3) {
											var ss2 = _hx_tmp4[2];
											var mm2 = _hx_tmp4[1];
											var hh2 = _hx_tmp4[0];
											var y2 = _hx_tmp1[0];
											var m2 = _hx_tmp1[1];
											var d2 = _hx_tmp1[2];
											ret.push({ hash : v.split("_development_").pop().split(".").shift(), published : new Date(y2,m2 - 1,d2,hh2,mm2,ss2)});
										}
									} else {
										var _hx_tmp5 = _hx_tmp[1].split(":").map(Std.parseInt);
										if(_hx_tmp5.length == 3) {
											var ss3 = _hx_tmp5[2];
											var mm3 = _hx_tmp5[1];
											var hh3 = _hx_tmp5[0];
											var y3 = _hx_tmp1[0];
											var m3 = _hx_tmp1[1];
											var d3 = _hx_tmp1[2];
											ret.push({ hash : v.split("_development_").pop().split(".").shift(), published : new Date(y3,m3 - 1,d3,hh3,mm3,ss3)});
										}
									}
								} else if(_hx_tmp1[1] == null) {
									if(_hx_tmp1[2] == null) {
										var _hx_tmp6 = _hx_tmp[1].split(":").map(Std.parseInt);
										if(_hx_tmp6.length == 3) {
											var ss4 = _hx_tmp6[2];
											var mm4 = _hx_tmp6[1];
											var hh4 = _hx_tmp6[0];
											var y4 = _hx_tmp1[0];
											var m4 = _hx_tmp1[1];
											var d4 = _hx_tmp1[2];
											ret.push({ hash : v.split("_development_").pop().split(".").shift(), published : new Date(y4,m4 - 1,d4,hh4,mm4,ss4)});
										}
									} else {
										var _hx_tmp7 = _hx_tmp[1].split(":").map(Std.parseInt);
										if(_hx_tmp7.length == 3) {
											var ss5 = _hx_tmp7[2];
											var mm5 = _hx_tmp7[1];
											var hh5 = _hx_tmp7[0];
											var y5 = _hx_tmp1[0];
											var m5 = _hx_tmp1[1];
											var d5 = _hx_tmp1[2];
											ret.push({ hash : v.split("_development_").pop().split(".").shift(), published : new Date(y5,m5 - 1,d5,hh5,mm5,ss5)});
										}
									}
								} else if(_hx_tmp1[2] == null) {
									var _hx_tmp8 = _hx_tmp[1].split(":").map(Std.parseInt);
									if(_hx_tmp8.length == 3) {
										var ss6 = _hx_tmp8[2];
										var mm6 = _hx_tmp8[1];
										var hh6 = _hx_tmp8[0];
										var y6 = _hx_tmp1[0];
										var m6 = _hx_tmp1[1];
										var d6 = _hx_tmp1[2];
										ret.push({ hash : v.split("_development_").pop().split(".").shift(), published : new Date(y6,m6 - 1,d6,hh6,mm6,ss6)});
									}
								} else {
									var _hx_tmp9 = _hx_tmp[1].split(":").map(Std.parseInt);
									if(_hx_tmp9.length == 3) {
										var ss7 = _hx_tmp9[2];
										var mm7 = _hx_tmp9[1];
										var hh7 = _hx_tmp9[0];
										var y7 = _hx_tmp1[0];
										var m7 = _hx_tmp1[1];
										var d7 = _hx_tmp1[2];
										ret.push({ hash : v.split("_development_").pop().split(".").shift(), published : new Date(y7,m7 - 1,d7,hh7,mm7,ss7)});
									}
								}
							}
						}
					}
				}
			}
		}
		return switchx_Switchx.sortedNightlies(ret);
	}));
};
switchx_Switchx.attempt = function(what,l) {
	var o;
	try {
		o = tink_core_Outcome.Success(l.get());
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		o = tink_core_Outcome.Failure(new tink_core_TypedError(null,"Failed to " + what + " because " + Std.string(e),{ fileName : "Switchx.hx", lineNumber : 114, className : "switchx.Switchx", methodName : "attempt"}));
	}
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
};
switchx_Switchx.pickFirst = function(kind,make) {
	return function(i) {
		var _g = $iterator(i)().next();
		if(_g == null) {
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(404,"No " + kind + " build found",{ fileName : "Switchx.hx", lineNumber : 145, className : "switchx.Switchx", methodName : "pickFirst"})));
		} else {
			var v = _g;
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(make(v)));
		}
	};
};
switchx_Switchx.prototype = {
	officialInstalled: function(kind) {
		var _g = [];
		var _g1 = 0;
		var _g2 = js_node_Fs.readdirSync(this.scope.versionDir);
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(!switchx__$Version_UserVersion_$Impl_$.isHash(v) && js_node_Fs.statSync(this.versionDir(v)).isDirectory()) {
				_g.push(v);
			}
		}
		return switchx_Switchx.attempt("Get installed Haxe versions",new tink_core__$Lazy_LazyConst(switchx_Switchx.sortedOfficial(kind,_g)));
	}
	,nightliesInstalled: function() {
		var _g = [];
		var _g1 = 0;
		var _g2 = js_node_Fs.readdirSync(this.scope.versionDir).filter(switchx__$Version_UserVersion_$Impl_$.isHash);
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			_g.push({ hash : v, published : HxOverrides.strDate(JSON.parse(js_node_Fs.readFileSync("" + this.versionDir(v) + "/" + switchx_Switchx.VERSION_INFO,{ encoding : "utf8"})).published)});
		}
		return switchx_Switchx.attempt("get installed Haxe versions",new tink_core__$Lazy_LazyConst(switchx_Switchx.sortedNightlies(_g)));
	}
	,switchTo: function(version) {
		var _gthis = this;
		return switchx_Switchx.attempt("save new configuration to " + this.scope.configFile,new tink_core__$Lazy_LazyFunc(function() {
			_gthis.scope.reconfigure({ version : switchx__$Version_ResolvedVersion_$Impl_$.get_id(version), resolveLibs : _gthis.scope.config.resolveLibs});
			return tink_core_Noise.Noise;
		}));
	}
	,resolveInstalled: function(version) {
		return this.resolve(version,$bind(this,this.officialInstalled),$bind(this,this.nightliesInstalled));
	}
	,resolveOnline: function(version) {
		return this.resolve(version,switchx_Switchx.officialOnline,switchx_Switchx.nightliesOnline);
	}
	,resolve: function(version,getOfficial,getNightlies) {
		switch(version[1]) {
		case 0:
			return tink_core__$Promise_Promise_$Impl_$.next(getNightlies(),switchx_Switchx.pickFirst("nightly",switchx_ResolvedUserVersionData.RNightly));
		case 1:
			return tink_core__$Promise_Promise_$Impl_$.next(getOfficial(switchx_PickOfficial.IncludePrereleases),switchx_Switchx.pickFirst("official",switchx_ResolvedUserVersionData.ROfficial));
		case 2:
			return tink_core__$Promise_Promise_$Impl_$.next(getOfficial(switchx_PickOfficial.StableOnly),switchx_Switchx.pickFirst("stable",switchx_ResolvedUserVersionData.ROfficial));
		case 3:
			var hash = version[2];
			return tink_core__$Promise_Promise_$Impl_$.ofSpecific(tink_core__$Promise_Promise_$Impl_$.next(getNightlies(),function(v) {
				var n = $iterator(v)();
				while(n.hasNext()) {
					var n1 = n.next();
					if(n1.hash == hash) {
						return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(switchx_ResolvedUserVersionData.RNightly(n1)));
					}
				}
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(404,"Unknown nightly " + switchx__$Version_UserVersion_$Impl_$.toString(version),{ fileName : "Switchx.hx", lineNumber : 170, className : "switchx.Switchx", methodName : "resolve"})));
			}));
		case 4:
			var version1 = version[2];
			return tink_core__$Promise_Promise_$Impl_$.ofSpecific(tink_core__$Promise_Promise_$Impl_$.next(getOfficial(switchx_PickOfficial.IncludePrereleases),function(versions) {
				if(Lambda.has(versions,version1)) {
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(switchx_ResolvedUserVersionData.ROfficial(version1)));
				} else {
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(404,"Unknown version " + version1,{ fileName : "Switchx.hx", lineNumber : 178, className : "switchx.Switchx", methodName : "resolve"})));
				}
			}));
		case 5:
			var path = version[2];
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(switchx_ResolvedUserVersionData.RCustom(path)));
		}
	}
	,versionDir: function(name) {
		return this.scope.getInstallation(name).path;
	}
	,isDownloaded: function(r) {
		return sys_FileSystem.exists(this.versionDir(switchx__$Version_ResolvedVersion_$Impl_$.get_id(r)));
	}
	,linkToOfficial: function(version) {
		var tmp = "http://haxe.org/website-content/downloads/" + version + "/downloads/haxe-" + version + "-";
		var _g = Sys.systemName();
		var tmp1;
		switch(_g) {
		case "Mac":
			tmp1 = "osx.tar.gz";
			break;
		case "Windows":
			tmp1 = "win.zip";
			break;
		default:
			if(version < "3") {
				tmp1 = "linux.tar.gz";
			} else {
				tmp1 = "linux64.tar.gz";
			}
		}
		return tmp + tmp1;
	}
	,replace: function(target,replacement,archiveAs,beforeReplace) {
		var root = replacement;
		while(true) {
			var _g = switchx_Fs.ls(replacement);
			if(_g.length == 1) {
				var sub = _g[0];
				replacement = sub;
			} else {
				break;
			}
		}
		if(beforeReplace != null) {
			beforeReplace(replacement);
		}
		if(sys_FileSystem.exists(target)) {
			var old = "" + this.downloads + "/" + archiveAs + "@" + Math.floor(js_node_Fs.statSync(target).ctime.getTime());
			js_node_Fs.renameSync(target,old);
			js_node_Fs.renameSync(replacement,target);
		} else {
			js_node_Fs.renameSync(replacement,target);
		}
		if(sys_FileSystem.exists(root)) {
			switchx_Fs["delete"](root);
		}
	}
	,download: function(version,options) {
		var _gthis = this;
		var _hx_tmp;
		switch(version[1]) {
		case 0:
			_hx_tmp = this.isDownloaded(version);
			if(_hx_tmp == true) {
				if(options.force != true) {
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(false));
				} else {
					var date = version[2].published;
					var hash = version[2].hash;
					return tink_core__$Promise_Promise_$Impl_$.next(switchx_Download.archive(switchx_Switchx.linkToNightly(hash,date),0,"" + this.downloads + "/" + hash + "@" + Math.floor(new Date().getTime()),!_gthis.silent),function(dir) {
						var tmp = _gthis.versionDir(hash);
						_gthis.replace(tmp,dir,hash,function(dir1) {
							js_node_Fs.writeFileSync("" + dir1 + "/" + switchx_Switchx.VERSION_INFO,JSON.stringify({ published : HxOverrides.dateStr(date)}));
						});
						return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(true));
					});
				}
			} else {
				var date1 = version[2].published;
				var hash1 = version[2].hash;
				return tink_core__$Promise_Promise_$Impl_$.next(switchx_Download.archive(switchx_Switchx.linkToNightly(hash1,date1),0,"" + this.downloads + "/" + hash1 + "@" + Math.floor(new Date().getTime()),!_gthis.silent),function(dir2) {
					var tmp1 = _gthis.versionDir(hash1);
					_gthis.replace(tmp1,dir2,hash1,function(dir3) {
						js_node_Fs.writeFileSync("" + dir3 + "/" + switchx_Switchx.VERSION_INFO,JSON.stringify({ published : HxOverrides.dateStr(date1)}));
					});
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(true));
				});
			}
			break;
		case 1:
			_hx_tmp = this.isDownloaded(version);
			if(_hx_tmp == true) {
				if(options.force != true) {
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(false));
				} else {
					var version1 = version[2];
					var url = this.linkToOfficial(version1);
					var tmp2 = "" + this.downloads + "/" + version1 + "@" + Math.floor(new Date().getTime());
					var ret = switchx_Download.archive(url,0,tmp2,!_gthis.silent);
					return tink_core__$Promise_Promise_$Impl_$.next(ret,function(v) {
						var tmp3 = _gthis.versionDir(version1);
						_gthis.replace(tmp3,v,version1);
						return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(true));
					});
				}
			} else {
				var version2 = version[2];
				var url1 = this.linkToOfficial(version2);
				var tmp4 = "" + this.downloads + "/" + version2 + "@" + Math.floor(new Date().getTime());
				var ret1 = switchx_Download.archive(url1,0,tmp4,!_gthis.silent);
				return tink_core__$Promise_Promise_$Impl_$.next(ret1,function(v1) {
					var tmp5 = _gthis.versionDir(version2);
					_gthis.replace(tmp5,v1,version2);
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(true));
				});
			}
			break;
		case 2:
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"Cannot download custom version",{ fileName : "Switchx.hx", lineNumber : 236, className : "switchx.Switchx", methodName : "download"})));
		}
	}
	,__class__: switchx_Switchx
};
var switchx_Tar = function() { };
switchx_Tar.__name__ = true;
switchx_Tar.parse = function(source,onentry) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var parse = new switchx_TarParse({ onentry : onentry});
		source.pipe(parse,{ end : true});
		parse.on("end",function() {
			cb(tink_core_Outcome.Success(tink_core_Noise.Noise));
		});
		parse.on("error",function(e) {
			var tmp = tink_core_Outcome.Failure(new tink_core_TypedError(null,e.message,{ fileName : "Tar.hx", lineNumber : 14, className : "switchx.Tar", methodName : "parse"}));
			cb(tmp);
		});
	});
};
var switchx_TarParse = require("tar").Parse;
var switchx_UserVersionData = { __ename__ : true, __constructs__ : ["UEdge","ULatest","UStable","UNightly","UOfficial","UCustom"] };
switchx_UserVersionData.UEdge = ["UEdge",0];
switchx_UserVersionData.UEdge.toString = $estr;
switchx_UserVersionData.UEdge.__enum__ = switchx_UserVersionData;
switchx_UserVersionData.ULatest = ["ULatest",1];
switchx_UserVersionData.ULatest.toString = $estr;
switchx_UserVersionData.ULatest.__enum__ = switchx_UserVersionData;
switchx_UserVersionData.UStable = ["UStable",2];
switchx_UserVersionData.UStable.toString = $estr;
switchx_UserVersionData.UStable.__enum__ = switchx_UserVersionData;
switchx_UserVersionData.UNightly = function(hash) { var $x = ["UNightly",3,hash]; $x.__enum__ = switchx_UserVersionData; $x.toString = $estr; return $x; };
switchx_UserVersionData.UOfficial = function(version) { var $x = ["UOfficial",4,version]; $x.__enum__ = switchx_UserVersionData; $x.toString = $estr; return $x; };
switchx_UserVersionData.UCustom = function(path) { var $x = ["UCustom",5,path]; $x.__enum__ = switchx_UserVersionData; $x.toString = $estr; return $x; };
var switchx__$Version_Official_$Impl_$ = {};
switchx__$Version_Official_$Impl_$.__name__ = true;
switchx__$Version_Official_$Impl_$.get_isPrerelease = function(this1) {
	return this1.indexOf("-") != -1;
};
switchx__$Version_Official_$Impl_$.isNumber = function(s) {
	return new EReg("^[0-9]*$","").match(s);
};
switchx__$Version_Official_$Impl_$.fragment = function(a,b) {
	if(switchx__$Version_Official_$Impl_$.isNumber(a) && switchx__$Version_Official_$Impl_$.isNumber(b)) {
		return Std.parseInt(a) - Std.parseInt(b);
	} else {
		return Reflect.compare(a,b);
	}
};
switchx__$Version_Official_$Impl_$.compare = function(a,b) {
	var a1 = a.split("-");
	var b1 = b.split("-");
	var i = 0;
	while(i < a1.length && i < b1.length) {
		var a2 = a1[i].split(".");
		var b2 = b1[i++].split(".");
		var i1 = 0;
		while(i1 < a2.length && i1 < b2.length) {
			var _g = switchx__$Version_Official_$Impl_$.fragment(a2[i1],b2[i1]);
			if(_g == 0) {
				++i1;
			} else {
				var v = _g;
				return -v;
			}
		}
		var _g1 = a2.length - b2.length;
		if(_g1 != 0) {
			var v1 = _g1;
			return -v1;
		}
	}
	return (a1.length - b1.length) * (i == 1 ? 1 : -1);
};
var switchx_ResolvedUserVersionData = { __ename__ : true, __constructs__ : ["RNightly","ROfficial","RCustom"] };
switchx_ResolvedUserVersionData.RNightly = function(nightly) { var $x = ["RNightly",0,nightly]; $x.__enum__ = switchx_ResolvedUserVersionData; $x.toString = $estr; return $x; };
switchx_ResolvedUserVersionData.ROfficial = function(version) { var $x = ["ROfficial",1,version]; $x.__enum__ = switchx_ResolvedUserVersionData; $x.toString = $estr; return $x; };
switchx_ResolvedUserVersionData.RCustom = function(path) { var $x = ["RCustom",2,path]; $x.__enum__ = switchx_ResolvedUserVersionData; $x.toString = $estr; return $x; };
var switchx__$Version_ResolvedVersion_$Impl_$ = {};
switchx__$Version_ResolvedVersion_$Impl_$.__name__ = true;
switchx__$Version_ResolvedVersion_$Impl_$.get_id = function(this1) {
	switch(this1[1]) {
	case 0:
		var v = this1[2].hash;
		return v;
	case 1:
		var v1 = this1[2];
		return v1;
	case 2:
		var v2 = this1[2];
		return v2;
	}
};
switchx__$Version_ResolvedVersion_$Impl_$.toString = function(this1) {
	return switchx__$Version_UserVersion_$Impl_$.toString(switchx__$Version_UserVersion_$Impl_$.ofResolved(this1));
};
var switchx__$Version_UserVersion_$Impl_$ = {};
switchx__$Version_UserVersion_$Impl_$.__name__ = true;
switchx__$Version_UserVersion_$Impl_$.ofResolved = function(v) {
	switch(v[1]) {
	case 0:
		var version = v[2].hash;
		return switchx_UserVersionData.UNightly(version);
	case 1:
		var version1 = v[2];
		return switchx_UserVersionData.UOfficial(version1);
	case 2:
		var v1 = v[2];
		return switchx_UserVersionData.UCustom(v1);
	}
};
switchx__$Version_UserVersion_$Impl_$.isHash = function(version) {
	var _g1 = 0;
	var _g = version.length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = switchx__$Version_UserVersion_$Impl_$.hex;
		var key = version.charCodeAt(i);
		if(!this1.h[key]) {
			return false;
		}
	}
	return true;
};
switchx__$Version_UserVersion_$Impl_$.toString = function(this1) {
	switch(this1[1]) {
	case 0:
		return "latest nightly build";
	case 1:
		return "latest official";
	case 2:
		return "latest stable release";
	case 3:
		var v = this1[2];
		return "nightly build " + v;
	case 4:
		var v1 = this1[2];
		return "official release " + v1;
	case 5:
		var v2 = this1[2];
		return "custom version at `" + v2 + "`";
	}
};
switchx__$Version_UserVersion_$Impl_$.isPath = function(v) {
	if(!haxe_io_Path.isAbsolute(v)) {
		return v.charAt(0) == ".";
	} else {
		return true;
	}
};
switchx__$Version_UserVersion_$Impl_$.ofString = function(s) {
	if(s == null) {
		return null;
	} else {
		var _hx_tmp;
		var _hx_tmp1;
		if(s == null) {
			_hx_tmp = switchx__$Version_UserVersion_$Impl_$.isHash(s);
			if(_hx_tmp == true) {
				return switchx_UserVersionData.UNightly(s);
			} else {
				_hx_tmp1 = switchx__$Version_UserVersion_$Impl_$.isPath(s);
				if(_hx_tmp1 == true) {
					return switchx_UserVersionData.UCustom(s);
				} else {
					return switchx_UserVersionData.UOfficial(s);
				}
			}
		} else {
			switch(s) {
			case "auto":
				return null;
			case "latest":
				return switchx_UserVersionData.ULatest;
			case "edge":case "nightly":
				return switchx_UserVersionData.UEdge;
			case "stable":
				return switchx_UserVersionData.UStable;
			default:
				_hx_tmp = switchx__$Version_UserVersion_$Impl_$.isHash(s);
				if(_hx_tmp == true) {
					return switchx_UserVersionData.UNightly(s);
				} else {
					_hx_tmp1 = switchx__$Version_UserVersion_$Impl_$.isPath(s);
					if(_hx_tmp1 == true) {
						return switchx_UserVersionData.UCustom(s);
					} else {
						return switchx_UserVersionData.UOfficial(s);
					}
				}
			}
		}
	}
};
var switchx_Yauzl = require("yauzl");
var sys_FileSystem = function() { };
sys_FileSystem.__name__ = true;
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _ ) {
		return false;
	}
};
sys_FileSystem.createDirectory = function(path) {
	try {
		js_node_Fs.mkdirSync(path);
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		if(e.code == "ENOENT") {
			sys_FileSystem.createDirectory(js_node_Path.dirname(path));
			js_node_Fs.mkdirSync(path);
		} else {
			var stat;
			try {
				stat = js_node_Fs.statSync(path);
			} catch( _ ) {
				throw e;
			}
			if(!stat.isDirectory()) {
				throw e;
			}
		}
	}
};
var sys_io_File = function() { };
sys_io_File.__name__ = true;
sys_io_File.copy = function(srcPath,dstPath) {
	var src = js_node_Fs.openSync(srcPath,"r");
	var stat = js_node_Fs.fstatSync(src);
	var dst = js_node_Fs.openSync(dstPath,"w",stat.mode);
	var bytesRead;
	var pos = 0;
	while(true) {
		bytesRead = js_node_Fs.readSync(src,sys_io_File.copyBuf,0,65536,pos);
		if(!(bytesRead > 0)) {
			break;
		}
		js_node_Fs.writeSync(dst,sys_io_File.copyBuf,0,bytesRead);
		pos += bytesRead;
	}
	js_node_Fs.closeSync(src);
	js_node_Fs.closeSync(dst);
};
var sys_io_FileInput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
sys_io_FileInput.__name__ = true;
sys_io_FileInput.__super__ = haxe_io_Input;
sys_io_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		var buf = new js_node_buffer_Buffer(1);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,0,1,this.pos);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(e.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e));
			}
		}
		if(bytesRead == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.pos++;
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = new js_node_buffer_Buffer(data.buffer,data.byteOffset,data.byteLength);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,pos,len,this.pos);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(e.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e));
			}
		}
		if(bytesRead == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.pos += bytesRead;
		return bytesRead;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos[1]) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,eof: function() {
		return this.pos >= js_node_Fs.fstatSync(this.fd).size;
	}
	,__class__: sys_io_FileInput
});
var sys_io_FileSeek = { __ename__ : true, __constructs__ : ["SeekBegin","SeekCur","SeekEnd"] };
sys_io_FileSeek.SeekBegin = ["SeekBegin",0];
sys_io_FileSeek.SeekBegin.toString = $estr;
sys_io_FileSeek.SeekBegin.__enum__ = sys_io_FileSeek;
sys_io_FileSeek.SeekCur = ["SeekCur",1];
sys_io_FileSeek.SeekCur.toString = $estr;
sys_io_FileSeek.SeekCur.__enum__ = sys_io_FileSeek;
sys_io_FileSeek.SeekEnd = ["SeekEnd",2];
sys_io_FileSeek.SeekEnd.toString = $estr;
sys_io_FileSeek.SeekEnd.__enum__ = sys_io_FileSeek;
var tink_core_Annex = function(target) {
	this.target = target;
	this.registry = new haxe_ds_ObjectMap();
};
tink_core_Annex.__name__ = true;
tink_core_Annex.prototype = {
	__class__: tink_core_Annex
};
var tink_core__$Any_Any_$Impl_$ = {};
tink_core__$Any_Any_$Impl_$.__name__ = true;
tink_core__$Any_Any_$Impl_$.__promote = function(this1) {
	return this1;
};
var tink_core__$Callback_Callback_$Impl_$ = {};
tink_core__$Callback_Callback_$Impl_$.__name__ = true;
tink_core__$Callback_Callback_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.toFunction = function(this1) {
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.invoke = function(this1,data) {
	this1(data);
};
tink_core__$Callback_Callback_$Impl_$.ignore = function(cb) {
	return tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		cb(tink_core_Noise.Noise);
	});
};
tink_core__$Callback_Callback_$Impl_$.fromNiladic = function(f) {
	var this1 = function(r) {
		f();
	};
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.fromMany = function(callbacks) {
	return function(v) {
		var _g = 0;
		while(_g < callbacks.length) {
			var callback = callbacks[_g];
			++_g;
			callback(v);
		}
	};
};
tink_core__$Callback_Callback_$Impl_$.defer = function(f) {
	process.nextTick(f);
};
var tink_core__$Callback_LinkObject = function() { };
tink_core__$Callback_LinkObject.__name__ = true;
tink_core__$Callback_LinkObject.prototype = {
	__class__: tink_core__$Callback_LinkObject
};
var tink_core__$Callback_CallbackLink_$Impl_$ = {};
tink_core__$Callback_CallbackLink_$Impl_$.__name__ = true;
tink_core__$Callback_CallbackLink_$Impl_$._new = function(link) {
	var this1 = new tink_core__$Callback_SimpleLink(link);
	return this1;
};
tink_core__$Callback_CallbackLink_$Impl_$.dissolve = function(this1) {
	if(this1 != null) {
		this1.dissolve();
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.toCallback = function(this1) {
	return function(_) {
		this1.dissolve();
	};
};
tink_core__$Callback_CallbackLink_$Impl_$.fromFunction = function(f) {
	var this1 = new tink_core__$Callback_SimpleLink(f);
	return this1;
};
tink_core__$Callback_CallbackLink_$Impl_$.join = function(a,b) {
	return new tink_core__$Callback_LinkPair(a,b);
};
tink_core__$Callback_CallbackLink_$Impl_$.fromMany = function(callbacks) {
	var this1 = new tink_core__$Callback_SimpleLink(function() {
		var _g = 0;
		while(_g < callbacks.length) {
			var cb = callbacks[_g];
			++_g;
			if(cb != null) {
				cb.dissolve();
			}
		}
	});
	return this1;
};
var tink_core__$Callback_SimpleLink = function(f) {
	this.f = f;
};
tink_core__$Callback_SimpleLink.__name__ = true;
tink_core__$Callback_SimpleLink.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_SimpleLink.prototype = {
	dissolve: function() {
		if(this.f != null) {
			this.f();
		}
	}
	,__class__: tink_core__$Callback_SimpleLink
};
var tink_core__$Callback_LinkPair = function(a,b) {
	this.dissolved = false;
	this.a = a;
	this.b = b;
};
tink_core__$Callback_LinkPair.__name__ = true;
tink_core__$Callback_LinkPair.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_LinkPair.prototype = {
	dissolve: function() {
		if(!this.dissolved) {
			this.dissolved = true;
			var this1 = this.a;
			if(this1 != null) {
				this1.dissolve();
			}
			var this2 = this.b;
			if(this2 != null) {
				this2.dissolve();
			}
		}
	}
	,__class__: tink_core__$Callback_LinkPair
};
var tink_core__$Callback_ListCell = function(cb,list) {
	if(cb == null) {
		throw new js__$Boot_HaxeError("callback expected but null received");
	}
	this.cb = cb;
	this.list = list;
};
tink_core__$Callback_ListCell.__name__ = true;
tink_core__$Callback_ListCell.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_ListCell.prototype = {
	invoke: function(data) {
		if(this.cb != null) {
			this.cb(data);
		}
	}
	,clear: function() {
		this.list = null;
		this.cb = null;
	}
	,dissolve: function() {
		var _g = this.list;
		if(_g != null) {
			var v = _g;
			this.clear();
			HxOverrides.remove(v,this);
		}
	}
	,__class__: tink_core__$Callback_ListCell
};
var tink_core__$Callback_CallbackList_$Impl_$ = {};
tink_core__$Callback_CallbackList_$Impl_$.__name__ = true;
tink_core__$Callback_CallbackList_$Impl_$._new = function() {
	var this1 = [];
	return this1;
};
tink_core__$Callback_CallbackList_$Impl_$.get_length = function(this1) {
	return this1.length;
};
tink_core__$Callback_CallbackList_$Impl_$.add = function(this1,cb) {
	var node = new tink_core__$Callback_ListCell(cb,this1);
	this1.push(node);
	return node;
};
tink_core__$Callback_CallbackList_$Impl_$.invoke = function(this1,data) {
	var _g = 0;
	var _g1 = this1.slice();
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		if(cell.cb != null) {
			cell.cb(data);
		}
	}
};
tink_core__$Callback_CallbackList_$Impl_$.clear = function(this1) {
	var _g = 0;
	var _g1 = this1.splice(0,this1.length);
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		cell.clear();
	}
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.isTinkError = true;
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
tink_core_TypedError.__name__ = true;
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.ofJsError = function(e,pos) {
	return tink_core_TypedError.withData(500,e.message,e,pos);
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return tink_core_Outcome.Failure(e.isTinkError ? e : report == null ? tink_core_TypedError.withData(null,"Unexpected Error",e,pos) : report(e));
	}
};
tink_core_TypedError.reporter = function(code,message,pos) {
	return function(e) {
		return tink_core_TypedError.withData(code,message,e,pos);
	};
};
tink_core_TypedError.rethrow = function(any) {
	throw js__$Boot_HaxeError.wrap(any);
};
tink_core_TypedError.prototype = {
	printPos: function() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	,toString: function() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	,throwSelf: function() {
		throw new js__$Boot_HaxeError(this);
	}
	,__class__: tink_core_TypedError
};
var tink_core__$Error_Stack_$Impl_$ = {};
tink_core__$Error_Stack_$Impl_$.__name__ = true;
tink_core__$Error_Stack_$Impl_$.toString = function(this1) {
	return haxe_CallStack.toString(this1);
};
var tink_core__$Future_FutureObject = function() { };
tink_core__$Future_FutureObject.__name__ = true;
tink_core__$Future_FutureObject.prototype = {
	__class__: tink_core__$Future_FutureObject
};
var tink_core__$Future_NeverFuture = function() {
};
tink_core__$Future_NeverFuture.__name__ = true;
tink_core__$Future_NeverFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_NeverFuture.prototype = {
	map: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,flatMap: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,handle: function(callback) {
		return null;
	}
	,gather: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,eager: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,__class__: tink_core__$Future_NeverFuture
};
var tink_core_Noise = { __ename__ : true, __constructs__ : ["Noise"] };
tink_core_Noise.Noise = ["Noise",0];
tink_core_Noise.Noise.toString = $estr;
tink_core_Noise.Noise.__enum__ = tink_core_Noise;
var tink_core__$Lazy_LazyObject = function() { };
tink_core__$Lazy_LazyObject.__name__ = true;
tink_core__$Lazy_LazyObject.prototype = {
	__class__: tink_core__$Lazy_LazyObject
};
var tink_core__$Lazy_LazyConst = function(value) {
	this.value = value;
};
tink_core__$Lazy_LazyConst.__name__ = true;
tink_core__$Lazy_LazyConst.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyConst.prototype = {
	get: function() {
		return this.value;
	}
	,map: function(f) {
		return new tink_core__$Lazy_LazyConst(f(this.value));
	}
	,flatMap: function(f) {
		return f(this.value);
	}
	,__class__: tink_core__$Lazy_LazyConst
};
var tink_core__$Future_SyncFuture = function(value) {
	this.value = value;
};
tink_core__$Future_SyncFuture.__name__ = true;
tink_core__$Future_SyncFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SyncFuture.prototype = {
	map: function(f) {
		return new tink_core__$Future_SyncFuture(this.value.map(f));
	}
	,flatMap: function(f) {
		var l = this.value.map(f);
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return l.get().handle(cb);
		});
	}
	,handle: function(cb) {
		cb(this.value.get());
		return null;
	}
	,eager: function() {
		return this;
	}
	,gather: function() {
		return this;
	}
	,__class__: tink_core__$Future_SyncFuture
};
var tink_core__$Future_Future_$Impl_$ = {};
tink_core__$Future_Future_$Impl_$.__name__ = true;
tink_core__$Future_Future_$Impl_$._new = function(f) {
	var this1 = new tink_core__$Future_SimpleFuture(f);
	return this1;
};
tink_core__$Future_Future_$Impl_$.first = function(this1,other) {
	var ret = new tink_core_FutureTrigger();
	var l1 = this1.handle($bind(ret,ret.trigger));
	var l2 = other.handle($bind(ret,ret.trigger));
	var ret1 = ret;
	if(l1 != null) {
		var this2 = l1;
		ret1.handle(function(_) {
			this2.dissolve();
		});
	}
	if(l2 != null) {
		var this3 = l2;
		ret1.handle(function(_1) {
			this3.dissolve();
		});
	}
	return ret1;
};
tink_core__$Future_Future_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.map(f);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatMap = function(this1,next,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(next);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.next = function(this1,n) {
	return this1.flatMap(function(v) {
		return n(v);
	});
};
tink_core__$Future_Future_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(t) {
		var ret1 = other.map(function(a) {
			return merger(t,a);
		});
		return ret1;
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatten = function(f) {
	return new tink_core__$Future_NestedFuture(f);
};
tink_core__$Future_Future_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		promise.then(function(a) {
			cb(tink_core_Outcome.Success(a));
		})["catch"](function(e) {
			var tmp = tink_core_Outcome.Failure(tink_core_TypedError.withData(null,e.message,e,{ fileName : "Future.hx", lineNumber : 77, className : "tink.core._Future.Future_Impl_", methodName : "ofJsPromise"}));
			cb(tmp);
		});
	});
};
tink_core__$Future_Future_$Impl_$.asPromise = function(s) {
	return s;
};
tink_core__$Future_Future_$Impl_$.ofMany = function(futures,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst([]));
	var _g = 0;
	while(_g < futures.length) {
		var f = [futures[_g]];
		++_g;
		var ret1 = ret.flatMap((function(f1) {
			return function(results) {
				var ret2 = (function() {
					return function(result) {
						return results.concat([result]);
					};
				})();
				var ret3 = f1[0].map(ret2);
				return ret3;
			};
		})(f));
		ret = ret1;
	}
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.fromMany = function(futures) {
	return tink_core__$Future_Future_$Impl_$.ofMany(futures);
};
tink_core__$Future_Future_$Impl_$.lazy = function(l) {
	return new tink_core__$Future_SyncFuture(l);
};
tink_core__$Future_Future_$Impl_$.sync = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core__$Future_Future_$Impl_$.async = function(f,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	if(lazy) {
		var f1 = f;
		return tink_core__$Future_Future_$Impl_$.flatten(new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyFunc(function() {
			return tink_core__$Future_Future_$Impl_$.async(f1,false);
		})));
	} else {
		var op = new tink_core_FutureTrigger();
		f($bind(op,op.trigger));
		return op;
	}
};
tink_core__$Future_Future_$Impl_$.or = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.first(a,b);
};
tink_core__$Future_Future_$Impl_$.either = function(a,b) {
	var ret = a.map(haxe_ds_Either.Left);
	var ret1 = b.map(haxe_ds_Either.Right);
	return tink_core__$Future_Future_$Impl_$.first(ret,ret1);
};
tink_core__$Future_Future_$Impl_$.and = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.merge(a,b,function(a1,b1) {
		var this1 = new tink_core_MPair(a1,b1);
		return this1;
	});
};
tink_core__$Future_Future_$Impl_$._tryFailingFlatMap = function(f,map) {
	var ret = f.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return map(d);
		case 1:
			var f1 = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryFlatMap = function(f,map) {
	var ret = f.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			var ret1 = map(d).map(tink_core_Outcome.Success);
			return ret1.gather();
		case 1:
			var f1 = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryFailingMap = function(f,map) {
	var ret = f.map(function(o) {
		return tink_core_OutcomeTools.flatMap(o,tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError(map));
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryMap = function(f,map) {
	var ret = f.map(function(o) {
		return tink_core_OutcomeTools.map(o,map);
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._flatMap = function(f,map) {
	var ret = f.flatMap(map);
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._map = function(f,map) {
	var ret = f.map(map);
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$.trigger = function() {
	return new tink_core_FutureTrigger();
};
var tink_core__$Future_Futuristic_$Impl_$ = {};
tink_core__$Future_Futuristic_$Impl_$.__name__ = true;
tink_core__$Future_Futuristic_$Impl_$.ofAny = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
var tink_core__$Future_SimpleFuture = function(f) {
	this.f = f;
};
tink_core__$Future_SimpleFuture.__name__ = true;
tink_core__$Future_SimpleFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SimpleFuture.prototype = {
	handle: function(callback) {
		return this.f(callback);
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var data = f(v);
				cb(data);
			});
		});
	}
	,flatMap: function(f) {
		var f1 = f;
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.flatten(new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var data = f1(v);
				cb(data);
			});
		}));
	}
	,gather: function() {
		return tink_core_FutureTrigger.gatherFuture(this);
	}
	,eager: function() {
		var ret = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,__class__: tink_core__$Future_SimpleFuture
};
var tink_core__$Future_NestedFuture = function(outer) {
	this.outer = outer;
};
tink_core__$Future_NestedFuture.__name__ = true;
tink_core__$Future_NestedFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_NestedFuture.prototype = {
	map: function(f) {
		var ret = this.outer.flatMap(function(inner) {
			var ret1 = inner.map(f);
			return ret1.gather();
		});
		return ret.gather();
	}
	,flatMap: function(f) {
		var ret = this.outer.flatMap(function(inner) {
			var ret1 = inner.flatMap(f);
			return ret1.gather();
		});
		return ret.gather();
	}
	,gather: function() {
		return tink_core_FutureTrigger.gatherFuture(this);
	}
	,eager: function() {
		var ret = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,handle: function(cb) {
		var ret = null;
		ret = this.outer.handle(function(inner) {
			ret = inner.handle(function(result) {
				cb(result);
			});
		});
		return ret;
	}
	,__class__: tink_core__$Future_NestedFuture
};
var tink_core_FutureTrigger = function() {
	var this1 = [];
	this.list = this1;
};
tink_core_FutureTrigger.__name__ = true;
tink_core_FutureTrigger.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core_FutureTrigger.gatherFuture = function(f) {
	var op = null;
	var this1 = new tink_core__$Future_SimpleFuture(function(cb) {
		if(op == null) {
			op = new tink_core_FutureTrigger();
			f.handle($bind(op,op.trigger));
			f = null;
		}
		return op.handle(cb);
	});
	return this1;
};
tink_core_FutureTrigger.prototype = {
	handle: function(callback) {
		var _g = this.list;
		if(_g == null) {
			callback(this.result);
			return null;
		} else {
			var v = _g;
			return tink_core__$Callback_CallbackList_$Impl_$.add(v,callback);
		}
	}
	,map: function(f) {
		var _g = this.list;
		if(_g == null) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(this.result)));
		} else {
			var v = _g;
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v1) {
				var tmp = f(v1);
				ret.trigger(tmp);
			});
			return ret;
		}
	}
	,flatMap: function(f) {
		var _g = this.list;
		if(_g == null) {
			return f(this.result);
		} else {
			var v = _g;
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v1) {
				f(v1).handle($bind(ret,ret.trigger));
			});
			return ret;
		}
	}
	,gather: function() {
		return this;
	}
	,eager: function() {
		return this;
	}
	,asFuture: function() {
		return this;
	}
	,trigger: function(result) {
		if(this.list == null) {
			return false;
		} else {
			var list = this.list;
			this.list = null;
			this.result = result;
			if(tink_core_FutureTrigger.depth >= 1000) {
				tink_core__$Callback_Callback_$Impl_$.defer(function() {
					tink_core_FutureTrigger.depth++;
					tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
					tink_core__$Callback_CallbackList_$Impl_$.clear(list);
					tink_core_FutureTrigger.depth--;
				});
			} else {
				tink_core_FutureTrigger.depth++;
				tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
				tink_core__$Callback_CallbackList_$Impl_$.clear(list);
				tink_core_FutureTrigger.depth--;
			}
			return true;
		}
	}
	,__class__: tink_core_FutureTrigger
};
var tink_core_JsPromiseTools = function() { };
tink_core_JsPromiseTools.__name__ = true;
tink_core_JsPromiseTools.toSurprise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core_JsPromiseTools.toPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
var tink_core__$Lazy_Lazy_$Impl_$ = {};
tink_core__$Lazy_Lazy_$Impl_$.__name__ = true;
tink_core__$Lazy_Lazy_$Impl_$.get = function(this1) {
	return this1.get();
};
tink_core__$Lazy_Lazy_$Impl_$.ofFunc = function(f) {
	return new tink_core__$Lazy_LazyFunc(f);
};
tink_core__$Lazy_Lazy_$Impl_$.map = function(this1,f) {
	return this1.map(f);
};
tink_core__$Lazy_Lazy_$Impl_$.flatMap = function(this1,f) {
	return this1.flatMap(f);
};
tink_core__$Lazy_Lazy_$Impl_$.ofConst = function(c) {
	return new tink_core__$Lazy_LazyConst(c);
};
var tink_core__$Lazy_LazyFunc = function(f) {
	this.f = f;
};
tink_core__$Lazy_LazyFunc.__name__ = true;
tink_core__$Lazy_LazyFunc.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyFunc.prototype = {
	get: function() {
		if(this.f != null) {
			this.result = this.f();
			this.f = null;
		}
		return this.result;
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var tmp = _gthis.get();
			return f(tmp);
		});
	}
	,flatMap: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var this1 = _gthis.get();
			return f(this1).get();
		});
	}
	,__class__: tink_core__$Lazy_LazyFunc
};
var tink_core_OptionTools = function() { };
tink_core_OptionTools.__name__ = true;
tink_core_OptionTools.force = function(o,pos) {
	if(o[1] == 0) {
		var v = o[2];
		return v;
	} else {
		throw new js__$Boot_HaxeError(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.or = function(o,l) {
	if(o[1] == 0) {
		var v = o[2];
		return v;
	} else {
		return l.get();
	}
};
tink_core_OptionTools.orNull = function(o) {
	if(o[1] == 0) {
		var v = o[2];
		return v;
	} else {
		return null;
	}
};
tink_core_OptionTools.filter = function(o,f) {
	if(o[1] == 0) {
		var _hx_tmp = f(o[2]);
		if(_hx_tmp == false) {
			return haxe_ds_Option.None;
		} else {
			return o;
		}
	} else {
		return o;
	}
};
tink_core_OptionTools.satisfies = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return f(v);
	} else {
		return false;
	}
};
tink_core_OptionTools.equals = function(o,v) {
	if(o[1] == 0) {
		var v1 = o[2];
		return v1 == v;
	} else {
		return false;
	}
};
tink_core_OptionTools.map = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return haxe_ds_Option.Some(f(v));
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.flatMap = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return f(v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.iterator = function(o) {
	return new tink_core_OptionIter(o);
};
tink_core_OptionTools.toArray = function(o) {
	if(o[1] == 0) {
		var v = o[2];
		return [v];
	} else {
		return [];
	}
};
var tink_core_OptionIter = function(o) {
	this.alive = true;
	if(o[1] == 0) {
		var v = o[2];
		this.value = v;
	} else {
		this.alive = false;
	}
};
tink_core_OptionIter.__name__ = true;
tink_core_OptionIter.prototype = {
	hasNext: function() {
		return this.alive;
	}
	,next: function() {
		this.alive = false;
		return this.value;
	}
	,__class__: tink_core_OptionIter
};
var tink_core_Outcome = { __ename__ : true, __constructs__ : ["Success","Failure"] };
tink_core_Outcome.Success = function(data) { var $x = ["Success",0,data]; $x.__enum__ = tink_core_Outcome; $x.toString = $estr; return $x; };
tink_core_Outcome.Failure = function(failure) { var $x = ["Failure",1,failure]; $x.__enum__ = tink_core_Outcome; $x.toString = $estr; return $x; };
var tink_core_OutcomeTools = function() { };
tink_core_OutcomeTools.__name__ = true;
tink_core_OutcomeTools.sure = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		var failure = outcome[2];
		if(js_Boot.__instanceof(failure,tink_core_TypedError)) {
			return failure.throwSelf();
		} else {
			throw new js__$Boot_HaxeError(failure);
		}
		break;
	}
};
tink_core_OutcomeTools.toOption = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return haxe_ds_Option.Some(data);
	case 1:
		return haxe_ds_Option.None;
	}
};
tink_core_OutcomeTools.toOutcome = function(option,pos) {
	switch(option[1]) {
	case 0:
		var value = option[2];
		return tink_core_Outcome.Success(value);
	case 1:
		return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Some value expected but none found in " + pos.fileName + "@line " + pos.lineNumber,{ fileName : "Outcome.hx", lineNumber : 47, className : "tink.core.OutcomeTools", methodName : "toOutcome"}));
	}
};
tink_core_OutcomeTools.orNull = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		return null;
	}
};
tink_core_OutcomeTools.orUse = function(outcome,fallback) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.orTry = function(outcome,fallback) {
	switch(outcome[1]) {
	case 0:
		return outcome;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.equals = function(outcome,to) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data == to;
	case 1:
		return false;
	}
};
tink_core_OutcomeTools.map = function(outcome,transform) {
	switch(outcome[1]) {
	case 0:
		var a = outcome[2];
		return tink_core_Outcome.Success(transform(a));
	case 1:
		var f = outcome[2];
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.isSuccess = function(outcome) {
	if(outcome[1] == 0) {
		return true;
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatMap = function(o,mapper) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$.apply(mapper,o);
};
tink_core_OutcomeTools.swap = function(outcome,v) {
	switch(outcome[1]) {
	case 0:
		var a = outcome[2];
		return tink_core_Outcome.Success(v);
	case 1:
		var f = outcome[2];
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.attempt = function(f,report) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return tink_core_Outcome.Failure(report(e));
	}
};
tink_core_OutcomeTools.flatten = function(o) {
	switch(o[1]) {
	case 0:
		switch(o[2][1]) {
		case 0:
			var d = o[2][2];
			return tink_core_Outcome.Success(d);
		case 1:
			var f = o[2][2];
			return tink_core_Outcome.Failure(f);
		}
		break;
	case 1:
		var f1 = o[2];
		return tink_core_Outcome.Failure(f1);
	}
};
var tink_core__$Outcome_OutcomeMapper_$Impl_$ = {};
tink_core__$Outcome_OutcomeMapper_$Impl_$.__name__ = true;
tink_core__$Outcome_OutcomeMapper_$Impl_$._new = function(f) {
	var this1 = { f : f};
	return this1;
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.apply = function(this1,o) {
	return this1.f(o);
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return f(d);
		case 1:
			var f1 = o[2];
			return tink_core_Outcome.Failure(f1);
		}
	});
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withEitherError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			var _g = f(d);
			switch(_g[1]) {
			case 0:
				var d1 = _g[2];
				return tink_core_Outcome.Success(d1);
			case 1:
				var f1 = _g[2];
				return tink_core_Outcome.Failure(haxe_ds_Either.Right(f1));
			}
			break;
		case 1:
			var f2 = o[2];
			return tink_core_Outcome.Failure(haxe_ds_Either.Left(f2));
		}
	});
};
var tink_core__$Pair_Pair_$Impl_$ = {};
tink_core__$Pair_Pair_$Impl_$.__name__ = true;
tink_core__$Pair_Pair_$Impl_$._new = function(a,b) {
	var this1 = new tink_core_MPair(a,b);
	return this1;
};
tink_core__$Pair_Pair_$Impl_$.get_a = function(this1) {
	return this1.a;
};
tink_core__$Pair_Pair_$Impl_$.get_b = function(this1) {
	return this1.b;
};
tink_core__$Pair_Pair_$Impl_$.toBool = function(this1) {
	return this1 != null;
};
tink_core__$Pair_Pair_$Impl_$.isNil = function(this1) {
	return this1 == null;
};
tink_core__$Pair_Pair_$Impl_$.nil = function() {
	return null;
};
var tink_core_MPair = function(a,b) {
	this.a = a;
	this.b = b;
};
tink_core_MPair.__name__ = true;
tink_core_MPair.prototype = {
	__class__: tink_core_MPair
};
var tink_core__$Promise_Promise_$Impl_$ = {};
tink_core__$Promise_Promise_$Impl_$.__name__ = true;
tink_core__$Promise_Promise_$Impl_$.eager = function(this1) {
	return this1.eager();
};
tink_core__$Promise_Promise_$Impl_$.map = function(this1,f) {
	var ret = this1.map(f);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.flatMap = function(this1,f) {
	var ret = this1.flatMap(f);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.tryRecover = function(this1,f) {
	var ret = this1.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
		case 1:
			var e = o[2];
			return f(e);
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.recover = function(this1,f) {
	var ret = this1.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(d));
		case 1:
			var e = o[2];
			return f(e);
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.mapError = function(this1,f) {
	var ret = this1.map(function(o) {
		switch(o[1]) {
		case 0:
			return o;
		case 1:
			var e = o[2];
			return tink_core_Outcome.Failure(f(e));
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.handle = function(this1,cb) {
	return this1.handle(cb);
};
tink_core__$Promise_Promise_$Impl_$.noise = function(this1) {
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(v) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
	});
};
tink_core__$Promise_Promise_$Impl_$.isSuccess = function(this1) {
	var ret = this1.map(function(o) {
		return tink_core_OutcomeTools.isSuccess(o);
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.next = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return f(d);
		case 1:
			var f1 = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Promise_Promise_$Impl_$.swap = function(this1,v) {
	return tink_core__$Future_Future_$Impl_$._tryMap(this1,function(_) {
		return v;
	});
};
tink_core__$Promise_Promise_$Impl_$.swapError = function(this1,e) {
	return tink_core__$Promise_Promise_$Impl_$.mapError(this1,function(_) {
		return e;
	});
};
tink_core__$Promise_Promise_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(t) {
		return tink_core__$Promise_Promise_$Impl_$.next(other,function(a) {
			return merger(t,a);
		},false);
	},gather);
};
tink_core__$Promise_Promise_$Impl_$.and = function(a,b) {
	return tink_core__$Promise_Promise_$Impl_$.merge(a,b,function(a1,b1) {
		var this1 = new tink_core_MPair(a1,b1);
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(this1));
	});
};
tink_core__$Promise_Promise_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core__$Promise_Promise_$Impl_$.ofSpecific = function(s) {
	return s;
};
tink_core__$Promise_Promise_$Impl_$.ofFuture = function(f) {
	var ret = f.map(tink_core_Outcome.Success);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.ofOutcome = function(o) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
};
tink_core__$Promise_Promise_$Impl_$.ofError = function(e) {
	return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(e));
};
tink_core__$Promise_Promise_$Impl_$.ofData = function(d) {
	return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(d));
};
tink_core__$Promise_Promise_$Impl_$.lazy = function(p) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		p.get().handle(cb);
	},true);
};
tink_core__$Promise_Promise_$Impl_$.inParallel = function(a,lazy) {
	if(a.length == 0) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success([])));
	} else {
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			var result = [];
			var pending = a.length;
			var links = null;
			var sync = false;
			var done = function(o) {
				if(links == null) {
					sync = true;
				} else if(links != null) {
					links.dissolve();
				}
				cb(o);
			};
			var fail = function(e) {
				done(tink_core_Outcome.Failure(e));
			};
			var set = function(index,value) {
				result[index] = value;
				if((pending -= 1) == 0) {
					done(tink_core_Outcome.Success(result));
				}
			};
			var linkArray = [];
			var _g1 = 0;
			var _g = a.length;
			while(_g1 < _g) {
				var i = [_g1++];
				if(sync) {
					break;
				}
				var i1 = i[0];
				var tmp = (function(i2) {
					return function(o1) {
						switch(o1[1]) {
						case 0:
							var v = o1[2];
							set(i2[0],v);
							break;
						case 1:
							var e1 = o1[2];
							fail(e1);
							break;
						}
					};
				})(i);
				linkArray.push(a[i1].handle(tmp));
			}
			links = tink_core__$Callback_CallbackLink_$Impl_$.fromMany(linkArray);
			if(sync) {
				if(links != null) {
					links.dissolve();
				}
			}
		},lazy);
	}
};
tink_core__$Promise_Promise_$Impl_$.inSequence = function(a) {
	var loop = null;
	loop = function(index) {
		if(index == a.length) {
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success([]));
		} else {
			return tink_core__$Promise_Promise_$Impl_$.next(a[index],function(head) {
				return tink_core__$Promise_Promise_$Impl_$.next(loop(index + 1),function(tail) {
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success([head].concat(tail)));
				});
			});
		}
	};
	var loop1 = loop;
	return loop1(0);
};
tink_core__$Promise_Promise_$Impl_$.lift = function(p) {
	return p;
};
var tink_core__$Promise_Next_$Impl_$ = {};
tink_core__$Promise_Next_$Impl_$.__name__ = true;
tink_core__$Promise_Next_$Impl_$.ofSafe = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x)));
	};
};
tink_core__$Promise_Next_$Impl_$.ofSync = function(f) {
	return function(x) {
		var ret = f(x).map(tink_core_Outcome.Success);
		return ret.gather();
	};
};
tink_core__$Promise_Next_$Impl_$.ofSafeSync = function(f) {
	return function(x) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(f(x)));
	};
};
tink_core__$Promise_Next_$Impl_$._chain = function(a,b) {
	return function(v) {
		return tink_core__$Promise_Promise_$Impl_$.next(a(v),b);
	};
};
var tink_core__$Promise_Recover_$Impl_$ = {};
tink_core__$Promise_Recover_$Impl_$.__name__ = true;
tink_core__$Promise_Recover_$Impl_$.ofSync = function(f) {
	return function(e) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(e)));
	};
};
var tink_core__$Promise_Combiner_$Impl_$ = {};
tink_core__$Promise_Combiner_$Impl_$.__name__ = true;
tink_core__$Promise_Combiner_$Impl_$.ofSafe = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x1,x2)));
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSync = function(f) {
	return function(x1,x2) {
		var ret = f(x1,x2).map(tink_core_Outcome.Success);
		return ret.gather();
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSafeSync = function(f) {
	return function(x1,x2) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(f(x1,x2)));
	};
};
var tink_core__$Ref_Ref_$Impl_$ = {};
tink_core__$Ref_Ref_$Impl_$.__name__ = true;
tink_core__$Ref_Ref_$Impl_$._new = function() {
	var this1;
	var this2 = new Array(1);
	this1 = this2;
	return this1;
};
tink_core__$Ref_Ref_$Impl_$.get_value = function(this1) {
	return this1[0];
};
tink_core__$Ref_Ref_$Impl_$.set_value = function(this1,param) {
	return this1[0] = param;
};
tink_core__$Ref_Ref_$Impl_$.toString = function(this1) {
	return "@[" + Std.string(this1[0]) + "]";
};
tink_core__$Ref_Ref_$Impl_$.to = function(v) {
	var this1;
	var this2 = new Array(1);
	this1 = this2;
	var ret = this1;
	ret[0] = v;
	return ret;
};
var tink_core__$Signal_Signal_$Impl_$ = {};
tink_core__$Signal_Signal_$Impl_$.__name__ = true;
tink_core__$Signal_Signal_$Impl_$._new = function(f) {
	var this1 = new tink_core__$Signal_SimpleSignal(f);
	return this1;
};
tink_core__$Signal_Signal_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			var data = f(result);
			cb(data);
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.flatMap = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			f(result).handle(cb);
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.filter = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			if(f(result)) {
				cb(result);
			}
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.join = function(this1,other,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return new tink_core__$Callback_LinkPair(this1.handle(cb),other.handle(cb));
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.next = function(this1,condition) {
	var ret = new tink_core_FutureTrigger();
	var link = null;
	var immediate = false;
	link = this1.handle(function(v) {
		if(condition == null || condition(v)) {
			ret.trigger(v);
			if(link == null) {
				immediate = true;
			} else if(link != null) {
				link.dissolve();
			}
		}
	});
	if(immediate) {
		if(link != null) {
			link.dissolve();
		}
	}
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.noise = function(this1) {
	return tink_core__$Signal_Signal_$Impl_$.map(this1,function(_) {
		return tink_core_Noise.Noise;
	});
};
tink_core__$Signal_Signal_$Impl_$.gather = function(this1) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	this1.handle(function(x) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(ret.handlers,x);
	});
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.generate = function(generator) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	generator($bind(ret,ret.trigger));
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.trigger = function() {
	return new tink_core_SignalTrigger();
};
tink_core__$Signal_Signal_$Impl_$.ofClassical = function(add,remove,gather) {
	if(gather == null) {
		gather = true;
	}
	var this1 = new tink_core__$Signal_SimpleSignal(function(cb) {
		var f = function(a) {
			cb(a);
		};
		add(f);
		var this2;
		var f1 = remove;
		var a1 = f;
		this2 = new tink_core__$Callback_SimpleLink(function() {
			f1(a1);
		});
		return this2;
	});
	var ret = this1;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
var tink_core_SignalObject = function() { };
tink_core_SignalObject.__name__ = true;
tink_core_SignalObject.prototype = {
	__class__: tink_core_SignalObject
};
var tink_core__$Signal_SimpleSignal = function(f) {
	this.f = f;
};
tink_core__$Signal_SimpleSignal.__name__ = true;
tink_core__$Signal_SimpleSignal.__interfaces__ = [tink_core_SignalObject];
tink_core__$Signal_SimpleSignal.prototype = {
	handle: function(cb) {
		return this.f(cb);
	}
	,__class__: tink_core__$Signal_SimpleSignal
};
var tink_core_SignalTrigger = function() {
	var this1 = [];
	this.handlers = this1;
};
tink_core_SignalTrigger.__name__ = true;
tink_core_SignalTrigger.__interfaces__ = [tink_core_SignalObject];
tink_core_SignalTrigger.prototype = {
	trigger: function(event) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(this.handlers,event);
	}
	,getLength: function() {
		return this.handlers.length;
	}
	,handle: function(cb) {
		return tink_core__$Callback_CallbackList_$Impl_$.add(this.handlers,cb);
	}
	,clear: function() {
		tink_core__$Callback_CallbackList_$Impl_$.clear(this.handlers);
	}
	,asSignal: function() {
		return this;
	}
	,__class__: tink_core_SignalTrigger
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
function $arrayPush(x) { this.push(x); }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
haxe_ds_ObjectMap.count = 0;
haxeshim_Os.IS_WINDOWS = Sys.systemName() == "Windows";
haxeshim_Os.DELIMITER = haxeshim_Os.IS_WINDOWS ? ";" : ":";
haxeshim_HaxeInstallation.EXT = haxeshim_Os.IS_WINDOWS ? ".exe" : "";
haxeshim__$LibResolution_LibResolution_$Impl_$.Scoped = "scoped";
haxeshim__$LibResolution_LibResolution_$Impl_$.Mixed = "mixed";
haxeshim__$LibResolution_LibResolution_$Impl_$.Haxelib = "haxelib";
haxeshim_Scope.CONFIG_FILE = ".haxerc";
haxeshim_Scope.DEFAULT_ROOT = (function($this) {
	var $r;
	var _g = process.env["HAXESHIM_ROOT"];
	$r = _g == null ? process.env[haxeshim_Os.IS_WINDOWS ? "APPDATA" : "HOME"] + "/haxe" : _g == "" ? process.env[haxeshim_Os.IS_WINDOWS ? "APPDATA" : "HOME"] + "/haxe" : (function($this) {
		var $r;
		var v = _g;
		$r = v;
		return $r;
	}($this));
	return $r;
}(this));
haxeshim_Neko.PATH = haxeshim_Os.slashes(haxeshim_Scope.DEFAULT_ROOT + "/neko");
haxeshim_Neko.ENV = (function($this) {
	var $r;
	var varName;
	var _g = Sys.systemName();
	switch(_g) {
	case "Mac":
		varName = "DYLD_LIBRARY_PATH";
		break;
	case "Windows":
		varName = "PATH";
		break;
	default:
		varName = "LD_LIBRARY_PATH";
	}
	var _g1 = process.env[varName];
	$r = _g1 == null ? (function($this) {
		var $r;
		var _g11 = new haxe_ds_StringMap();
		{
			var value = haxeshim_Neko.PATH;
			if(__map_reserved[varName] != null) {
				_g11.setReserved(varName,value);
			} else {
				_g11.h[varName] = value;
			}
		}
		$r = haxeshim__$Env_Env_$Impl_$.ofMap(_g11);
		return $r;
	}($this)) : (function($this) {
		var $r;
		var withNeko = _g1;
		$r = withNeko.indexOf(haxeshim_Neko.PATH) != -1 ? haxeshim__$Env_Env_$Impl_$.ofVars({ }) : (function($this) {
			var $r;
			var v = _g1;
			var _g12 = new haxe_ds_StringMap();
			{
				var value1 = v + haxeshim_Os.DELIMITER + haxeshim_Neko.PATH;
				if(__map_reserved[varName] != null) {
					_g12.setReserved(varName,value1);
				} else {
					_g12.h[varName] = value1;
				}
			}
			$r = haxeshim__$Env_Env_$Impl_$.ofMap(_g12);
			return $r;
		}($this));
		return $r;
	}($this));
	return $r;
}(this));
js_Boot.__toStr = ({ }).toString;
switchx_Cli.ALIASES = new tink_core_NamedWith("Version aliases",[new tink_core_NamedWith("edge, nightly","latest nightly build from builds.haxe.org"),new tink_core_NamedWith("latest","latest official release from haxe.org"),new tink_core_NamedWith("stable","latest stable release from haxe.org")]);
switchx_Download.USER_AGENT = "switchx";
switchx_Switchx.VERSION_INFO = "version.json";
switchx_Switchx.NIGHTLIES = "http://hxbuilds.s3-website-us-east-1.amazonaws.com/builds/haxe";
switchx_Switchx.PLATFORM = (function($this) {
	var $r;
	var _g = Sys.systemName();
	$r = (function($this) {
		var $r;
		switch(_g) {
		case "Mac":
			$r = "mac";
			break;
		case "Windows":
			$r = "windows";
			break;
		default:
			$r = "linux64";
		}
		return $r;
	}($this));
	return $r;
}(this));
switchx__$Version_Official_$Impl_$.SPLITTER = new EReg("[^0-9a-z]","g");
switchx__$Version_UserVersion_$Impl_$.hex = (function($this) {
	var $r;
	var _g = new haxe_ds_IntMap();
	{
		var _g1 = 0;
		var _g2 = "0123456789abcdefABCDEF".split("");
		while(_g1 < _g2.length) {
			var c = _g2[_g1];
			++_g1;
			var key = HxOverrides.cca(c,0);
			_g.h[key] = true;
		}
	}
	$r = _g;
	return $r;
}(this));
sys_io_File.copyBuf = new js_node_buffer_Buffer(65536);
tink_core__$Future_NeverFuture.inst = new tink_core__$Future_NeverFuture();
tink_core__$Future_Future_$Impl_$.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Noise.Noise));
tink_core__$Future_Future_$Impl_$.NEVER = tink_core__$Future_NeverFuture.inst;
tink_core_FutureTrigger.depth = 0;
tink_core__$Promise_Promise_$Impl_$.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
tink_core__$Promise_Promise_$Impl_$.NEVER = (function($this) {
	var $r;
	var ret = tink_core__$Future_Future_$Impl_$.NEVER.map(tink_core_Outcome.Success);
	$r = ret.gather();
	return $r;
}(this));
switchx_Cli.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
