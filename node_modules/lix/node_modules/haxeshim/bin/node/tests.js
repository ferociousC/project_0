// Generated by Haxe 3.4.2 (git build development @ e033003)
if (typeof process !== "undefined") if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");

(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var List = function() {
	this.length = 0;
};
List.__name__ = ["List"];
List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: _$List_ListNode
};
Math.__name__ = ["Math"];
var Reflect = function() { };
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var RunTests = function() { };
RunTests.__name__ = ["RunTests"];
RunTests.main = function() {
	var runner = new haxe_unit_TestRunner();
	runner.add(new TestResolution());
	runner.add(new TestEnv());
	new haxeshim_CompilerServer(haxeshim_ServerKind.Port(6000),haxeshim_Scope.seek(),[]);
	js_node_ChildProcess.exec("haxe --connect 6000 -version",function(error,stdout,stderr) {
		if(error == null) {
			process.exit(runner.run() ? 0 : 500);
		} else {
			haxe_Log.trace(error,{ fileName : "RunTests.hx", lineNumber : 24, className : "RunTests", methodName : "main"});
			process.exit(500);
		}
	});
};
var haxe_unit_TestCase = function() {
};
haxe_unit_TestCase.__name__ = ["haxe","unit","TestCase"];
haxe_unit_TestCase.prototype = {
	currentTest: null
	,setup: function() {
	}
	,tearDown: function() {
	}
	,print: function(v) {
		haxe_unit_TestRunner.print(v);
	}
	,assertTrue: function(b,c) {
		this.currentTest.done = true;
		if(b != true) {
			this.currentTest.success = false;
			this.currentTest.error = "expected true but was false";
			this.currentTest.posInfos = c;
			throw new js__$Boot_HaxeError(this.currentTest);
		}
	}
	,assertFalse: function(b,c) {
		this.currentTest.done = true;
		if(b == true) {
			this.currentTest.success = false;
			this.currentTest.error = "expected false but was true";
			this.currentTest.posInfos = c;
			throw new js__$Boot_HaxeError(this.currentTest);
		}
	}
	,assertEquals: function(expected,actual,c) {
		this.currentTest.done = true;
		if(actual != expected) {
			this.currentTest.success = false;
			this.currentTest.error = "expected '" + Std.string(expected) + "' but was '" + Std.string(actual) + "'";
			this.currentTest.posInfos = c;
			throw new js__$Boot_HaxeError(this.currentTest);
		}
	}
	,__class__: haxe_unit_TestCase
};
var TestEnv = function() {
	haxe_unit_TestCase.call(this);
};
TestEnv.__name__ = ["TestEnv"];
TestEnv.__super__ = haxe_unit_TestCase;
TestEnv.prototype = $extend(haxe_unit_TestCase.prototype,{
	test: function() {
		var a = haxeshim__$Env_Env_$Impl_$.ofVars({ "one" : "a", "two" : "a"});
		var b = haxeshim__$Env_Env_$Impl_$.ofVars({ "two" : "b", "three" : "b"});
		var aIntoB = haxeshim__$Env_Env_$Impl_$.mergeInto(a,b);
		var bIntoA = haxeshim__$Env_Env_$Impl_$.mergeInto(b,a);
		this.assertEquals("a",haxeshim__$Env_Env_$Impl_$.get(aIntoB,"one"),{ fileName : "RunTests.hx", lineNumber : 46, className : "TestEnv", methodName : "test"});
		this.assertEquals("a",haxeshim__$Env_Env_$Impl_$.get(bIntoA,"one"),{ fileName : "RunTests.hx", lineNumber : 47, className : "TestEnv", methodName : "test"});
		this.assertEquals("a",haxeshim__$Env_Env_$Impl_$.get(aIntoB,"two"),{ fileName : "RunTests.hx", lineNumber : 49, className : "TestEnv", methodName : "test"});
		this.assertEquals("b",haxeshim__$Env_Env_$Impl_$.get(bIntoA,"two"),{ fileName : "RunTests.hx", lineNumber : 50, className : "TestEnv", methodName : "test"});
		this.assertEquals("b",haxeshim__$Env_Env_$Impl_$.get(aIntoB,"three"),{ fileName : "RunTests.hx", lineNumber : 52, className : "TestEnv", methodName : "test"});
		this.assertEquals("b",haxeshim__$Env_Env_$Impl_$.get(bIntoA,"three"),{ fileName : "RunTests.hx", lineNumber : 53, className : "TestEnv", methodName : "test"});
		if(haxeshim_Os.IS_WINDOWS) {
			this.assertEquals("a",haxeshim__$Env_Env_$Impl_$.get(aIntoB,"oNe"),{ fileName : "RunTests.hx", lineNumber : 56, className : "TestEnv", methodName : "test"});
		}
	}
	,__class__: TestEnv
});
var TestResolution = function() {
	haxe_unit_TestCase.call(this);
};
TestResolution.__name__ = ["TestResolution"];
TestResolution.__super__ = haxe_unit_TestCase;
TestResolution.prototype = $extend(haxe_unit_TestCase.prototype,{
	testNext: function() {
		var r = new haxeshim_Resolver(process.cwd(),null,"haxelib",function(v) {
			throw new js__$Boot_HaxeError("assert");
		});
		this.assertEquals(["--macro","Sys.println('before')","--run","Main1","--next","-lib","tink_core","--run","Main2","-lib","foo"].join("\n"),r.resolve(["tests/build.hxml"],function(libs) {
			var ret = [];
			var _g = 0;
			while(_g < libs.length) {
				var l = libs[_g];
				++_g;
				ret.push("-lib");
				ret.push(l);
			}
			return ret;
		}).join("\n"),{ fileName : "RunTests.hx", lineNumber : 64, className : "TestResolution", methodName : "testNext"});
	}
	,__class__: TestResolution
});
var Std = function() { };
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = ["StringTools"];
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) {
		return s.split("\"").join("&quot;").split("'").join("&#039;");
	} else {
		return s;
	}
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.quoteUnixArg = function(argument) {
	if(argument == "") {
		return "''";
	}
	if(!new EReg("[^a-zA-Z0-9_@%+=:,./-]","").match(argument)) {
		return argument;
	}
	return "'" + StringTools.replace(argument,"'","'\"'\"'") + "'";
};
StringTools.quoteWinArg = function(argument,escapeMetaCharacters) {
	if(!new EReg("^[^ \t\\\\\"]+$","").match(argument)) {
		var result_b = "";
		var needquote = argument.indexOf(" ") != -1 || argument.indexOf("\t") != -1 || argument == "";
		if(needquote) {
			result_b += "\"";
		}
		var bs_buf = new StringBuf();
		var _g1 = 0;
		var _g = argument.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _g2 = HxOverrides.cca(argument,i);
			if(_g2 == null) {
				var c = _g2;
				if(bs_buf.b.length > 0) {
					result_b += Std.string(bs_buf.b);
					bs_buf = new StringBuf();
				}
				result_b += String.fromCharCode(c);
			} else {
				switch(_g2) {
				case 34:
					var bs = bs_buf.b;
					result_b += bs == null ? "null" : "" + bs;
					result_b += bs == null ? "null" : "" + bs;
					bs_buf = new StringBuf();
					result_b += "\\\"";
					break;
				case 92:
					bs_buf.b += "\\";
					break;
				default:
					var c1 = _g2;
					if(bs_buf.b.length > 0) {
						result_b += Std.string(bs_buf.b);
						bs_buf = new StringBuf();
					}
					result_b += String.fromCharCode(c1);
				}
			}
		}
		result_b += Std.string(bs_buf.b);
		if(needquote) {
			result_b += Std.string(bs_buf.b);
			result_b += "\"";
		}
		argument = result_b;
	}
	if(escapeMetaCharacters) {
		var result_b1 = "";
		var _g11 = 0;
		var _g3 = argument.length;
		while(_g11 < _g3) {
			var i1 = _g11++;
			var c2 = HxOverrides.cca(argument,i1);
			if(StringTools.winMetaCharacters.indexOf(c2) >= 0) {
				result_b1 += "^";
			}
			result_b1 += String.fromCharCode(c2);
		}
		return result_b1;
	} else {
		return argument;
	}
};
var Sys = function() { };
Sys.__name__ = ["Sys"];
Sys.systemName = function() {
	var _g = process.platform;
	switch(_g) {
	case "darwin":
		return "Mac";
	case "freebsd":
		return "BSD";
	case "linux":
		return "Linux";
	case "win32":
		return "Windows";
	default:
		var other = _g;
		return other;
	}
};
var haxe_io_Output = function() { };
haxe_io_Output.__name__ = ["haxe","io","Output"];
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeString: function(s) {
		var b = haxe_io_Bytes.ofString(s);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
};
var _$Sys_FileOutput = function(fd) {
	this.fd = fd;
};
_$Sys_FileOutput.__name__ = ["_Sys","FileOutput"];
_$Sys_FileOutput.__super__ = haxe_io_Output;
_$Sys_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	fd: null
	,writeByte: function(c) {
		js_node_Fs.writeSync(this.fd,String.fromCharCode(c));
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		return js_node_Fs.writeSync(this.fd,new js_node_buffer_Buffer(data.buffer,data.byteOffset,data.byteLength),pos,len);
	}
	,writeString: function(s) {
		js_node_Fs.writeSync(this.fd,s);
	}
	,flush: function() {
		js_node_Fs.fsyncSync(this.fd);
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileOutput
});
var haxe_io_Input = function() { };
haxe_io_Input.__name__ = ["haxe","io","Input"];
var _$Sys_FileInput = function(fd) {
	this.fd = fd;
};
_$Sys_FileInput.__name__ = ["_Sys","FileInput"];
_$Sys_FileInput.__super__ = haxe_io_Input;
_$Sys_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	fd: null
	,readByte: function() {
		var buf = new js_node_buffer_Buffer(1);
		try {
			js_node_Fs.readSync(this.fd,buf,0,1,null);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(e.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e));
			}
		}
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = new js_node_buffer_Buffer(data.buffer,data.byteOffset,data.byteLength);
		try {
			return js_node_Fs.readSync(this.fd,buf,pos,len,null);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(e.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e));
			}
		}
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileInput
});
var Type = function() { };
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
var haxe_StackItem = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		b.b += cname == null ? "null" : "" + cname;
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	set: null
	,__class__: haxe_IMap
};
var haxe_Log = function() { };
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_Either = { __ename__ : true, __constructs__ : ["Left","Right"] };
haxe_ds_Either.Left = function(v) { var $x = ["Left",0,v]; $x.__enum__ = haxe_ds_Either; $x.toString = $estr; return $x; };
haxe_ds_Either.Right = function(v) { var $x = ["Right",1,v]; $x.__enum__ = haxe_ds_Either; $x.toString = $estr; return $x; };
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = { __ename__ : true, __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; $x.toString = $estr; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.toString = $estr;
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,__class__: haxe_io_Bytes
};
var haxe_io_Eof = function() {
};
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
haxe_io_Path.__name__ = ["haxe","io","Path"];
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) {
		return "";
	}
	return s.dir;
};
haxe_io_Path.join = function(paths) {
	var paths1 = paths.filter(function(s) {
		if(s != null) {
			return s != "";
		} else {
			return false;
		}
	});
	if(paths1.length == 0) {
		return "";
	}
	var path = paths1[0];
	var _g1 = 1;
	var _g = paths1.length;
	while(_g1 < _g) {
		var i = _g1++;
		path = haxe_io_Path.addTrailingSlash(path);
		path += paths1[i];
	}
	return haxe_io_Path.normalize(path);
};
haxe_io_Path.normalize = function(path) {
	var slash = "/";
	path = path.split("\\").join(slash);
	if(path == slash) {
		return slash;
	}
	var target = [];
	var _g = 0;
	var _g1 = path.split(slash);
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") {
			target.pop();
		} else if(token != ".") {
			target.push(token);
		}
	}
	var tmp = target.join(slash);
	var regex_r = new RegExp("([^:])/+","g".split("u").join(""));
	var result = tmp.replace(regex_r,"$1" + slash);
	var acc_b = "";
	var colon = false;
	var slashes = false;
	var _g11 = 0;
	var _g2 = tmp.length;
	while(_g11 < _g2) {
		var i = _g11++;
		var _g21 = tmp.charCodeAt(i);
		switch(_g21) {
		case 47:
			if(!colon) {
				slashes = true;
			} else {
				var i1 = _g21;
				colon = false;
				if(slashes) {
					acc_b += "/";
					slashes = false;
				}
				acc_b += String.fromCharCode(i1);
			}
			break;
		case 58:
			acc_b += ":";
			colon = true;
			break;
		default:
			var i2 = _g21;
			colon = false;
			if(slashes) {
				acc_b += "/";
				slashes = false;
			}
			acc_b += String.fromCharCode(i2);
		}
	}
	return acc_b;
};
haxe_io_Path.addTrailingSlash = function(path) {
	if(path.length == 0) {
		return "/";
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		if(c2 != path.length - 1) {
			return path + "\\";
		} else {
			return path;
		}
	} else if(c1 != path.length - 1) {
		return path + "/";
	} else {
		return path;
	}
};
haxe_io_Path.removeTrailingSlashes = function(path) {
	try {
		while(true) {
			var _g = HxOverrides.cca(path,path.length - 1);
			if(_g == null) {
				throw "__break__";
			} else {
				switch(_g) {
				case 47:case 92:
					path = HxOverrides.substr(path,0,-1);
					break;
				default:
					throw "__break__";
				}
			}
		}
	} catch( e ) { if( e != "__break__" ) throw e; }
	return path;
};
haxe_io_Path.isAbsolute = function(path) {
	if(StringTools.startsWith(path,"/")) {
		return true;
	}
	if(path.charAt(1) == ":") {
		return true;
	}
	if(StringTools.startsWith(path,"\\\\")) {
		return true;
	}
	return false;
};
haxe_io_Path.prototype = {
	dir: null
	,file: null
	,ext: null
	,backslash: null
	,__class__: haxe_io_Path
};
var haxe_unit_TestResult = function() {
	this.m_tests = new List();
	this.success = true;
};
haxe_unit_TestResult.__name__ = ["haxe","unit","TestResult"];
haxe_unit_TestResult.prototype = {
	m_tests: null
	,success: null
	,add: function(t) {
		this.m_tests.add(t);
		if(!t.success) {
			this.success = false;
		}
	}
	,toString: function() {
		var buf_b = "";
		var failures = 0;
		var _g_head = this.m_tests.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var test = val;
			if(test.success == false) {
				buf_b += "* ";
				buf_b += Std.string(test.classname);
				buf_b += "::";
				buf_b += Std.string(test.method);
				buf_b += "()";
				buf_b += "\n";
				buf_b += "ERR: ";
				if(test.posInfos != null) {
					buf_b += Std.string(test.posInfos.fileName);
					buf_b += ":";
					buf_b += Std.string(test.posInfos.lineNumber);
					buf_b += "(";
					buf_b += Std.string(test.posInfos.className);
					buf_b += ".";
					buf_b += Std.string(test.posInfos.methodName);
					buf_b += ") - ";
				}
				buf_b += Std.string(test.error);
				buf_b += "\n";
				if(test.backtrace != null) {
					buf_b += Std.string(test.backtrace);
					buf_b += "\n";
				}
				buf_b += "\n";
				++failures;
			}
		}
		buf_b += "\n";
		if(failures == 0) {
			buf_b += "OK ";
		} else {
			buf_b += "FAILED ";
		}
		buf_b += Std.string(this.m_tests.length);
		buf_b += " tests, ";
		buf_b += failures == null ? "null" : "" + failures;
		buf_b += " failed, ";
		buf_b += Std.string(this.m_tests.length - failures);
		buf_b += " success";
		buf_b += "\n";
		return buf_b;
	}
	,__class__: haxe_unit_TestResult
};
var haxe_unit_TestRunner = function() {
	this.result = new haxe_unit_TestResult();
	this.cases = new List();
};
haxe_unit_TestRunner.__name__ = ["haxe","unit","TestRunner"];
haxe_unit_TestRunner.print = function(v) {
	var msg = js_Boot.__string_rec(v,"");
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		msg = StringTools.htmlEscape(msg).split("\n").join("<br/>");
		d.innerHTML += msg + "<br/>";
	} else if(typeof process != "undefined" && process.stdout != null && process.stdout.write != null) {
		process.stdout.write(msg);
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
haxe_unit_TestRunner.customTrace = function(v,p) {
	haxe_unit_TestRunner.print(p.fileName + ":" + p.lineNumber + ": " + Std.string(v) + "\n");
};
haxe_unit_TestRunner.prototype = {
	result: null
	,cases: null
	,add: function(c) {
		this.cases.add(c);
	}
	,run: function() {
		this.result = new haxe_unit_TestResult();
		var _g_head = this.cases.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var c = val;
			this.runCase(c);
		}
		haxe_unit_TestRunner.print(this.result.toString());
		return this.result.success;
	}
	,runCase: function(t) {
		var old = haxe_Log.trace;
		haxe_Log.trace = haxe_unit_TestRunner.customTrace;
		var cl = t == null ? null : js_Boot.getClass(t);
		var fields = Type.getInstanceFields(cl);
		haxe_unit_TestRunner.print("Class: " + Type.getClassName(cl) + " ");
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			var fname = f;
			var field = Reflect.field(t,f);
			if(StringTools.startsWith(fname,"test") && Reflect.isFunction(field)) {
				t.currentTest = new haxe_unit_TestStatus();
				t.currentTest.classname = Type.getClassName(cl);
				t.currentTest.method = fname;
				t.setup();
				try {
					var args = [];
					field.apply(t,args);
					if(t.currentTest.done) {
						t.currentTest.success = true;
						haxe_unit_TestRunner.print(".");
					} else {
						t.currentTest.success = false;
						t.currentTest.error = "(warning) no assert";
						haxe_unit_TestRunner.print("W");
					}
				} catch( $e0 ) {
					haxe_CallStack.lastException = $e0;
					if ($e0 instanceof js__$Boot_HaxeError) $e0 = $e0.val;
					if( js_Boot.__instanceof($e0,haxe_unit_TestStatus) ) {
						var e = $e0;
						haxe_unit_TestRunner.print("F");
						var tmp = haxe_CallStack.exceptionStack();
						t.currentTest.backtrace = haxe_CallStack.toString(tmp);
					} else {
					var e1 = $e0;
					haxe_unit_TestRunner.print("E");
					if(e1.message != null) {
						t.currentTest.error = "exception thrown : " + Std.string(e1) + " [" + Std.string(e1.message) + "]";
					} else {
						t.currentTest.error = "exception thrown : " + Std.string(e1);
					}
					var tmp1 = haxe_CallStack.exceptionStack();
					t.currentTest.backtrace = haxe_CallStack.toString(tmp1);
					}
				}
				this.result.add(t.currentTest);
				t.tearDown();
			}
		}
		haxe_unit_TestRunner.print("\n");
		haxe_Log.trace = old;
	}
	,__class__: haxe_unit_TestRunner
};
var haxe_unit_TestStatus = function() {
	this.done = false;
	this.success = false;
};
haxe_unit_TestStatus.__name__ = ["haxe","unit","TestStatus"];
haxe_unit_TestStatus.prototype = {
	done: null
	,success: null
	,error: null
	,method: null
	,classname: null
	,posInfos: null
	,backtrace: null
	,__class__: haxe_unit_TestStatus
};
var haxeshim_ServerKind = { __ename__ : true, __constructs__ : ["Port","Stdio"] };
haxeshim_ServerKind.Port = function(num) { var $x = ["Port",0,num]; $x.__enum__ = haxeshim_ServerKind; $x.toString = $estr; return $x; };
haxeshim_ServerKind.Stdio = ["Stdio",1];
haxeshim_ServerKind.Stdio.toString = $estr;
haxeshim_ServerKind.Stdio.__enum__ = haxeshim_ServerKind;
var haxeshim_StdioState = { __ename__ : true, __constructs__ : ["AwaitingHeader","AwaitingData"] };
haxeshim_StdioState.AwaitingHeader = function(buf) { var $x = ["AwaitingHeader",0,buf]; $x.__enum__ = haxeshim_StdioState; $x.toString = $estr; return $x; };
haxeshim_StdioState.AwaitingData = function(buf,total) { var $x = ["AwaitingData",1,buf,total]; $x.__enum__ = haxeshim_StdioState; $x.toString = $estr; return $x; };
var haxeshim_CompilerServer = function(kind,scope,args) {
	this.freePort = tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var test = js_node_Net.createServer();
		test.listen(0,function() {
			var port = test.address().port;
			test.close(function() {
				cb(tink_core_Outcome.Success(port));
			});
		});
	},true);
	this.args = args;
	this.scope = scope;
	switch(kind[1]) {
	case 0:
		var port1 = kind[2];
		this.waitOnPort(port1);
		break;
	case 1:
		this.stdio();
		break;
	}
};
haxeshim_CompilerServer.__name__ = ["haxeshim","CompilerServer"];
haxeshim_CompilerServer.prototype = {
	scope: null
	,waiting: null
	,lastVersion: null
	,args: null
	,freePort: null
	,stdio: function() {
		var _gthis = this;
		js_node_Fs.watch(this.scope.configFile,{ persistent : false},function(_,_1) {
			_gthis.scope.reload();
		});
		var child = null;
		var quit = function() {
			if(child != null) {
				child.kill();
			}
		};
		process.on("exit",quit);
		var cleanExit = function() {
			process.exit();
		};
		process.on("SIGINT",cleanExit);
		process.on("SIGTERM",cleanExit);
		process.stdin.on("end",quit);
		process.stdin.on("close",quit);
		var state = haxeshim_StdioState.AwaitingHeader(new js_node_buffer_Buffer(0));
		var frame = function(payload) {
			var ret = new js_node_buffer_Buffer(4 + payload.length);
			ret.writeInt32LE(payload.length,0);
			payload.copy(ret,4);
			return ret;
		};
		var processData = function(data) {
			var postfix = new js_node_buffer_Buffer(0);
			var _g = data.indexOf(1);
			var ctx;
			if(_g == -1) {
				ctx = data;
			} else {
				var v = _g;
				postfix = data.slice(v);
				ctx = data.slice(0,v);
			}
			var ctx1 = _gthis.parseArgs(ctx);
			if(child == null || ctx1.version != _gthis.lastVersion) {
				if(child != null) {
					child.kill();
					child.stderr.unpipe(process.stderr);
				}
				_gthis.lastVersion = ctx1.version;
				var hx = _gthis.scope.haxeInstallation;
				child = js_node_ChildProcess.spawn(hx.compiler,_gthis.args.concat(["--wait","stdio"]),{ cwd : _gthis.scope.cwd, env : haxeshim__$Env_Env_$Impl_$.toVars(haxeshim_Exec.mergeEnv(hx.env())), stdio : "pipe"});
				var old = child;
				child.on("exit",function(code,_2) {
					if(child == old) {
						child = null;
					}
				});
				child.stderr.pipe(process.stderr);
			}
			var first = new js_node_buffer_Buffer(haxeshim_HaxeCli.checkClassPaths(_gthis.scope.resolve(ctx1.args)).join("\n"));
			var child1 = child.stdin;
			var processData1 = js_node_buffer_Buffer.concat([first,postfix]);
			child1.write(frame(processData1));
		};
		var reduce = function() {
			while(true) {
				var next;
				switch(state[1]) {
				case 0:
					var buf = state[2];
					if(buf.length >= 4) {
						next = haxeshim_StdioState.AwaitingData(buf.slice(4),buf.readInt32LE(0));
					} else {
						next = state;
					}
					break;
				case 1:
					var total = state[3];
					var buf1 = state[2];
					if(buf1.length >= total) {
						var next1 = buf1.slice(0,total);
						processData(next1);
						next = haxeshim_StdioState.AwaitingHeader(buf1.slice(total));
					} else {
						next = state;
					}
					break;
				default:
					next = state;
				}
				if(state == next) {
					break;
				}
				state = next;
			}
		};
		process.stdin.on("data",function(chunk) {
			switch(state[1]) {
			case 0:
				var buf2 = state[2];
				state = haxeshim_StdioState.AwaitingHeader(js_node_buffer_Buffer.concat([buf2,chunk]));
				break;
			case 1:
				var left = state[3];
				var buf3 = state[2];
				state = haxeshim_StdioState.AwaitingData(js_node_buffer_Buffer.concat([buf3,chunk]),left);
				break;
			}
			reduce();
		});
	}
	,parseArgs: function(raw) {
		var args = raw.toString().split("\n");
		var version;
		var _g = args.indexOf("--haxe-version");
		if(_g == -1) {
			if(this.lastVersion == null) {
				version = this.scope.haxeInstallation.version;
			} else {
				version = this.lastVersion;
			}
		} else {
			var v = _g;
			version = args.splice(v,2).pop();
		}
		return { version : version, args : args};
	}
	,waitOnPort: function(port) {
		var _gthis = this;
		var server = js_node_Net.createServer(function(cnx) {
			var buf = [];
			cnx.on("data",function(chunk) {
				var _g = chunk.indexOf(0);
				if(_g == -1) {
					buf.push(chunk);
				} else {
					var v = _g;
					var server1 = chunk.slice(0,v);
					buf.push(server1);
					var server2 = chunk.slice(v + 1);
					cnx.unshift(server2);
					var args = js_node_buffer_Buffer.concat(buf).toString().split("\n");
					buf = [];
					var version;
					var _g1 = args.indexOf("--haxe-version");
					if(_g1 == -1) {
						if(_gthis.lastVersion == null) {
							version = _gthis.scope.haxeInstallation.version;
						} else {
							version = _gthis.lastVersion;
						}
					} else {
						var v1 = _g1;
						version = args.splice(v1,2).pop();
					}
					_gthis.connect(version).handle(function(o) {
						switch(o[1]) {
						case 0:
							var compiler = o[2];
							compiler.write(args.join("\n") + String.fromCharCode(0));
							compiler.pipe(cnx,{ end : true});
							break;
						case 1:
							var e = o[2];
							cnx.end(e.message + "\n" + "\x02" + "\n","utf8");
							break;
						}
					});
				}
			});
			cnx.on("error",function() {
			});
			cnx.on("end",function() {
			});
		});
		server.listen(port);
	}
	,disconnect: function() {
		if(this.waiting == null) {
			return new tink_core__$Future_FutureBase(null,null,tink_core_Outcome.Success(tink_core_Noise.Noise));
		} else {
			return tink_core__$Promise_Promise_$Impl_$.next(this.waiting,function(w) {
				var ret = w.kill().map(tink_core_Outcome.Success);
				return ret.gather();
			});
		}
	}
	,connect: function(version) {
		var _gthis = this;
		if(version != this.lastVersion || this.waiting == null) {
			this.lastVersion = version;
			var nu = this.waiting = tink_core__$Promise_Promise_$Impl_$.next(this.disconnect(),function(_) {
				return tink_core__$Promise_Promise_$Impl_$.next(_gthis.freePort,tink_core__$Promise_Next_$Impl_$.ofSafeSync(function(port) {
					var installation = _gthis.scope.getInstallation(version);
					var proc = haxeshim_Exec.async(installation.compiler,_gthis.scope.cwd,_gthis.args.concat(["--wait",port == null ? "null" : "" + port]),installation.env());
					return { died : tink_core__$Future_Future_$Impl_$.async(function(cb) {
						var f = cb;
						var nu1 = function() {
							f(tink_core_Noise.Noise);
						};
						proc.on("exit",nu1);
						var f1 = cb;
						var nu2 = function() {
							f1(tink_core_Noise.Noise);
						};
						proc.on("error",nu2);
						var f2 = cb;
						var nu3 = function() {
							f2(tink_core_Noise.Noise);
						};
						proc.on("disconnect",nu3);
					}), version : version, socket : function() {
						return tink_core__$Future_Future_$Impl_$.async(function(cb1) {
							var max = 10;
							var connect = null;
							connect = function(attempt) {
								var cnx = js_node_Net.createConnection(port,"127.0.0.1");
								cnx.on("error",function(e) {
									if(attempt >= max) {
										var connect1 = tink_core_Outcome.Failure(new tink_core_TypedError(null,"Failed to connect to 127.0.0.1:" + port + " after " + max + " attempts because " + e,{ fileName : "CompilerServer.hx", lineNumber : 257, className : "haxeshim.CompilerServer", methodName : "connect"}));
										cb1(connect1);
									} else {
										var f3 = connect;
										var a1 = attempt + 1;
										haxe_Timer.delay(function() {
											f3(a1);
											return;
										},100);
									}
								}).on("connect",function() {
									cb1(tink_core_Outcome.Success(cnx));
								});
							};
							var connect2 = connect;
							connect2(1);
						});
					}, kill : function() {
						proc.kill();
						return tink_core__$Future_Future_$Impl_$.async(function(cb2) {
							var f4 = cb2;
							haxe_Timer.delay(function() {
								f4(tink_core_Noise.Noise);
							},500);
						});
					}};
				}));
			});
			this.waiting.handle(function(o) {
				switch(o[1]) {
				case 0:
					var w = o[2];
					w.died.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
						if(_gthis.waiting == nu) {
							_gthis.waiting = null;
						}
					}));
					break;
				case 1:
					_gthis.waiting = null;
					break;
				}
			});
		}
		return tink_core__$Promise_Promise_$Impl_$.next(this.waiting,function(w1) {
			return w1.socket();
		});
	}
	,__class__: haxeshim_CompilerServer
};
var haxeshim__$Env_Env_$Impl_$ = {};
haxeshim__$Env_Env_$Impl_$.__name__ = ["haxeshim","_Env","Env_Impl_"];
haxeshim__$Env_Env_$Impl_$.ofVars = function(vars) {
	var this1 = { };
	var ret = this1;
	var _g = 0;
	var _g1 = Reflect.fields(vars);
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		ret[haxeshim_Os.IS_WINDOWS ? k.toUpperCase() : k] = vars[k];
	}
	var this2 = ret;
	return this2;
};
haxeshim__$Env_Env_$Impl_$.keys = function(this1) {
	if(this1 == null) {
		return [];
	} else {
		return Reflect.fields(this1);
	}
};
haxeshim__$Env_Env_$Impl_$.ofMap = function(map) {
	var this1 = { };
	var ret = this1;
	var k = map.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		ret[haxeshim_Os.IS_WINDOWS ? k1.toUpperCase() : k1] = __map_reserved[k1] != null ? map.getReserved(k1) : map.h[k1];
	}
	var this2 = ret;
	return this2;
};
haxeshim__$Env_Env_$Impl_$.vars = function(this1) {
	return this1;
};
haxeshim__$Env_Env_$Impl_$.toVars = function(this1) {
	return Reflect.copy(this1);
};
haxeshim__$Env_Env_$Impl_$._new = function(vars) {
	var this1 = vars;
	return this1;
};
haxeshim__$Env_Env_$Impl_$.get = function(this1,s) {
	return this1[haxeshim_Os.IS_WINDOWS ? s.toUpperCase() : s];
};
haxeshim__$Env_Env_$Impl_$.normalize = function(s) {
	if(haxeshim_Os.IS_WINDOWS) {
		return s.toUpperCase();
	} else {
		return s;
	}
};
haxeshim__$Env_Env_$Impl_$.mergeInto = function(this1,that) {
	var _g = haxeshim__$Env_Env_$Impl_$.vars(that);
	if(this1 == null) {
		var v = _g;
		var this2 = v;
		return this2;
	} else if(_g == null) {
		var v1 = this1;
		var this3 = v1;
		return this3;
	} else {
		var a = this1;
		var b = _g;
		var this4 = { };
		var ret = this4;
		var _g1 = 0;
		var _g11 = [b,a];
		while(_g1 < _g11.length) {
			var vars = _g11[_g1];
			++_g1;
			var _g2 = 0;
			var _g3 = Reflect.fields(vars);
			while(_g2 < _g3.length) {
				var k = _g3[_g2];
				++_g2;
				ret[k] = vars[k];
			}
		}
		var this5 = ret;
		return this5;
	}
};
var haxeshim_Exec = function() { };
haxeshim_Exec.__name__ = ["haxeshim","Exec"];
haxeshim_Exec.die = function(code,reason) {
	new _$Sys_FileOutput(2).writeString("" + reason + "\n");
	process.exit(code);
	throw new js__$Boot_HaxeError("unreachable");
};
haxeshim_Exec.gracefully = function(f) {
	try {
		return f();
	} catch( $e0 ) {
		haxe_CallStack.lastException = $e0;
		if ($e0 instanceof js__$Boot_HaxeError) $e0 = $e0.val;
		if( js_Boot.__instanceof($e0,tink_core_TypedError) ) {
			var e = $e0;
			return haxeshim_Exec.die(e.code,e.message);
		} else {
		var e1 = $e0;
		return haxeshim_Exec.die(500,Std.string(e1));
		}
	}
};
haxeshim_Exec.mergeEnv = function(env) {
	return haxeshim__$Env_Env_$Impl_$.mergeInto(env,haxeshim__$Env_Env_$Impl_$.ofVars(process.env));
};
haxeshim_Exec.async = function(cmd,cwd,args,env) {
	return js_node_ChildProcess.spawn(cmd,args,{ cwd : cwd, stdio : "inherit", env : haxeshim__$Env_Env_$Impl_$.toVars(haxeshim_Exec.mergeEnv(env))});
};
haxeshim_Exec.shell = function(cmd,cwd,env) {
	try {
		return tink_core_Outcome.Success(js_node_ChildProcess.execSync(cmd,{ cwd : cwd, stdio : "inherit", env : haxeshim__$Env_Env_$Impl_$.toVars(haxeshim_Exec.mergeEnv(env))}));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return tink_core_Outcome.Failure(new tink_core_TypedError(e.status,"Failed to invoke `" + cmd + "` because " + Std.string(e),{ fileName : "Exec.hx", lineNumber : 33, className : "haxeshim.Exec", methodName : "shell"}));
	}
};
haxeshim_Exec.sync = function(cmd,cwd,args,env) {
	var _g = js_node_ChildProcess.spawnSync(cmd,args,{ cwd : cwd, stdio : "inherit", env : haxeshim__$Env_Env_$Impl_$.toVars(haxeshim_Exec.mergeEnv(env))});
	var x = _g;
	if(x.error == null) {
		return tink_core_Outcome.Success(x.status);
	} else {
		var e = _g.error;
		return tink_core_Outcome.Failure(new tink_core_TypedError(null,"Failed to call " + cmd + " because " + Std.string(e),{ fileName : "Exec.hx", lineNumber : 40, className : "haxeshim.Exec", methodName : "sync"}));
	}
};
haxeshim_Exec["eval"] = function(cmd,cwd,args,env) {
	var _g = js_node_ChildProcess.spawnSync(cmd,args,{ cwd : cwd, env : haxeshim__$Env_Env_$Impl_$.toVars(haxeshim_Exec.mergeEnv(env))});
	var x = _g;
	if(x.error == null) {
		return tink_core_Outcome.Success({ status : x.status, stdout : x.stdout.toString(), stderr : x.stderr.toString()});
	} else {
		var e = _g.error;
		return tink_core_Outcome.Failure(new tink_core_TypedError(null,"Failed to call " + cmd + " because " + Std.string(e),{ fileName : "Exec.hx", lineNumber : 52, className : "haxeshim.Exec", methodName : "eval"}));
	}
};
var haxeshim_Fs = function() { };
haxeshim_Fs.__name__ = ["haxeshim","Fs"];
haxeshim_Fs.get = function(path,pos) {
	var _e = path;
	return new tink_core__$Future_FutureBase(null,null,tink_core_TypedError.catchExceptions(function() {
		return js_node_Fs.readFileSync(_e,{ encoding : "utf8"});
	},function(data) {
		return tink_core_TypedError.withData(null,"failed to get content of " + path,data,pos);
	},{ fileName : "Fs.hx", lineNumber : 14, className : "haxeshim.Fs", methodName : "get"}));
};
haxeshim_Fs.ensureDir = function(dir) {
	var isDir = StringTools.endsWith(dir,"/") || StringTools.endsWith(dir,"\\");
	if(isDir) {
		dir = haxe_io_Path.removeTrailingSlashes(dir);
	}
	var parent = haxe_io_Path.directory(dir);
	if(haxe_io_Path.removeTrailingSlashes(parent) == dir) {
		return;
	}
	if(!sys_FileSystem.exists(parent)) {
		haxeshim_Fs.ensureDir(haxe_io_Path.addTrailingSlash(parent));
	}
	if(isDir && !sys_FileSystem.exists(dir)) {
		sys_FileSystem.createDirectory(dir);
	}
};
haxeshim_Fs.ifNewer = function(files) {
	return js_node_Fs.statSync(files.src).mtime.getTime() > js_node_Fs.statSync(files.dest).mtime.getTime();
};
haxeshim_Fs.copy = function(src,target,filter,overwrite) {
	var copy = null;
	copy = function(src1,target1,ensure) {
		if(filter == null || filter(src1)) {
			if(js_node_Fs.statSync(src1).isDirectory()) {
				haxeshim_Fs.ensureDir(haxe_io_Path.addTrailingSlash(target1));
				var _g = 0;
				var _g1 = js_node_Fs.readdirSync(src1);
				while(_g < _g1.length) {
					var entry = _g1[_g];
					++_g;
					copy("" + src1 + "/" + entry,"" + target1 + "/" + entry,false);
				}
			} else {
				if(ensure) {
					haxeshim_Fs.ensureDir(target1);
				}
				if(!sys_FileSystem.exists(target1) || overwrite == null || overwrite({ src : src1, dest : target1})) {
					sys_io_File.copy(src1,target1);
				}
			}
		}
	};
	var copy1 = copy;
	copy1(src,target,true);
};
haxeshim_Fs.ls = function(dir,filter) {
	var _g = [];
	var _g1 = 0;
	var _g2 = js_node_Fs.readdirSync(dir);
	while(_g1 < _g2.length) {
		var entry = _g2[_g1];
		++_g1;
		var _g3 = "" + dir + "/" + entry;
		var included = _g3;
		var tmp;
		if(filter == null || filter(included)) {
			tmp = included;
		} else {
			continue;
		}
		_g.push(tmp);
	}
	return _g;
};
haxeshim_Fs["delete"] = function(path) {
	if(js_node_Fs.statSync(path).isDirectory()) {
		var _g = 0;
		var _g1 = haxeshim_Fs.ls(path);
		while(_g < _g1.length) {
			var file = _g1[_g];
			++_g;
			haxeshim_Fs["delete"](file);
		}
		js_node_Fs.rmdirSync(path);
	} else {
		js_node_Fs.unlinkSync(path);
	}
};
haxeshim_Fs.peel = function(file,depth) {
	var start = 0;
	var _g1 = 0;
	var _g = depth;
	while(_g1 < _g) {
		var i = _g1++;
		var _g2 = file.indexOf("/",start);
		if(_g2 == -1) {
			return haxe_ds_Option.None;
		} else {
			var v = _g2;
			start = v + 1;
		}
	}
	return haxe_ds_Option.Some(HxOverrides.substr(file,start,null));
};
haxeshim_Fs.findNearest = function(name,dir) {
	while(true) if(sys_FileSystem.exists("" + dir + "/" + name)) {
		return haxe_ds_Option.Some("" + dir + "/" + name);
	} else {
		var _g = haxe_io_Path.directory(dir);
		var same = _g;
		if(dir == same) {
			return haxe_ds_Option.None;
		} else {
			var parent = _g;
			dir = parent;
		}
	}
};
var haxeshim_HaxeCli = function(scope) {
	this.scope = scope;
};
haxeshim_HaxeCli.__name__ = ["haxeshim","HaxeCli"];
haxeshim_HaxeCli.main = function() {
	haxeshim_Neko.setEnv();
	new haxeshim_HaxeCli(haxeshim_Exec.gracefully(function() {
		return haxeshim_Scope.seek();
	})).dispatch(process.argv.slice(2));
};
haxeshim_HaxeCli.checkClassPaths = function(args) {
	var i = 0;
	var invalid = [];
	while(i < args.length) {
		var _g = args[i++];
		if(_g == "-cp") {
			var cp = args[i++];
			try {
				js_node_Fs.readdirSync(cp);
			} catch( e ) {
				haxe_CallStack.lastException = e;
				invalid.push("classpath " + cp + " is not a directory or cannot be read from");
			}
		}
	}
	if(invalid.length != 0) {
		var v = invalid;
		haxeshim_Exec.die(404,invalid.join("\n"));
	}
	return args;
};
haxeshim_HaxeCli.prototype = {
	scope: null
	,installLibs: function(silent) {
		var i = this.scope.getInstallationInstructions();
		var code = 0;
		var _g = i.missing;
		if(_g.length != 0) {
			var v = _g;
			code = 404;
			var _g1 = 0;
			while(_g1 < v.length) {
				var m = v[_g1];
				++_g1;
				new _$Sys_FileOutput(2).writeString("" + m.lib + " has no install instruction for missing classpath " + m.cp + "\n");
			}
		}
		var _g11 = 0;
		var _g2 = i.instructions;
		while(_g11 < _g2.length) {
			var cmd = _g2[_g11];
			++_g11;
			if(!silent) {
				process.stdout.write(cmd == null ? "null" : "" + cmd);
				process.stdout.write("\n");
			}
			var _g3 = haxeshim_Exec.shell(cmd,process.cwd());
			if(_g3[1] == 1) {
				var e = _g3[2];
				code = e.code;
			}
		}
		process.exit(code);
	}
	,dispatch: function(args) {
		var cwd;
		var _g = args.indexOf("--cwd");
		if(_g == -1) {
			cwd = null;
		} else {
			var v = _g;
			cwd = args[v + 1] = js_node_Path.resolve(args[v + 1]);
		}
		var getScope = function() {
			var a1 = { cwd : cwd};
			return haxeshim_Exec.gracefully(function() {
				return haxeshim_Scope.seek(a1);
			});
		};
		var _hx_tmp;
		var _hx_tmp1;
		_hx_tmp = args.indexOf("--wait");
		var wait = _hx_tmp;
		if(wait >= 0 && wait < args.length - 1) {
			var tmp;
			var _g1 = args.splice(wait,2).pop();
			var _hx_tmp2;
			if(_g1 == null) {
				_hx_tmp2 = Std.parseInt(_g1);
				var port = _hx_tmp2;
				tmp = haxeshim_ServerKind.Port(port);
			} else if(_g1 == "stdio") {
				tmp = haxeshim_ServerKind.Stdio;
			} else {
				_hx_tmp2 = Std.parseInt(_g1);
				var port1 = _hx_tmp2;
				tmp = haxeshim_ServerKind.Port(port1);
			}
			new haxeshim_CompilerServer(tmp,haxeshim_Scope.seek(),args);
		} else {
			_hx_tmp1 = args.slice(0,2);
			if(_hx_tmp1.length == 2) {
				if(_hx_tmp1[0] == "--run") {
					var haxeShimExtension = _hx_tmp1[1];
					if(haxeShimExtension.indexOf("-") != -1 && haxeShimExtension.toLowerCase() == haxeShimExtension) {
						var args1 = args.slice(2);
						var scope = getScope();
						switch(haxeShimExtension) {
						case "install-libs":
							var tmp1;
							switch(args1.length) {
							case 0:
								tmp1 = false;
								break;
							case 1:
								if(args1[0] == "--silent") {
									tmp1 = true;
								} else {
									tmp1 = haxeshim_Exec.die(422,"unexpected arguments " + Std.string(args1));
								}
								break;
							default:
								tmp1 = haxeshim_Exec.die(422,"unexpected arguments " + Std.string(args1));
							}
							this.installLibs(tmp1);
							break;
						case "resolve-args":
							var f = $bind(scope,scope.resolve);
							var a11 = args1;
							var v1 = haxeshim_Exec.gracefully(function() {
								return f(a11);
							}).join("\n");
							process.stdout.write(Std.string(v1));
							process.stdout.write("\n");
							process.exit(0);
							break;
						case "show-version":
							if(args1.length > 0) {
								haxeshim_Exec.die(422,"too many arguments");
							}
							var version;
							var _g11 = haxeshim_Exec["eval"](scope.haxeInstallation.compiler,scope.cwd,["-version"]);
							switch(_g11[1]) {
							case 0:
								var v2 = _g11[2];
								version = StringTools.trim(v2.stdout.toString() + v2.stderr.toString());
								break;
							case 1:
								var e = _g11[2];
								version = haxeshim_Exec.die(e.code,e.message);
								break;
							}
							process.stdout.write(Std.string("-D haxe-ver=" + version));
							process.stdout.write("\n");
							process.stdout.write(Std.string("-cp " + scope.haxeInstallation.stdLib));
							process.stdout.write("\n");
							break;
						default:
							var v3 = haxeShimExtension;
							haxeshim_Exec.die(404,"Unknown extension " + v3);
						}
					} else {
						var args2 = args;
						var scope1 = getScope();
						var _g12 = args2.indexOf("--haxe-version");
						var _g2 = args2.indexOf("--connect");
						if(_g2 == -1) {
							var tmp2 = _g12 == -1;
						} else if(_g12 == -1) {
							args2.push("--haxe-version");
							args2.push(scope1.haxeInstallation.version);
						}
						var f1 = $bind(scope1,scope1.resolve);
						var a12 = args2;
						var _e = haxeshim_Exec.sync(scope1.haxeInstallation.compiler,scope1.cwd,haxeshim_HaxeCli.checkClassPaths(haxeshim_Exec.gracefully(function() {
							return f1(a12);
						})),scope1.haxeInstallation.env());
						process.exit(haxeshim_Exec.gracefully(function() {
							return tink_core_OutcomeTools.sure(_e);
						}));
					}
				} else {
					var args3 = args;
					var scope2 = getScope();
					var _g13 = args3.indexOf("--haxe-version");
					var _g21 = args3.indexOf("--connect");
					if(_g21 == -1) {
						var tmp3 = _g13 == -1;
					} else if(_g13 == -1) {
						args3.push("--haxe-version");
						args3.push(scope2.haxeInstallation.version);
					}
					var f2 = $bind(scope2,scope2.resolve);
					var a13 = args3;
					var _e1 = haxeshim_Exec.sync(scope2.haxeInstallation.compiler,scope2.cwd,haxeshim_HaxeCli.checkClassPaths(haxeshim_Exec.gracefully(function() {
						return f2(a13);
					})),scope2.haxeInstallation.env());
					process.exit(haxeshim_Exec.gracefully(function() {
						return tink_core_OutcomeTools.sure(_e1);
					}));
				}
			} else {
				var args4 = args;
				var scope3 = getScope();
				var _g14 = args4.indexOf("--haxe-version");
				var _g22 = args4.indexOf("--connect");
				if(_g22 == -1) {
					var tmp4 = _g14 == -1;
				} else if(_g14 == -1) {
					args4.push("--haxe-version");
					args4.push(scope3.haxeInstallation.version);
				}
				var f3 = $bind(scope3,scope3.resolve);
				var a14 = args4;
				var _e2 = haxeshim_Exec.sync(scope3.haxeInstallation.compiler,scope3.cwd,haxeshim_HaxeCli.checkClassPaths(haxeshim_Exec.gracefully(function() {
					return f3(a14);
				})),scope3.haxeInstallation.env());
				process.exit(haxeshim_Exec.gracefully(function() {
					return tink_core_OutcomeTools.sure(_e2);
				}));
			}
		}
	}
	,__class__: haxeshim_HaxeCli
};
var haxeshim_Os = function() { };
haxeshim_Os.__name__ = ["haxeshim","Os"];
haxeshim_Os.slashes = function(path) {
	if(haxeshim_Os.IS_WINDOWS) {
		return StringTools.replace(path,"/","\\");
	} else {
		return path;
	}
};
var haxeshim_HaxeInstallation = function(path,version,haxelibRepo) {
	this.path = path;
	this.version = version;
	this.compiler = "" + path + "/haxe" + haxeshim_HaxeInstallation.EXT;
	this.haxelib = "" + path + "/haxelib" + haxeshim_HaxeInstallation.EXT;
	this.stdLib = "" + path + "/std";
	this.haxelibRepo = haxelibRepo;
};
haxeshim_HaxeInstallation.__name__ = ["haxeshim","HaxeInstallation"];
haxeshim_HaxeInstallation.prototype = {
	path: null
	,stdLib: null
	,compiler: null
	,haxelib: null
	,version: null
	,haxelibRepo: null
	,env: function() {
		var ret = haxeshim__$Env_Env_$Impl_$.ofVars({ HAXE_STD_PATH : this.stdLib, HAXEPATH : this.path, HAXELIB_PATH : this.haxelibRepo, HAXE_VERSION : this.version});
		return haxeshim__$Env_Env_$Impl_$.mergeInto(ret,haxeshim_Neko.ENV);
	}
	,__class__: haxeshim_HaxeInstallation
};
var haxeshim__$LibResolution_LibResolution_$Impl_$ = {};
haxeshim__$LibResolution_LibResolution_$Impl_$.__name__ = ["haxeshim","_LibResolution","LibResolution_Impl_"];
haxeshim__$LibResolution_LibResolution_$Impl_$.parse = function(s) {
	switch(s) {
	case "haxelib":
		return tink_core_Outcome.Success("haxelib");
	case "mixed":
		return tink_core_Outcome.Success("mixed");
	case "scoped":
		return tink_core_Outcome.Success("scoped");
	default:
		return tink_core_Outcome.Failure(new tink_core_TypedError(422,"Invalid lib resolution strategy `" + s + "`",{ fileName : "LibResolution.hx", lineNumber : 15, className : "haxeshim._LibResolution.LibResolution_Impl_", methodName : "parse"}));
	}
};
var haxeshim_Scope = function(haxeshimRoot,isGlobal,scopeDir,cwd) {
	this.haxeshimRoot = haxeshimRoot;
	this.isGlobal = isGlobal;
	this.scopeDir = scopeDir;
	this.scopeLibDir = "" + scopeDir + "/haxe_libraries";
	this.cwd = cwd;
	this.configFile = "" + scopeDir + "/" + haxeshim_Scope.CONFIG_FILE;
	this.versionDir = "" + haxeshimRoot + "/versions";
	this.haxelibRepo = "" + haxeshimRoot + "/haxelib";
	this.libCache = "" + haxeshimRoot + "/haxe_libraries";
	this.reload();
};
haxeshim_Scope.__name__ = ["haxeshim","Scope"];
haxeshim_Scope.create = function(at,config) {
	js_node_Fs.writeFileSync("" + at + "/" + haxeshim_Scope.CONFIG_FILE,JSON.stringify(config));
};
haxeshim_Scope.exists = function(at) {
	return sys_FileSystem.exists("" + at + "/" + haxeshim_Scope.CONFIG_FILE);
};
haxeshim_Scope.seek = function(options) {
	if(options == null) {
		options = { };
	}
	var cwd;
	var _g = options.cwd;
	if(_g == null) {
		cwd = process.cwd();
	} else {
		var v = _g;
		cwd = v;
	}
	var startLookingIn;
	var _g1 = options.startLookingIn;
	if(_g1 == null) {
		startLookingIn = cwd;
	} else {
		var v1 = _g1;
		startLookingIn = v1;
	}
	var haxeshimRoot;
	var _g2 = options.haxeshimRoot;
	if(_g2 == null) {
		haxeshimRoot = haxeshim_Scope.DEFAULT_ROOT;
	} else {
		var v2 = _g2;
		haxeshimRoot = v2;
	}
	var f = function(haxeshimRoot1,isGlobal,scopeDir,cwd1) {
		return new haxeshim_Scope(haxeshimRoot1,isGlobal,scopeDir,cwd1);
	};
	var a1 = haxeshimRoot;
	var a4 = cwd;
	var make = function(a2,a3) {
		return f(a1,a2,a3,a4);
	};
	var _g3 = haxeshim_Fs.findNearest(haxeshim_Scope.CONFIG_FILE,js_node_Path.resolve(startLookingIn));
	switch(_g3[1]) {
	case 0:
		var v3 = _g3[2];
		return make(false,haxe_io_Path.directory(v3));
	case 1:
		return make(true,haxeshimRoot);
	}
};
haxeshim_Scope.prototype = {
	haxeshimRoot: null
	,libCache: null
	,versionDir: null
	,isGlobal: null
	,scopeDir: null
	,scopeLibDir: null
	,configFile: null
	,cwd: null
	,haxelibRepo: null
	,config: null
	,haxeInstallation: null
	,resolver: null
	,reload: function() {
		var src;
		try {
			src = js_node_Fs.readFileSync(this.configFile,{ encoding : "utf8"});
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(this.isGlobal) {
				throw new js__$Boot_HaxeError("Global config file " + this.configFile + " does not exist or cannot be opened");
			} else {
				throw new js__$Boot_HaxeError("Unable to open file " + this.configFile + " because " + Std.string(e));
			}
		}
		var tmp;
		try {
			tmp = JSON.parse(src);
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			new _$Sys_FileOutput(2).writeString("Invalid JSON in file " + this.configFile + ":\n\n" + src + "\n\n");
			throw js__$Boot_HaxeError.wrap(e1);
		}
		this.config = tmp;
		if(this.config.version == null) {
			throw new js__$Boot_HaxeError("No version set in " + this.configFile);
		}
		if(this.config.resolveLibs == null) {
			this.config.resolveLibs = this.isGlobal ? "mixed" : "scoped";
		}
		var _g = this.config.resolveLibs;
		switch(_g) {
		case "haxelib":case "mixed":case "scoped":
			break;
		default:
			var v = _g;
			throw new js__$Boot_HaxeError("invalid value " + v + " for `resolveLibs` in " + this.configFile);
		}
		this.haxeInstallation = this.getInstallation(this.config.version);
		this.resolver = new haxeshim_Resolver(this.cwd,this.scopeLibDir,this.config.resolveLibs,$bind(this,this.getDefault));
	}
	,getDefault: function(variable) {
		if(variable == "HAXESHIM_LIBCACHE") {
			return this.libCache;
		} else {
			return null;
		}
	}
	,'delete': function() {
		js_node_Fs.unlinkSync(this.configFile);
	}
	,reconfigure: function(changed) {
		var _g = 0;
		var _g1 = Reflect.fields(changed);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.config[f] = Reflect.field(changed,f);
		}
		js_node_Fs.writeFileSync(this.configFile,JSON.stringify(this.config,null,"  "));
	}
	,path: function(v) {
		if(haxe_io_Path.isAbsolute(v)) {
			return haxe_ds_Option.Some(v);
		} else if(StringTools.startsWith(v,"./") || StringTools.startsWith(v,"../")) {
			return haxe_ds_Option.Some("" + this.cwd + "/" + v);
		} else {
			return haxe_ds_Option.None;
		}
	}
	,getInstallation: function(version) {
		var _g = this.path(version);
		switch(_g[1]) {
		case 0:
			var path = _g[2];
			return new haxeshim_HaxeInstallation(path,version,this.haxelibRepo);
		case 1:
			return new haxeshim_HaxeInstallation("" + this.versionDir + "/" + version,version,this.haxelibRepo);
		}
	}
	,resolveThroughHaxelib: function(libs) {
		var _g = haxeshim_Exec["eval"](this.haxeInstallation.haxelib,this.cwd,["path"].concat(libs),this.haxeInstallation.env());
		switch(_g[1]) {
		case 0:
			if(_g[2].status == 0) {
				var stdout = _g[2].stdout;
				return haxeshim_Resolver.parseLines(stdout,function(cp) {
					return ["-cp",cp];
				});
			} else {
				var stdout1 = _g[2].stdout;
				var stderr = _g[2].stderr;
				var v = _g[2].status;
				new _$Sys_FileOutput(2).writeString(stdout1 + stderr);
				process.exit(v);
				return null;
			}
			break;
		case 1:
			var e = _g[2];
			return e.throwSelf();
		}
	}
	,interpolate: function(value) {
		return haxeshim_Resolver.interpolate(value,$bind(this,this.getDefault));
	}
	,parseDirectives: function(raw) {
		var ret = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = raw.split("\n").map(StringTools.trim);
		while(_g < _g1.length) {
			var line = _g1[_g];
			++_g;
			if(StringTools.startsWith(line,"#")) {
				var content = StringTools.ltrim(HxOverrides.substr(line,1,null));
				if(StringTools.startsWith(content,"@")) {
					var _g2 = content.indexOf(":");
					if(_g2 != -1) {
						var v = _g2;
						var name = HxOverrides.substr(content,1,v);
						var tmp;
						var _g21 = __map_reserved[name] != null ? ret.getReserved(name) : ret.h[name];
						if(_g21 == null) {
							var v1 = [];
							if(__map_reserved[name] != null) {
								ret.setReserved(name,v1);
							} else {
								ret.h[name] = v1;
							}
							tmp = v1;
						} else {
							var v2 = _g21;
							tmp = v2;
						}
						tmp.push(StringTools.ltrim(HxOverrides.substr(content,v + 1,null)));
					}
				}
			}
		}
		return ret;
	}
	,getDirectives: function(lib) {
		return tink_core__$Promise_Promise_$Impl_$.next(haxeshim_Fs.get(haxeshim_Resolver.libHxml(this.scopeLibDir,lib),{ fileName : "Scope.hx", lineNumber : 195, className : "haxeshim.Scope", methodName : "getDirectives"}),tink_core__$Promise_Next_$Impl_$.ofSafeSync($bind(this,this.parseDirectives)));
	}
	,getLibCommand: function(args) {
		var _gthis = this;
		args = args.map($bind(this,this.interpolate));
		var lib = args.shift();
		return tink_core__$Promise_Promise_$Impl_$.next(this.getDirectives(lib),function(d) {
			var _g = __map_reserved["run"] != null ? d.getReserved("run") : d.h["run"];
			if(_g == null) {
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"no @run directive found for library " + lib,{ fileName : "Scope.hx", lineNumber : 204, className : "haxeshim.Scope", methodName : "getLibCommand"})));
			} else {
				switch(_g.length) {
				case 0:
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"no @run directive found for library " + lib,{ fileName : "Scope.hx", lineNumber : 204, className : "haxeshim.Scope", methodName : "getLibCommand"})));
				case 1:
					var cmd = _g[0];
					var a1 = haxeshim_Os.IS_WINDOWS ? function(a11) {
						return StringTools.quoteWinArg(a11,true);
					} : StringTools.quoteUnixArg;
					var a12 = [cmd].concat(args.map(a1)).join(" ");
					var a2 = process.cwd();
					var a3 = _gthis.haxeInstallation.env();
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(function() {
						return haxeshim_Exec.shell(a12,a2,a3);
					}));
				default:
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"more than one @run directive for library " + lib,{ fileName : "Scope.hx", lineNumber : 209, className : "haxeshim.Scope", methodName : "getLibCommand"})));
				}
			}
		});
	}
	,getInstallationInstructions: function() {
		var missing = [];
		var instructions = [];
		var _g = 0;
		var _g1 = js_node_Fs.readdirSync(this.scopeLibDir);
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var path = "" + this.scopeLibDir + "/" + child;
			if(!js_node_Fs.statSync(path).isDirectory() && StringTools.endsWith(path,".hxml")) {
				var hxml = js_node_Fs.readFileSync(path,{ encoding : "utf8"});
				var args = haxeshim_Resolver.parseLines(hxml);
				var pos = 0;
				var max = args.length;
				while(pos < max) {
					var _g2 = args[pos++];
					if(_g2 == "-cp") {
						var cp = this.interpolate(args[pos++]);
						if(!sys_FileSystem.exists(cp)) {
							var dir = this.parseDirectives(hxml);
							var _g21 = __map_reserved["install"] != null ? dir.getReserved("install") : dir.h["install"];
							if(_g21 == null) {
								missing.push({ lib : child, cp : cp});
							} else if(_g21.length == 0) {
								missing.push({ lib : child, cp : cp});
							} else {
								var v = _g21;
								var _g22 = 0;
								while(_g22 < v.length) {
									var i = v[_g22];
									++_g22;
									instructions.push(i);
								}
							}
							pos = max;
						}
					}
				}
			}
		}
		return { missing : missing, instructions : instructions};
	}
	,resolve: function(args) {
		return this.resolver.resolve(args,$bind(this,this.resolveThroughHaxelib));
	}
	,__class__: haxeshim_Scope
};
var haxeshim_Neko = function() { };
haxeshim_Neko.__name__ = ["haxeshim","Neko"];
haxeshim_Neko.setEnv = function() {
	if(haxeshim_Os.IS_WINDOWS) {
		var _g = 0;
		var this1 = haxeshim_Neko.ENV;
		var _g1 = this1 == null ? [] : Reflect.fields(this1);
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			var v = haxeshim__$Env_Env_$Impl_$.get(haxeshim_Neko.ENV,k);
			process.env[k] = v;
		}
	}
};
var haxeshim_Resolver = function(cwd,libDir,mode,defaults) {
	this.cwd = haxe_io_Path.addTrailingSlash(haxe_io_Path.normalize(cwd));
	this.libDir = libDir;
	this.mode = mode;
	this.defaults = defaults;
};
haxeshim_Resolver.__name__ = ["haxeshim","Resolver"];
haxeshim_Resolver.interpolate = function(s,defaults) {
	if(s.indexOf("${") == -1) {
		return s;
	}
	var ret_b = "";
	var pos = 0;
	while(pos < s.length) {
		var _g = s.indexOf("${",pos);
		if(_g == -1) {
			ret_b += HxOverrides.substr(s,pos,null);
			break;
		} else {
			var v = _g;
			var len = v - pos;
			ret_b += len == null ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len);
			var start = v + 2;
			var end;
			var _g1 = s.indexOf("}",start);
			if(_g1 == -1) {
				throw new js__$Boot_HaxeError("unclosed interpolation in " + s);
			} else {
				var v1 = _g1;
				end = v1;
			}
			var name = HxOverrides.substr(s,start,end - start);
			var x;
			var _g11 = process.env[name];
			if(_g11 == null) {
				var _g12 = defaults(name);
				if(_g12 == null) {
					throw new js__$Boot_HaxeError("unknown variable " + name);
				} else {
					var v2 = _g12;
					x = v2;
				}
			} else if(_g11 == "") {
				var _g13 = defaults(name);
				if(_g13 == null) {
					throw new js__$Boot_HaxeError("unknown variable " + name);
				} else {
					var v3 = _g13;
					x = v3;
				}
			} else {
				var v4 = _g11;
				x = v4;
			}
			ret_b += Std.string(x);
			pos = end + 1;
		}
	}
	return ret_b;
};
haxeshim_Resolver.libHxml = function(libDir,libName) {
	return "" + libDir + "/" + libName + ".hxml";
};
haxeshim_Resolver.parseLines = function(source,normalize) {
	if(normalize == null) {
		normalize = function(x) {
			return [x];
		};
	}
	var ret = [];
	var _g = 0;
	var _g1 = source.split("\n").map(StringTools.trim);
	while(_g < _g1.length) {
		var line = _g1[_g];
		++_g;
		var _g2 = line.charAt(0);
		if(_g2 != null) {
			switch(_g2) {
			case "#":
				break;
			case "-":
				var _g21 = line.indexOf(" ");
				if(_g21 == -1) {
					ret.push(line);
				} else {
					var v = _g21;
					ret.push(HxOverrides.substr(line,0,v));
					ret.push(StringTools.trim(HxOverrides.substr(line,v,null)));
				}
				break;
			default:
				var _g22 = StringTools.trim(line);
				if(_g22 != "") {
					var v1 = _g22;
					var _g23 = 0;
					var _g3 = normalize(v1);
					while(_g23 < _g3.length) {
						var a = _g3[_g23];
						++_g23;
						ret.push(a);
					}
				}
			}
		}
	}
	return ret;
};
haxeshim_Resolver.removeComments = function(line) {
	var _g = line.indexOf("#");
	if(_g == -1) {
		return line;
	} else {
		var v = _g;
		return HxOverrides.substr(line,0,v);
	}
};
haxeshim_Resolver.prototype = {
	cwd: null
	,libDir: null
	,mode: null
	,ret: null
	,resolved: null
	,defaults: null
	,errors: null
	,resolve: function(args,haxelib) {
		var _gthis = this;
		this.ret = [];
		this.errors = [];
		this.resolved = new haxe_ds_StringMap();
		this.process(args);
		var _g = this.errors;
		if(_g.length != 0) {
			var v = _g;
			throw new js__$Boot_HaxeError(v.map(function(e) {
				return e.message;
			}).join("\n"));
		}
		var start = 0;
		var pos = 0;
		var result = [];
		var libs = function(args1) {
			var ret = [];
			var libs1 = [];
			var i = 0;
			var max;
			var _g1 = args1.indexOf("--run");
			if(_g1 == -1) {
				max = args1.length;
			} else {
				var v1 = _g1;
				max = v1;
			}
			while(i < max) {
				var _g2 = args1[i++];
				if(_g2 == "-lib") {
					libs1.push(args1[i++]);
				} else {
					var v2 = _g2;
					ret.push(v2);
				}
			}
			ret = ret.concat(args1.slice(max));
			if(libs1.length == 0) {
				return ret;
			} else {
				return haxelib(libs1).concat(ret);
			}
		};
		var flush = function() {
			var result1 = _gthis.ret.slice(start,pos);
			var result2 = libs(result1);
			result = result.concat(result2);
			_gthis.resolved = new haxe_ds_StringMap();
			start = pos;
		};
		while(pos < this.ret.length) {
			pos += 1;
			var _g11 = this.ret[pos - 1];
			switch(_g11) {
			case "--each":case "--next":
				flush();
				break;
			default:
			}
		}
		flush();
		return ["--cwd",this.cwd].concat(result.map($bind(this,this.relative)));
	}
	,relative: function(path) {
		if(StringTools.startsWith(path,this.cwd)) {
			return haxe_io_Path.normalize(HxOverrides.substr(path,this.cwd.length,null));
		} else {
			return path;
		}
	}
	,resolveInScope: function(lib) {
		var _this = this.resolved;
		if(__map_reserved[lib] != null ? _this.getReserved(lib) : _this.h[lib]) {
			return tink_core_Outcome.Success(tink_core_Noise.Noise);
		} else {
			var _g = haxeshim_Resolver.libHxml(this.libDir,lib);
			var notFound = _g;
			if(!sys_FileSystem.exists(notFound)) {
				return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Cannot resolve `-lib " + lib + "` because file " + notFound + " is missing",{ fileName : "Resolver.hx", lineNumber : 145, className : "haxeshim.Resolver", methodName : "resolveInScope"}));
			} else {
				var f = _g;
				this.resolved.set(lib,true);
				this.processHxml(f);
				return tink_core_Outcome.Success(tink_core_Noise.Noise);
			}
		}
	}
	,processHxml: function(file) {
		this.process(haxeshim_Resolver.parseLines(js_node_Fs.readFileSync(file,{ encoding : "utf8"})));
	}
	,process: function(args) {
		var _gthis = this;
		var i = 0;
		var max = args.length;
		var _g = [];
		var _g1 = 0;
		while(_g1 < args.length) {
			var a = args[_g1];
			++_g1;
			_g.push(haxeshim_Resolver.interpolate(a,this.defaults));
		}
		var args1 = _g;
		var next = function() {
			if(i >= max) {
				_gthis.errors.push(new tink_core_TypedError(null,"missing argument for " + args1[i - 1],{ fileName : "Resolver.hx", lineNumber : 194, className : "haxeshim.Resolver", methodName : "process"}));
				return "<MISSING>";
			} else {
				i += 1;
				return args1[i - 1];
			}
		};
		while(i < max) {
			i += 1;
			var _g11 = StringTools.trim(args1[i - 1]);
			switch(_g11) {
			case "":
				break;
			case "--cwd":
				this.cwd = haxe_io_Path.addTrailingSlash(this.absolute(next()));
				break;
			case "-cp":
				this.ret.push("-cp");
				this.ret.push(this.absolute(next()));
				break;
			case "-lib":
				var lib = [next()];
				var add = (function(lib1) {
					return function() {
						_gthis.ret.push("-lib");
						_gthis.ret.push(lib1[0]);
					};
				})(lib);
				var _g12 = this.mode;
				switch(_g12) {
				case "haxelib":
					add();
					break;
				case "mixed":
					if(lib[0].indexOf(":") != -1 || !tink_core_OutcomeTools.isSuccess(this.resolveInScope(lib[0]))) {
						add();
					}
					break;
				case "scoped":
					if(lib[0].indexOf(":") == -1) {
						var _g13 = this.resolveInScope(lib[0]);
						if(_g13[1] == 1) {
							var e = _g13[2];
							this.errors.push(e);
						}
					} else {
						throw new js__$Boot_HaxeError("Invalid `-lib " + lib[0] + "`. Version specification not supported in scoped mode");
					}
					break;
				}
				break;
			case "-resource":
				this.ret.push("-resource");
				var res = next();
				var tmp = this.ret;
				var _g14 = res.lastIndexOf("@");
				var tmp1;
				if(_g14 == -1) {
					tmp1 = res;
				} else {
					var v = _g14;
					tmp1 = HxOverrides.substr(res,0,v) + "@" + HxOverrides.substr(res,v + 1,null);
				}
				tmp.push(tmp1);
				break;
			case "-scoped-hxml":
				var target = this.absolute(next());
				var parts = haxeshim_Scope.seek({ cwd : haxe_io_Path.directory(target)}).resolve([target]);
				var _g15 = 0;
				while(_g15 < parts.length) {
					var arg = parts[_g15];
					++_g15;
					this.ret.push(arg);
				}
				break;
			default:
				var hxml = _g11;
				if(StringTools.endsWith(hxml,".hxml")) {
					this.processHxml(this.absolute(hxml));
				} else {
					var v1 = _g11;
					this.ret.push(v1);
				}
			}
		}
	}
	,absolute: function(path) {
		if(haxe_io_Path.isAbsolute(path)) {
			return haxe_io_Path.normalize(path);
		} else {
			return haxe_io_Path.join([this.cwd,path]);
		}
	}
	,__class__: haxeshim_Resolver
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_node_ChildProcess = require("child_process");
var js_node_Fs = require("fs");
var js_node_Net = require("net");
var js_node_Path = require("path");
var js_node_buffer_Buffer = require("buffer").Buffer;
var sys_FileSystem = function() { };
sys_FileSystem.__name__ = ["sys","FileSystem"];
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _ ) {
		haxe_CallStack.lastException = _;
		return false;
	}
};
sys_FileSystem.createDirectory = function(path) {
	try {
		js_node_Fs.mkdirSync(path);
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		if(e.code == "ENOENT") {
			sys_FileSystem.createDirectory(js_node_Path.dirname(path));
			js_node_Fs.mkdirSync(path);
		} else {
			var stat;
			try {
				stat = js_node_Fs.statSync(path);
			} catch( _ ) {
				haxe_CallStack.lastException = _;
				throw e;
			}
			if(!stat.isDirectory()) {
				throw e;
			}
		}
	}
};
var sys_io_File = function() { };
sys_io_File.__name__ = ["sys","io","File"];
sys_io_File.copy = function(srcPath,dstPath) {
	var src = js_node_Fs.openSync(srcPath,"r");
	var stat = js_node_Fs.fstatSync(src);
	var dst = js_node_Fs.openSync(dstPath,"w",stat.mode);
	var bytesRead;
	var pos = 0;
	while(true) {
		bytesRead = js_node_Fs.readSync(src,sys_io_File.copyBuf,0,65536,pos);
		if(!(bytesRead > 0)) {
			break;
		}
		js_node_Fs.writeSync(dst,sys_io_File.copyBuf,0,bytesRead);
		pos += bytesRead;
	}
	js_node_Fs.closeSync(src);
	js_node_Fs.closeSync(dst);
};
var sys_io_FileInput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
sys_io_FileInput.__name__ = ["sys","io","FileInput"];
sys_io_FileInput.__super__ = haxe_io_Input;
sys_io_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	fd: null
	,pos: null
	,readByte: function() {
		var buf = new js_node_buffer_Buffer(1);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,0,1,this.pos);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(e.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e));
			}
		}
		if(bytesRead == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.pos++;
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = new js_node_buffer_Buffer(data.buffer,data.byteOffset,data.byteLength);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,pos,len,this.pos);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(e.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e));
			}
		}
		if(bytesRead == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.pos += bytesRead;
		return bytesRead;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos[1]) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,eof: function() {
		return this.pos >= js_node_Fs.fstatSync(this.fd).size;
	}
	,__class__: sys_io_FileInput
});
var sys_io_FileSeek = { __ename__ : true, __constructs__ : ["SeekBegin","SeekCur","SeekEnd"] };
sys_io_FileSeek.SeekBegin = ["SeekBegin",0];
sys_io_FileSeek.SeekBegin.toString = $estr;
sys_io_FileSeek.SeekBegin.__enum__ = sys_io_FileSeek;
sys_io_FileSeek.SeekCur = ["SeekCur",1];
sys_io_FileSeek.SeekCur.toString = $estr;
sys_io_FileSeek.SeekCur.__enum__ = sys_io_FileSeek;
sys_io_FileSeek.SeekEnd = ["SeekEnd",2];
sys_io_FileSeek.SeekEnd.toString = $estr;
sys_io_FileSeek.SeekEnd.__enum__ = sys_io_FileSeek;
var tink_core_Annex = function(target) {
	this.target = target;
	this.registry = new haxe_ds_ObjectMap();
};
tink_core_Annex.__name__ = ["tink","core","Annex"];
tink_core_Annex.prototype = {
	target: null
	,registry: null
	,__class__: tink_core_Annex
};
var tink_core__$Any_Any_$Impl_$ = {};
tink_core__$Any_Any_$Impl_$.__name__ = ["tink","core","_Any","Any_Impl_"];
tink_core__$Any_Any_$Impl_$.__promote = function(this1) {
	return this1;
};
var tink_core__$Callback_Callback_$Impl_$ = {};
tink_core__$Callback_Callback_$Impl_$.__name__ = ["tink","core","_Callback","Callback_Impl_"];
tink_core__$Callback_Callback_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.toFunction = function(this1) {
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.invoke = function(this1,data) {
	if(tink_core__$Callback_Callback_$Impl_$.depth < 1000) {
		tink_core__$Callback_Callback_$Impl_$.depth++;
		this1(data);
		tink_core__$Callback_Callback_$Impl_$.depth--;
	} else {
		var _e = this1;
		var f = function(data1) {
			tink_core__$Callback_Callback_$Impl_$.invoke(_e,data1);
		};
		var a1 = data;
		tink_core__$Callback_Callback_$Impl_$.defer(function() {
			f(a1);
		});
	}
};
tink_core__$Callback_Callback_$Impl_$.ignore = function(cb) {
	return tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		tink_core__$Callback_Callback_$Impl_$.invoke(cb,tink_core_Noise.Noise);
	});
};
tink_core__$Callback_Callback_$Impl_$.fromNiladic = function(f) {
	var this1 = function(r) {
		f();
	};
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.fromMany = function(callbacks) {
	return function(v) {
		var _g = 0;
		while(_g < callbacks.length) {
			var callback = callbacks[_g];
			++_g;
			tink_core__$Callback_Callback_$Impl_$.invoke(callback,v);
		}
	};
};
tink_core__$Callback_Callback_$Impl_$.defer = function(f) {
	process.nextTick(f);
};
var tink_core__$Callback_LinkObject = function() { };
tink_core__$Callback_LinkObject.__name__ = ["tink","core","_Callback","LinkObject"];
tink_core__$Callback_LinkObject.prototype = {
	dissolve: null
	,__class__: tink_core__$Callback_LinkObject
};
var tink_core__$Callback_CallbackLink_$Impl_$ = {};
tink_core__$Callback_CallbackLink_$Impl_$.__name__ = ["tink","core","_Callback","CallbackLink_Impl_"];
tink_core__$Callback_CallbackLink_$Impl_$._new = function(link) {
	var this1 = new tink_core__$Callback_SimpleLink(link);
	return this1;
};
tink_core__$Callback_CallbackLink_$Impl_$.dissolve = function(this1) {
	if(this1 != null) {
		this1.dissolve();
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.toCallback = function(this1) {
	return function(_) {
		this1.dissolve();
	};
};
tink_core__$Callback_CallbackLink_$Impl_$.fromFunction = function(f) {
	var this1 = new tink_core__$Callback_SimpleLink(f);
	return this1;
};
tink_core__$Callback_CallbackLink_$Impl_$.join = function(a,b) {
	return new tink_core__$Callback_LinkPair(a,b);
};
tink_core__$Callback_CallbackLink_$Impl_$.fromMany = function(callbacks) {
	var this1 = new tink_core__$Callback_SimpleLink(function() {
		var _g = 0;
		while(_g < callbacks.length) {
			var cb = callbacks[_g];
			++_g;
			if(cb != null) {
				cb.dissolve();
			}
		}
	});
	return this1;
};
var tink_core__$Callback_SimpleLink = function(f) {
	this.f = f;
};
tink_core__$Callback_SimpleLink.__name__ = ["tink","core","_Callback","SimpleLink"];
tink_core__$Callback_SimpleLink.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_SimpleLink.prototype = {
	f: null
	,dissolve: function() {
		if(this.f != null) {
			this.f();
		}
	}
	,__class__: tink_core__$Callback_SimpleLink
};
var tink_core__$Callback_LinkPair = function(a,b) {
	this.dissolved = false;
	this.a = a;
	this.b = b;
};
tink_core__$Callback_LinkPair.__name__ = ["tink","core","_Callback","LinkPair"];
tink_core__$Callback_LinkPair.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_LinkPair.prototype = {
	a: null
	,b: null
	,dissolved: null
	,dissolve: function() {
		if(!this.dissolved) {
			this.dissolved = true;
			var this1 = this.a;
			if(this1 != null) {
				this1.dissolve();
			}
			var this2 = this.b;
			if(this2 != null) {
				this2.dissolve();
			}
		}
	}
	,__class__: tink_core__$Callback_LinkPair
};
var tink_core__$Callback_ListCell = function(cb,list) {
	if(cb == null) {
		throw new js__$Boot_HaxeError("callback expected but null received");
	}
	this.cb = cb;
	this.list = list;
};
tink_core__$Callback_ListCell.__name__ = ["tink","core","_Callback","ListCell"];
tink_core__$Callback_ListCell.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_ListCell.prototype = {
	list: null
	,cb: null
	,invoke: function(data) {
		if(this.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(this.cb,data);
		}
	}
	,clear: function() {
		this.list = null;
		this.cb = null;
	}
	,dissolve: function() {
		var _g = this.list;
		if(_g != null) {
			var v = _g;
			this.clear();
			HxOverrides.remove(v,this);
		}
	}
	,__class__: tink_core__$Callback_ListCell
};
var tink_core__$Callback_CallbackList_$Impl_$ = {};
tink_core__$Callback_CallbackList_$Impl_$.__name__ = ["tink","core","_Callback","CallbackList_Impl_"];
tink_core__$Callback_CallbackList_$Impl_$._new = function() {
	var this1 = [];
	return this1;
};
tink_core__$Callback_CallbackList_$Impl_$.get_length = function(this1) {
	return this1.length;
};
tink_core__$Callback_CallbackList_$Impl_$.add = function(this1,cb) {
	var node = new tink_core__$Callback_ListCell(cb,this1);
	this1.push(node);
	return node;
};
tink_core__$Callback_CallbackList_$Impl_$.invoke = function(this1,data) {
	var _g = 0;
	var _g1 = this1.slice();
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		if(cell.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cell.cb,data);
		}
	}
};
tink_core__$Callback_CallbackList_$Impl_$.clear = function(this1) {
	var _g = 0;
	var _g1 = this1.splice(0,this1.length);
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		cell.clear();
	}
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.isTinkError = true;
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
tink_core_TypedError.__name__ = ["tink","core","TypedError"];
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.ofJsError = function(e,pos) {
	return tink_core_TypedError.withData(500,e.message,e,pos);
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return tink_core_Outcome.Failure(e.isTinkError ? e : report == null ? tink_core_TypedError.withData(null,"Unexpected Error",e,pos) : report(e));
	}
};
tink_core_TypedError.reporter = function(code,message,pos) {
	return function(e) {
		return tink_core_TypedError.withData(code,message,e,pos);
	};
};
tink_core_TypedError.rethrow = function(any) {
	throw js__$Boot_HaxeError.wrap(any);
};
tink_core_TypedError.prototype = {
	message: null
	,code: null
	,data: null
	,pos: null
	,callStack: null
	,exceptionStack: null
	,isTinkError: null
	,printPos: function() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	,toString: function() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	,throwSelf: function() {
		throw new js__$Boot_HaxeError(this);
	}
	,__class__: tink_core_TypedError
};
var tink_core__$Error_Stack_$Impl_$ = {};
tink_core__$Error_Stack_$Impl_$.__name__ = ["tink","core","_Error","Stack_Impl_"];
tink_core__$Error_Stack_$Impl_$.toString = function(this1) {
	return haxe_CallStack.toString(this1);
};
var tink_core__$Future_FutureObject = function() { };
tink_core__$Future_FutureObject.__name__ = ["tink","core","_Future","FutureObject"];
tink_core__$Future_FutureObject.prototype = {
	name: null
	,map: null
	,flatMap: null
	,handle: null
	,gather: null
	,eager: null
	,__class__: tink_core__$Future_FutureObject
};
var tink_core__$Future_NeverFuture = function() {
	this.name = "never ever gonna happen";
};
tink_core__$Future_NeverFuture.__name__ = ["tink","core","_Future","NeverFuture"];
tink_core__$Future_NeverFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_NeverFuture.prototype = {
	name: null
	,map: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,flatMap: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,handle: function(callback) {
		return null;
	}
	,gather: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,eager: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,__class__: tink_core__$Future_NeverFuture
};
var tink_core_Noise = { __ename__ : true, __constructs__ : ["Noise"] };
tink_core_Noise.Noise = ["Noise",0];
tink_core_Noise.Noise.toString = $estr;
tink_core_Noise.Noise.__enum__ = tink_core_Noise;
var tink_core__$Future_FutureBase = function(list,init,result) {
	this.name = "future#" + tink_core__$Future_FutureBase.counter++;
	this.list = list;
	this.init = init;
	this.result = result;
};
tink_core__$Future_FutureBase.__name__ = ["tink","core","_Future","FutureBase"];
tink_core__$Future_FutureBase.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_FutureBase.cold = function(op) {
	var this1 = [];
	return new tink_core__$Future_FutureBase(this1,op,null);
};
tink_core__$Future_FutureBase.prototype = {
	name: null
	,result: null
	,list: null
	,init: null
	,cancel: null
	,handle: function(callback) {
		var _gthis = this;
		this.eager();
		var _g = this.list;
		if(_g == null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(callback,this.result);
			return null;
		} else {
			var v = _g;
			var ret = tink_core__$Callback_CallbackList_$Impl_$.add(v,callback);
			var this1 = new tink_core__$Callback_SimpleLink(function() {
				if(ret != null) {
					ret.dissolve();
				}
				if(v.length == 0 && _gthis.cancel != null) {
					_gthis.cancel();
				}
			});
			return this1;
		}
	}
	,map: function(f) {
		var _gthis = this;
		var this1 = [];
		return new tink_core__$Future_FutureBase(this1,function(done) {
			return _gthis.handle(function(v) {
				var tmp = f(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(done,tmp);
			});
		},null);
	}
	,flatMap: function(f) {
		var _gthis = this;
		var this1 = [];
		return new tink_core__$Future_FutureBase(this1,function(done) {
			var ret = [];
			var tmp = _gthis.handle(function(v) {
				if(ret != null) {
					var tmp1 = f(v).handle(done);
					ret.push(tmp1);
				}
			});
			ret.push(tmp);
			var this2 = new tink_core__$Callback_SimpleLink(function() {
				var _g = 0;
				while(_g < ret.length) {
					var l = ret[_g];
					++_g;
					if(l != null) {
						l.dissolve();
					}
				}
				ret = null;
			});
			return this2;
		},null);
	}
	,gather: function() {
		return this;
	}
	,eager: function() {
		var _gthis = this;
		if(this.init != null) {
			var cb = this.init;
			this.init = null;
			haxe_Log.trace("arm " + this.name,{ fileName : "Future.hx", lineNumber : 276, className : "tink.core._Future.FutureBase", methodName : "eager"});
			var link = cb($bind(this,this.trigger));
			if(link != null) {
				this.cancel = function() {
					if(link != null) {
						link.dissolve();
					}
					if(_gthis.list != null) {
						_gthis.init = cb;
						haxe_Log.trace("cancel! " + _gthis.name,{ fileName : "Future.hx", lineNumber : 283, className : "tink.core._Future.FutureBase", methodName : "eager"});
					} else {
						haxe_Log.trace("no cancel " + _gthis.name + " " + Std.string(_gthis.result),{ fileName : "Future.hx", lineNumber : 286, className : "tink.core._Future.FutureBase", methodName : "eager"});
					}
				};
			}
		}
		return this;
	}
	,trigger: function(result) {
		if(this.list == null) {
			return false;
		} else {
			haxe_Log.trace("trigger " + this.name,{ fileName : "Future.hx", lineNumber : 305, className : "tink.core._Future.FutureBase", methodName : "trigger"});
			var list = this.list;
			this.list = null;
			this.result = result;
			tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
			tink_core__$Callback_CallbackList_$Impl_$.clear(list);
			return true;
		}
	}
	,__class__: tink_core__$Future_FutureBase
};
var tink_core__$Future_Future_$Impl_$ = {};
tink_core__$Future_Future_$Impl_$.__name__ = ["tink","core","_Future","Future_Impl_"];
tink_core__$Future_Future_$Impl_$._new = function(f) {
	var this1;
	var this2 = [];
	this1 = new tink_core__$Future_FutureBase(this2,f,null);
	return this1;
};
tink_core__$Future_Future_$Impl_$.first = function(this1,other) {
	var this2 = [];
	return new tink_core__$Future_FutureBase(this2,function(done) {
		return tink_core__$Callback_CallbackLink_$Impl_$.fromMany([this1.handle(done),other.handle(done)]);
	},null);
};
tink_core__$Future_Future_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.map(f);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatMap = function(this1,next,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(next);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.next = function(this1,n) {
	return this1.flatMap(function(v) {
		return n(v);
	});
};
tink_core__$Future_Future_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(t) {
		var ret1 = other.map(function(a) {
			return merger(t,a);
		});
		return ret1;
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatten = function(f) {
	var ret = f.flatMap(function(inner) {
		return inner;
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		promise.then(function(a) {
			cb(tink_core_Outcome.Success(a));
		})["catch"](function(e) {
			var tmp = tink_core_Outcome.Failure(tink_core_TypedError.withData(null,e.message,e,{ fileName : "Future.hx", lineNumber : 72, className : "tink.core._Future.Future_Impl_", methodName : "ofJsPromise"}));
			cb(tmp);
		});
	});
};
tink_core__$Future_Future_$Impl_$.asPromise = function(s) {
	return s;
};
tink_core__$Future_Future_$Impl_$.ofMany = function(futures,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Future_FutureBase(null,null,[]);
	var _g = 0;
	while(_g < futures.length) {
		var f = [futures[_g]];
		++_g;
		var ret1 = ret.flatMap((function(f1) {
			return function(results) {
				var ret2 = (function() {
					return function(result) {
						return results.concat([result]);
					};
				})();
				var ret3 = f1[0].map(ret2);
				return ret3;
			};
		})(f));
		ret = ret1;
	}
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.fromMany = function(futures) {
	return tink_core__$Future_Future_$Impl_$.ofMany(futures);
};
tink_core__$Future_Future_$Impl_$.lazy = function(l) {
	var this1 = [];
	return new tink_core__$Future_FutureBase(this1,function(done) {
		tink_core__$Callback_Callback_$Impl_$.invoke(done,l.get());
		return null;
	},null);
};
tink_core__$Future_Future_$Impl_$.sync = function(v) {
	return new tink_core__$Future_FutureBase(null,null,v);
};
tink_core__$Future_Future_$Impl_$.async = function(f,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	var this1 = [];
	var ret = new tink_core__$Future_FutureBase(this1,function(done) {
		f(done);
		return null;
	},null);
	if(lazy) {
		return ret;
	} else {
		return ret.eager();
	}
};
tink_core__$Future_Future_$Impl_$.or = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.first(a,b);
};
tink_core__$Future_Future_$Impl_$.either = function(a,b) {
	var ret = a.map(haxe_ds_Either.Left);
	var ret1 = b.map(haxe_ds_Either.Right);
	return tink_core__$Future_Future_$Impl_$.first(ret,ret1);
};
tink_core__$Future_Future_$Impl_$.and = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.merge(a,b,function(a1,b1) {
		var this1 = new tink_core_MPair(a1,b1);
		return this1;
	});
};
tink_core__$Future_Future_$Impl_$._tryFailingFlatMap = function(f,map) {
	var ret = f.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return map(d);
		case 1:
			var f1 = o[2];
			return new tink_core__$Future_FutureBase(null,null,tink_core_Outcome.Failure(f1));
		}
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryFlatMap = function(f,map) {
	var ret = f.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			var ret1 = map(d).map(tink_core_Outcome.Success);
			return ret1.gather();
		case 1:
			var f1 = o[2];
			return new tink_core__$Future_FutureBase(null,null,tink_core_Outcome.Failure(f1));
		}
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryFailingMap = function(f,map) {
	var ret = f.map(function(o) {
		return tink_core_OutcomeTools.flatMap(o,tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError(map));
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryMap = function(f,map) {
	var ret = f.map(function(o) {
		return tink_core_OutcomeTools.map(o,map);
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._flatMap = function(f,map) {
	var ret = f.flatMap(map);
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._map = function(f,map) {
	var ret = f.map(map);
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$.trigger = function() {
	return new tink_core_FutureTrigger();
};
var tink_core__$Future_Futuristic_$Impl_$ = {};
tink_core__$Future_Futuristic_$Impl_$.__name__ = ["tink","core","_Future","Futuristic_Impl_"];
tink_core__$Future_Futuristic_$Impl_$.ofAny = function(v) {
	return new tink_core__$Future_FutureBase(null,null,v);
};
var tink_core_FutureTrigger = function() {
	var this1 = [];
	tink_core__$Future_FutureBase.call(this,this1,null,null);
};
tink_core_FutureTrigger.__name__ = ["tink","core","FutureTrigger"];
tink_core_FutureTrigger.__super__ = tink_core__$Future_FutureBase;
tink_core_FutureTrigger.prototype = $extend(tink_core__$Future_FutureBase.prototype,{
	asFuture: function() {
		return this;
	}
	,__class__: tink_core_FutureTrigger
});
var tink_core_JsPromiseTools = function() { };
tink_core_JsPromiseTools.__name__ = ["tink","core","JsPromiseTools"];
tink_core_JsPromiseTools.toSurprise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core_JsPromiseTools.toPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
var tink_core__$Lazy_Lazy_$Impl_$ = {};
tink_core__$Lazy_Lazy_$Impl_$.__name__ = ["tink","core","_Lazy","Lazy_Impl_"];
tink_core__$Lazy_Lazy_$Impl_$.get = function(this1) {
	return this1.get();
};
tink_core__$Lazy_Lazy_$Impl_$.ofFunc = function(f) {
	return new tink_core__$Lazy_LazyFunc(f);
};
tink_core__$Lazy_Lazy_$Impl_$.map = function(this1,f) {
	return this1.map(f);
};
tink_core__$Lazy_Lazy_$Impl_$.flatMap = function(this1,f) {
	return this1.flatMap(f);
};
tink_core__$Lazy_Lazy_$Impl_$.ofConst = function(c) {
	return new tink_core__$Lazy_LazyConst(c);
};
var tink_core__$Lazy_LazyObject = function() { };
tink_core__$Lazy_LazyObject.__name__ = ["tink","core","_Lazy","LazyObject"];
tink_core__$Lazy_LazyObject.prototype = {
	get: null
	,map: null
	,flatMap: null
	,__class__: tink_core__$Lazy_LazyObject
};
var tink_core__$Lazy_LazyConst = function(value) {
	this.value = value;
};
tink_core__$Lazy_LazyConst.__name__ = ["tink","core","_Lazy","LazyConst"];
tink_core__$Lazy_LazyConst.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyConst.prototype = {
	value: null
	,get: function() {
		return this.value;
	}
	,map: function(f) {
		return new tink_core__$Lazy_LazyConst(f(this.value));
	}
	,flatMap: function(f) {
		return f(this.value);
	}
	,__class__: tink_core__$Lazy_LazyConst
};
var tink_core__$Lazy_LazyFunc = function(f) {
	this.f = f;
};
tink_core__$Lazy_LazyFunc.__name__ = ["tink","core","_Lazy","LazyFunc"];
tink_core__$Lazy_LazyFunc.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyFunc.prototype = {
	f: null
	,result: null
	,get: function() {
		if(this.f != null) {
			this.result = this.f();
			this.f = null;
		}
		return this.result;
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var tmp = _gthis.get();
			return f(tmp);
		});
	}
	,flatMap: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var this1 = _gthis.get();
			return f(this1).get();
		});
	}
	,__class__: tink_core__$Lazy_LazyFunc
};
var tink_core_NamedWith = function(name,value) {
	this.name = name;
	this.value = value;
};
tink_core_NamedWith.__name__ = ["tink","core","NamedWith"];
tink_core_NamedWith.prototype = {
	name: null
	,value: null
	,__class__: tink_core_NamedWith
};
var tink_core_OptionTools = function() { };
tink_core_OptionTools.__name__ = ["tink","core","OptionTools"];
tink_core_OptionTools.force = function(o,pos) {
	if(o[1] == 0) {
		var v = o[2];
		return v;
	} else {
		throw new js__$Boot_HaxeError(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.or = function(o,l) {
	if(o[1] == 0) {
		var v = o[2];
		return v;
	} else {
		return l.get();
	}
};
tink_core_OptionTools.orNull = function(o) {
	if(o[1] == 0) {
		var v = o[2];
		return v;
	} else {
		return null;
	}
};
tink_core_OptionTools.filter = function(o,f) {
	if(o[1] == 0) {
		var _hx_tmp = f(o[2]);
		if(_hx_tmp == false) {
			return haxe_ds_Option.None;
		} else {
			return o;
		}
	} else {
		return o;
	}
};
tink_core_OptionTools.satisfies = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return f(v);
	} else {
		return false;
	}
};
tink_core_OptionTools.equals = function(o,v) {
	if(o[1] == 0) {
		var v1 = o[2];
		return v1 == v;
	} else {
		return false;
	}
};
tink_core_OptionTools.map = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return haxe_ds_Option.Some(f(v));
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.flatMap = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return f(v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.iterator = function(o) {
	return new tink_core_OptionIter(o);
};
tink_core_OptionTools.toArray = function(o) {
	if(o[1] == 0) {
		var v = o[2];
		return [v];
	} else {
		return [];
	}
};
var tink_core_OptionIter = function(o) {
	this.alive = true;
	if(o[1] == 0) {
		var v = o[2];
		this.value = v;
	} else {
		this.alive = false;
	}
};
tink_core_OptionIter.__name__ = ["tink","core","OptionIter"];
tink_core_OptionIter.prototype = {
	value: null
	,alive: null
	,hasNext: function() {
		return this.alive;
	}
	,next: function() {
		this.alive = false;
		return this.value;
	}
	,__class__: tink_core_OptionIter
};
var tink_core_Outcome = { __ename__ : true, __constructs__ : ["Success","Failure"] };
tink_core_Outcome.Success = function(data) { var $x = ["Success",0,data]; $x.__enum__ = tink_core_Outcome; $x.toString = $estr; return $x; };
tink_core_Outcome.Failure = function(failure) { var $x = ["Failure",1,failure]; $x.__enum__ = tink_core_Outcome; $x.toString = $estr; return $x; };
var tink_core_OutcomeTools = function() { };
tink_core_OutcomeTools.__name__ = ["tink","core","OutcomeTools"];
tink_core_OutcomeTools.sure = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		var failure = outcome[2];
		if(js_Boot.__instanceof(failure,tink_core_TypedError)) {
			return failure.throwSelf();
		} else {
			throw new js__$Boot_HaxeError(failure);
		}
		break;
	}
};
tink_core_OutcomeTools.toOption = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return haxe_ds_Option.Some(data);
	case 1:
		return haxe_ds_Option.None;
	}
};
tink_core_OutcomeTools.toOutcome = function(option,pos) {
	switch(option[1]) {
	case 0:
		var value = option[2];
		return tink_core_Outcome.Success(value);
	case 1:
		return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Some value expected but none found in " + pos.fileName + "@line " + pos.lineNumber,{ fileName : "Outcome.hx", lineNumber : 47, className : "tink.core.OutcomeTools", methodName : "toOutcome"}));
	}
};
tink_core_OutcomeTools.orNull = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		return null;
	}
};
tink_core_OutcomeTools.orUse = function(outcome,fallback) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.orTry = function(outcome,fallback) {
	switch(outcome[1]) {
	case 0:
		return outcome;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.equals = function(outcome,to) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data == to;
	case 1:
		return false;
	}
};
tink_core_OutcomeTools.map = function(outcome,transform) {
	switch(outcome[1]) {
	case 0:
		var a = outcome[2];
		return tink_core_Outcome.Success(transform(a));
	case 1:
		var f = outcome[2];
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.isSuccess = function(outcome) {
	if(outcome[1] == 0) {
		return true;
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatMap = function(o,mapper) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$.apply(mapper,o);
};
tink_core_OutcomeTools.swap = function(outcome,v) {
	switch(outcome[1]) {
	case 0:
		var a = outcome[2];
		return tink_core_Outcome.Success(v);
	case 1:
		var f = outcome[2];
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.attempt = function(f,report) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return tink_core_Outcome.Failure(report(e));
	}
};
tink_core_OutcomeTools.flatten = function(o) {
	switch(o[1]) {
	case 0:
		switch(o[2][1]) {
		case 0:
			var d = o[2][2];
			return tink_core_Outcome.Success(d);
		case 1:
			var f = o[2][2];
			return tink_core_Outcome.Failure(f);
		}
		break;
	case 1:
		var f1 = o[2];
		return tink_core_Outcome.Failure(f1);
	}
};
var tink_core__$Outcome_OutcomeMapper_$Impl_$ = {};
tink_core__$Outcome_OutcomeMapper_$Impl_$.__name__ = ["tink","core","_Outcome","OutcomeMapper_Impl_"];
tink_core__$Outcome_OutcomeMapper_$Impl_$._new = function(f) {
	var this1 = { f : f};
	return this1;
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.apply = function(this1,o) {
	return this1.f(o);
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return f(d);
		case 1:
			var f1 = o[2];
			return tink_core_Outcome.Failure(f1);
		}
	});
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withEitherError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			var _g = f(d);
			switch(_g[1]) {
			case 0:
				var d1 = _g[2];
				return tink_core_Outcome.Success(d1);
			case 1:
				var f1 = _g[2];
				return tink_core_Outcome.Failure(haxe_ds_Either.Right(f1));
			}
			break;
		case 1:
			var f2 = o[2];
			return tink_core_Outcome.Failure(haxe_ds_Either.Left(f2));
		}
	});
};
var tink_core__$Pair_Pair_$Impl_$ = {};
tink_core__$Pair_Pair_$Impl_$.__name__ = ["tink","core","_Pair","Pair_Impl_"];
tink_core__$Pair_Pair_$Impl_$._new = function(a,b) {
	var this1 = new tink_core_MPair(a,b);
	return this1;
};
tink_core__$Pair_Pair_$Impl_$.get_a = function(this1) {
	return this1.a;
};
tink_core__$Pair_Pair_$Impl_$.get_b = function(this1) {
	return this1.b;
};
tink_core__$Pair_Pair_$Impl_$.toBool = function(this1) {
	return this1 != null;
};
tink_core__$Pair_Pair_$Impl_$.isNil = function(this1) {
	return this1 == null;
};
tink_core__$Pair_Pair_$Impl_$.nil = function() {
	return null;
};
var tink_core_MPair = function(a,b) {
	this.a = a;
	this.b = b;
};
tink_core_MPair.__name__ = ["tink","core","MPair"];
tink_core_MPair.prototype = {
	a: null
	,b: null
	,__class__: tink_core_MPair
};
var tink_core__$Promise_Promise_$Impl_$ = {};
tink_core__$Promise_Promise_$Impl_$.__name__ = ["tink","core","_Promise","Promise_Impl_"];
tink_core__$Promise_Promise_$Impl_$.eager = function(this1) {
	return this1.eager();
};
tink_core__$Promise_Promise_$Impl_$.map = function(this1,f) {
	var ret = this1.map(f);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.flatMap = function(this1,f) {
	var ret = this1.flatMap(f);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.tryRecover = function(this1,f) {
	var ret = this1.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return new tink_core__$Future_FutureBase(null,null,o);
		case 1:
			var e = o[2];
			return f(e);
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.recover = function(this1,f) {
	var ret = this1.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return new tink_core__$Future_FutureBase(null,null,d);
		case 1:
			var e = o[2];
			return f(e);
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.mapError = function(this1,f) {
	var ret = this1.map(function(o) {
		switch(o[1]) {
		case 0:
			return o;
		case 1:
			var e = o[2];
			return tink_core_Outcome.Failure(f(e));
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.handle = function(this1,cb) {
	return this1.handle(cb);
};
tink_core__$Promise_Promise_$Impl_$.noise = function(this1) {
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(v) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
	});
};
tink_core__$Promise_Promise_$Impl_$.isSuccess = function(this1) {
	var ret = this1.map(function(o) {
		return tink_core_OutcomeTools.isSuccess(o);
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.next = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return f(d);
		case 1:
			var f1 = o[2];
			return new tink_core__$Future_FutureBase(null,null,tink_core_Outcome.Failure(f1));
		}
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Promise_Promise_$Impl_$.swap = function(this1,v) {
	return tink_core__$Future_Future_$Impl_$._tryMap(this1,function(_) {
		return v;
	});
};
tink_core__$Promise_Promise_$Impl_$.swapError = function(this1,e) {
	return tink_core__$Promise_Promise_$Impl_$.mapError(this1,function(_) {
		return e;
	});
};
tink_core__$Promise_Promise_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(t) {
		return tink_core__$Promise_Promise_$Impl_$.next(other,function(a) {
			return merger(t,a);
		},false);
	},gather);
};
tink_core__$Promise_Promise_$Impl_$.and = function(a,b) {
	return tink_core__$Promise_Promise_$Impl_$.merge(a,b,function(a1,b1) {
		var this1 = new tink_core_MPair(a1,b1);
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(this1));
	});
};
tink_core__$Promise_Promise_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core__$Promise_Promise_$Impl_$.ofSpecific = function(s) {
	return s;
};
tink_core__$Promise_Promise_$Impl_$.ofFuture = function(f) {
	var ret = f.map(tink_core_Outcome.Success);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.ofOutcome = function(o) {
	return new tink_core__$Future_FutureBase(null,null,o);
};
tink_core__$Promise_Promise_$Impl_$.ofError = function(e) {
	return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(e));
};
tink_core__$Promise_Promise_$Impl_$.ofData = function(d) {
	return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(d));
};
tink_core__$Promise_Promise_$Impl_$.lazy = function(p) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		p.get().handle(cb);
	},true);
};
tink_core__$Promise_Promise_$Impl_$.inParallel = function(a,lazy) {
	if(a.length == 0) {
		return new tink_core__$Future_FutureBase(null,null,tink_core_Outcome.Success([]));
	} else {
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			var result = [];
			var pending = a.length;
			var links = null;
			var sync = false;
			var done = function(o) {
				if(links == null) {
					sync = true;
				} else if(links != null) {
					links.dissolve();
				}
				cb(o);
			};
			var fail = function(e) {
				done(tink_core_Outcome.Failure(e));
			};
			var set = function(index,value) {
				result[index] = value;
				if((pending -= 1) == 0) {
					done(tink_core_Outcome.Success(result));
				}
			};
			var linkArray = [];
			var _g1 = 0;
			var _g = a.length;
			while(_g1 < _g) {
				var i = [_g1++];
				if(sync) {
					break;
				}
				var i1 = i[0];
				var tmp = (function(i2) {
					return function(o1) {
						switch(o1[1]) {
						case 0:
							var v = o1[2];
							set(i2[0],v);
							break;
						case 1:
							var e1 = o1[2];
							fail(e1);
							break;
						}
					};
				})(i);
				linkArray.push(a[i1].handle(tmp));
			}
			links = tink_core__$Callback_CallbackLink_$Impl_$.fromMany(linkArray);
			if(sync) {
				if(links != null) {
					links.dissolve();
				}
			}
		},lazy);
	}
};
tink_core__$Promise_Promise_$Impl_$.inSequence = function(a) {
	var loop = null;
	loop = function(index) {
		if(index == a.length) {
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success([]));
		} else {
			return tink_core__$Promise_Promise_$Impl_$.next(a[index],function(head) {
				return tink_core__$Promise_Promise_$Impl_$.next(loop(index + 1),function(tail) {
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success([head].concat(tail)));
				});
			});
		}
	};
	var loop1 = loop;
	return loop1(0);
};
tink_core__$Promise_Promise_$Impl_$.lift = function(p) {
	return p;
};
var tink_core__$Promise_Next_$Impl_$ = {};
tink_core__$Promise_Next_$Impl_$.__name__ = ["tink","core","_Promise","Next_Impl_"];
tink_core__$Promise_Next_$Impl_$.ofSafe = function(f) {
	return function(x) {
		return new tink_core__$Future_FutureBase(null,null,f(x));
	};
};
tink_core__$Promise_Next_$Impl_$.ofSync = function(f) {
	return function(x) {
		var ret = f(x).map(tink_core_Outcome.Success);
		return ret.gather();
	};
};
tink_core__$Promise_Next_$Impl_$.ofSafeSync = function(f) {
	return function(x) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(f(x)));
	};
};
tink_core__$Promise_Next_$Impl_$._chain = function(a,b) {
	return function(v) {
		return tink_core__$Promise_Promise_$Impl_$.next(a(v),b);
	};
};
var tink_core__$Promise_Recover_$Impl_$ = {};
tink_core__$Promise_Recover_$Impl_$.__name__ = ["tink","core","_Promise","Recover_Impl_"];
tink_core__$Promise_Recover_$Impl_$.ofSync = function(f) {
	return function(e) {
		return new tink_core__$Future_FutureBase(null,null,f(e));
	};
};
var tink_core__$Promise_Combiner_$Impl_$ = {};
tink_core__$Promise_Combiner_$Impl_$.__name__ = ["tink","core","_Promise","Combiner_Impl_"];
tink_core__$Promise_Combiner_$Impl_$.ofSafe = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_FutureBase(null,null,f(x1,x2));
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSync = function(f) {
	return function(x1,x2) {
		var ret = f(x1,x2).map(tink_core_Outcome.Success);
		return ret.gather();
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSafeSync = function(f) {
	return function(x1,x2) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(f(x1,x2)));
	};
};
var tink_core__$Ref_Ref_$Impl_$ = {};
tink_core__$Ref_Ref_$Impl_$.__name__ = ["tink","core","_Ref","Ref_Impl_"];
tink_core__$Ref_Ref_$Impl_$._new = function() {
	var this1;
	var this2 = new Array(1);
	this1 = this2;
	return this1;
};
tink_core__$Ref_Ref_$Impl_$.get_value = function(this1) {
	return this1[0];
};
tink_core__$Ref_Ref_$Impl_$.set_value = function(this1,param) {
	return this1[0] = param;
};
tink_core__$Ref_Ref_$Impl_$.toString = function(this1) {
	return "@[" + Std.string(this1[0]) + "]";
};
tink_core__$Ref_Ref_$Impl_$.to = function(v) {
	var this1;
	var this2 = new Array(1);
	this1 = this2;
	var ret = this1;
	ret[0] = v;
	return ret;
};
var tink_core__$Signal_Signal_$Impl_$ = {};
tink_core__$Signal_Signal_$Impl_$.__name__ = ["tink","core","_Signal","Signal_Impl_"];
tink_core__$Signal_Signal_$Impl_$._new = function(f) {
	var this1 = new tink_core__$Signal_SimpleSignal(f);
	return this1;
};
tink_core__$Signal_Signal_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			var this3 = f(result);
			tink_core__$Callback_Callback_$Impl_$.invoke(cb,this3);
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.flatMap = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			f(result).handle(cb);
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.filter = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			if(f(result)) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,result);
			}
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.join = function(this1,other,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return new tink_core__$Callback_LinkPair(this1.handle(cb),other.handle(cb));
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.next = function(this1) {
	var ret = new tink_core_FutureTrigger();
	var link = null;
	var immediate = false;
	link = this1.handle(function(v) {
		ret.trigger(v);
		if(link == null) {
			immediate = true;
		} else if(link != null) {
			link.dissolve();
		}
	});
	if(immediate) {
		if(link != null) {
			link.dissolve();
		}
	}
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.noise = function(this1) {
	return tink_core__$Signal_Signal_$Impl_$.map(this1,function(_) {
		return tink_core_Noise.Noise;
	});
};
tink_core__$Signal_Signal_$Impl_$.gather = function(this1) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	this1.handle(function(x) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(ret.handlers,x);
	});
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.generate = function(generator) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	generator($bind(ret,ret.trigger));
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.trigger = function() {
	return new tink_core_SignalTrigger();
};
tink_core__$Signal_Signal_$Impl_$.ofClassical = function(add,remove,gather) {
	if(gather == null) {
		gather = true;
	}
	var this1 = new tink_core__$Signal_SimpleSignal(function(cb) {
		var f = function(a) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cb,a);
		};
		add(f);
		var this2;
		var f1 = remove;
		var a1 = f;
		this2 = new tink_core__$Callback_SimpleLink(function() {
			f1(a1);
		});
		return this2;
	});
	var ret = this1;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
var tink_core_SignalObject = function() { };
tink_core_SignalObject.__name__ = ["tink","core","SignalObject"];
tink_core_SignalObject.prototype = {
	handle: null
	,__class__: tink_core_SignalObject
};
var tink_core__$Signal_SimpleSignal = function(f) {
	this.f = f;
};
tink_core__$Signal_SimpleSignal.__name__ = ["tink","core","_Signal","SimpleSignal"];
tink_core__$Signal_SimpleSignal.__interfaces__ = [tink_core_SignalObject];
tink_core__$Signal_SimpleSignal.prototype = {
	f: null
	,handle: function(cb) {
		return this.f(cb);
	}
	,__class__: tink_core__$Signal_SimpleSignal
};
var tink_core_SignalTrigger = function() {
	var this1 = [];
	this.handlers = this1;
};
tink_core_SignalTrigger.__name__ = ["tink","core","SignalTrigger"];
tink_core_SignalTrigger.__interfaces__ = [tink_core_SignalObject];
tink_core_SignalTrigger.prototype = {
	handlers: null
	,trigger: function(event) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(this.handlers,event);
	}
	,getLength: function() {
		return this.handlers.length;
	}
	,handle: function(cb) {
		return tink_core__$Callback_CallbackList_$Impl_$.add(this.handlers,cb);
	}
	,clear: function() {
		tink_core__$Callback_CallbackList_$Impl_$.clear(this.handlers);
	}
	,asSignal: function() {
		return this;
	}
	,__class__: tink_core_SignalTrigger
};
var travix_Logger = function() { };
travix_Logger.__name__ = ["travix","Logger"];
travix_Logger.print = function(s) {
	process.stdout.write(s == null ? "null" : "" + s);
};
travix_Logger.println = function(s) {
	process.stdout.write(s == null ? "null" : "" + s);
	process.stdout.write("\n");
};
travix_Logger.exit = function(code) {
	process.exit(code);
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
StringTools.winMetaCharacters = [32,40,41,37,33,94,34,60,62,38,124,10,13,44,59];
haxe_ds_ObjectMap.count = 0;
haxeshim_Os.IS_WINDOWS = Sys.systemName() == "Windows";
haxeshim_Os.DELIMITER = haxeshim_Os.IS_WINDOWS ? ";" : ":";
haxeshim_HaxeInstallation.EXT = haxeshim_Os.IS_WINDOWS ? ".exe" : "";
haxeshim__$LibResolution_LibResolution_$Impl_$.Scoped = "scoped";
haxeshim__$LibResolution_LibResolution_$Impl_$.Mixed = "mixed";
haxeshim__$LibResolution_LibResolution_$Impl_$.Haxelib = "haxelib";
haxeshim_Scope.CONFIG_FILE = ".haxerc";
haxeshim_Scope.DEFAULT_ROOT = (function($this) {
	var $r;
	var _g = process.env["HAXESHIM_ROOT"];
	$r = _g == null ? process.env[haxeshim_Os.IS_WINDOWS ? "APPDATA" : "HOME"] + "/haxe" : _g == "" ? process.env[haxeshim_Os.IS_WINDOWS ? "APPDATA" : "HOME"] + "/haxe" : (function($this) {
		var $r;
		var v = _g;
		$r = v;
		return $r;
	}($this));
	return $r;
}(this));
haxeshim_Neko.PATH = haxeshim_Os.slashes(haxeshim_Scope.DEFAULT_ROOT + "/neko");
haxeshim_Neko.ENV = (function($this) {
	var $r;
	var varName;
	var _g = Sys.systemName();
	switch(_g) {
	case "Mac":
		varName = "DYLD_LIBRARY_PATH";
		break;
	case "Windows":
		varName = "PATH";
		break;
	default:
		varName = "LD_LIBRARY_PATH";
	}
	var _g1 = process.env[varName];
	$r = _g1 == null ? (function($this) {
		var $r;
		var _g11 = new haxe_ds_StringMap();
		{
			var value = haxeshim_Neko.PATH;
			if(__map_reserved[varName] != null) {
				_g11.setReserved(varName,value);
			} else {
				_g11.h[varName] = value;
			}
		}
		$r = haxeshim__$Env_Env_$Impl_$.ofMap(_g11);
		return $r;
	}($this)) : (function($this) {
		var $r;
		var withNeko = _g1;
		$r = withNeko.indexOf(haxeshim_Neko.PATH) != -1 ? haxeshim__$Env_Env_$Impl_$.ofVars({ }) : (function($this) {
			var $r;
			var v = _g1;
			var _g12 = new haxe_ds_StringMap();
			{
				var value1 = v + haxeshim_Os.DELIMITER + haxeshim_Neko.PATH;
				if(__map_reserved[varName] != null) {
					_g12.setReserved(varName,value1);
				} else {
					_g12.h[varName] = value1;
				}
			}
			$r = haxeshim__$Env_Env_$Impl_$.ofMap(_g12);
			return $r;
		}($this));
		return $r;
	}($this));
	return $r;
}(this));
js_Boot.__toStr = ({ }).toString;
sys_io_File.copyBuf = new js_node_buffer_Buffer(65536);
tink_core__$Callback_Callback_$Impl_$.depth = 0;
tink_core__$Callback_Callback_$Impl_$.MAX_DEPTH = 1000;
tink_core__$Future_NeverFuture.inst = new tink_core__$Future_NeverFuture();
tink_core__$Future_FutureBase.counter = 0;
tink_core__$Future_Future_$Impl_$.NOISE = new tink_core__$Future_FutureBase(null,null,tink_core_Noise.Noise);
tink_core__$Future_Future_$Impl_$.NEVER = tink_core__$Future_NeverFuture.inst;
tink_core__$Promise_Promise_$Impl_$.NOISE = new tink_core__$Future_FutureBase(null,null,tink_core_Outcome.Success(tink_core_Noise.Noise));
tink_core__$Promise_Promise_$Impl_$.NEVER = (function($this) {
	var $r;
	var ret = tink_core__$Future_Future_$Impl_$.NEVER.map(tink_core_Outcome.Success);
	$r = ret.gather();
	return $r;
}(this));
RunTests.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
